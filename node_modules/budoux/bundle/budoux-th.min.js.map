{
  "version": 3,
  "sources": ["../src/data/models/th.ts", "../src/dom-browser.ts", "../src/parser.ts", "../src/html_processor.ts", "../src/index.ts", "../src/webcomponents/budoux-base.ts", "../src/webcomponents/budoux-th.ts"],
  "sourcesContent": ["export const model: {[key:string]: {[key:string]: number}} = {\"UW3\":{\" \":4150,\"\u0E40\":-5437,\"\u0E19\":1008,\"\u0E07\":1122,\"\u0E31\":-3075,\"\u0E30\":1494,\"\u0E48\":862,\"\u0E44\":-5122,\"\u0E22\":868,\"\u0E41\":-5772,\"\u0E1A\":630,\"\u0E2B\":-4445,\"\u0E04\":-769,\"\u0E01\":576,\"\u0E32\":127,\"\u0E14\":964,\"\u0E35\":310,\"\u0E21\":725,\"\u0E34\":-1326,\"\u0E49\":66,\"\u0E2A\":-984,\"\u0E4C\":1318,\"\u0E27\":363,\"\u0E43\":-4337,\"\u0E46\":3081,\"\u0E42\":-3297,\"\u0E17\":-846,\"\u0E38\":-1016,\"(\":1340,\"-\":1858,\"a\":-541,\"\u0E37\":-721,\"\u0E02\":-1009,\"!\":2180,\"e\":-550,\"\u0E1E\":-466,\"\u200B\":-3387,\"n\":-628,\"\u0E0A\":-1071,\".\":1110,\"i\":-828,\"?\":1953,\"0\":194,\"\u0E39\":111,\"5\":1080,\"\u0E47\":-1558,\"\u0E1C\":-1945,\"r\":-393,\"\u201C\":3487,\"\u0E1F\":-78,\"t\":-696,\")\":1982,\"o\":-277,\"/\":871,\"4\":899,\"\u3160\":2154,\"3\":583,\"\u2014\":2611,\"\u0E33\":-260,\"\u2026\":1806,\"\u2018\":2391,\"\u0E23\":-352,\"\\\"\":1837,\"u\":-501,\"\u0E08\":49,\"\u0E2E\":-1244,\"[\":1891,\"\uFE0F\":1355,\"\u0E4A\":-867,\"+\":801,\"y\":716,\"\u2571\":1265,\"\u0E0B\":-636,\"\u0E2D\":-128,\"k\":-633,\"%\":476,\"\u0E1B\":-173,\">\":184,\"s\":-26,\"C\":-357,\"\u0E15\":16,\"_\":-117,\"R\":-200,\"S\":-219,\"9\":304,\"2\":96,\"\u0E25\":101,\"N\":-305,\"m\":178,\"\u0E3F\":691,\"\u0E09\":-314,\"1\":-99,\"\u2019\":175,\"]\":147},\"UW4\":{\" \":4562,\"\u0E32\":-6029,\"\u0E48\":-6076,\"\u0E40\":2104,\"\u0E49\":-6080,\"\u0E31\":-5721,\"\u0E44\":1521,\"\u0E35\":-6019,\"\u0E04\":773,\"\u0E07\":-2384,\"\u0E41\":2044,\"\u0E30\":-4962,\"\u0E19\":-1344,\"\u0E22\":-1586,\"\u0E34\":-4643,\"\u0E2A\":894,\"\u0E43\":2365,\"\u0E01\":-300,\"\u0E17\":388,\"\u0E08\":330,\"\u0E46\":4575,\"\u0E23\":-611,\"\u0E02\":449,\"\u0E27\":-1269,\"\u0E2B\":878,\"\u0E42\":999,\"\u0E39\":-4855,\"\u0E38\":-3993,\"\u0E37\":-4435,\"\u0E15\":-177,\"\u0E1B\":520,\"\u0E4C\":-3210,\"\u0E1C\":1023,\"\u0E1E\":742,\"!\":3001,\"\u0E2D\":-347,\"\u0E0A\":313,\"\u0E47\":-2730,\"\u0E33\":-2716,\")\":2880,\"e\":-771,\"\u0E36\":-3515,\"\u0E14\":-992,\"-\":2083,\"\u0E21\":-1178,\"a\":-462,\"1\":1128,\"?\":2275,\"\u0E16\":248,\"%\":1299,\"i\":-945,\"\u200B\":3044,\"o\":-961,\"0\":-1553,\"2\":1027,\"n\":-561,\"\u201D\":4154,\"5\":612,\"3\":609,\"\u0E13\":-1619,\"r\":-560,\"/\":1206,\"\u0E1A\":-426,\"\u2014\":655,\"\\\"\":2854,\"\u2019\":1549,\"\u0E29\":-2136,\"'\":2061,\"6\":1094,\"\u0E4A\":-1961,\"H\":1334,\"4\":734,\"\u0E18\":-343,\"l\":-217,\"S\":1054,\"8\":-209,\"\u0E4B\":-1314,\"u\":-406,\"+\":610,\"h\":-228,\"\u3160\":1070,\"J\":1989,\"B\":54,\"<\":2484,\"\u0E2E\":651,\"\u0E0D\":-545,\"]\":1594,\"*\":1411,\"A\":733,\"L\":574,\"G\":369,\"t\":-185,\"F\":214,\"x\":-530,\"z\":-258,\"d\":-149,\"=\":883,\"m\":351,\"&\":-401,\"9\":-148,\"P\":-6,\"U\":-36,\"\u0E25\":-82,\"f\":126,\"w\":-65,\".\":-59,\"\u0E0F\":-130,\"T\":14,\"\u0E20\":-17,\"D\":-14},\"UW2\":{\" \":-743,\"\u0E40\":-2180,\"\u0E19\":-263,\"\u0E31\":509,\"\u0E32\":996,\"\u0E07\":-694,\"\u0E49\":413,\"\u0E21\":189,\"\u0E2D\":226,\"\u0E35\":39,\"\u0E44\":753,\"\u0E34\":524,\"\u0E23\":-233,\"\u0E48\":321,\"\u0E2A\":-575,\"\u0E14\":590,\"\u0E38\":645,\"\u0E41\":-485,\"\u0E43\":947,\"\u0E42\":-1027,\"\u0E1B\":-133,\"\u0E1A\":-323,\"\u0E47\":347,\"\u0E30\":-517,\"\u0E15\":528,\"\u0E04\":518,\"\u0E27\":573,\"a\":-339,\"e\":-461,\"\u0E01\":-260,\"\u0E1C\":1021,\"n\":-492,\"0\":402,\"\u0E02\":311,\"\u0E0B\":-495,\"\u0E36\":530,\"\u0E22\":369,\"i\":-540,\"1\":273,\"\u0E25\":-9,\"t\":-627,\"\u0E0A\":-134,\"\u0E1E\":304,\"\u0E20\":-58,\"y\":-504,\"\u0E16\":-103,\"5\":21,\"\u0E17\":17,\"\u0E18\":498,\"\u0E39\":404,\"^\":520,\".\":152,\"S\":-364,\"\u0E2B\":61,\"l\":-472,\"w\":-549,\"\u0E2E\":-218,\"C\":-894,\"\u0E4C\":114,\"8\":-192,\"m\":270,\"H\":-352,\"_\":-98,\"k\":-419,\"\u0E4B\":788,\"V\":-133,\"\u0E28\":438,\"T\":-321,\"J\":-941,\"D\":-232,\"!\":221,\"?\":84,\"p\":-237,\"P\":10,\"\u0E11\":559,\"r\":-23,\"'\":-208,\"\u2014\":243,\"A\":-23},\"UW5\":{\" \":-471,\"\u0E35\":1819,\"\u0E31\":1772,\"\u0E32\":1184,\"\u0E40\":-512,\"\u0E30\":2097,\"\u0E01\":-248,\"\u0E07\":487,\"\u0E34\":1236,\"\u0E2D\":916,\"\u0E38\":1745,\"\u0E39\":1878,\"\u0E48\":2005,\"\u0E44\":-951,\"\u0E33\":2511,\"\u0E25\":331,\"\u0E23\":470,\"\u0E49\":1409,\"\u0E4C\":-3175,\"\u0E15\":-516,\"\u0E04\":-306,\"\u0E08\":-843,\"\u0E36\":1641,\"\u0E1B\":144,\"\u0E37\":1671,\"\u0E1A\":-164,\"\u0E27\":671,\"\u0E2A\":-260,\"e\":-294,\"\u0E21\":-329,\"\u0E02\":-292,\"\u0E41\":-551,\"\u0E2B\":-10,\"5\":480,\"0\":104,\"a\":-247,\"\u0E0B\":-298,\"\u0E16\":287,\"\u0E46\":-528,\"\u0E43\":-88,\"\u0E2E\":-566,\"\u0E1F\":-141,\"2\":-612,\".\":40,\"r\":-280,\"\u0E14\":344,\"h\":526,\"\u0E42\":-165,\"1\":411,\"\u0E19\":108,\"R\":-330,\"C\":-539,\"\u0E47\":858,\"\u0E1C\":-436,\"B\":-951,\"S\":-126,\"o\":166,\"z\":-1265,\"F\":29,\"x\":-454,\"-\":250,\"\uFE0F\":1030,\"4\":156,\"\u0E4A\":769,\"\u0E09\":337,\"\u0E22\":-113,\"V\":-196,\"t\":165,\"_\":-219,\"\u0E18\":-730,\"%\":-433,\"3\":-161,\"9\":137,\"i\":52,\"\u0E0A\":37,\"\u0E4B\":237,\"/\":163,\",\":-134,\"\u0E0F\":128,\"\u0E17\":-8},\"UW6\":{\"\u0E49\":634,\"\u0E48\":397,\" \":-292,\"\u0E32\":198,\"\u0E07\":235,\"\u0E01\":439,\"\u0E35\":-52,\"\u0E30\":635,\"\u0E27\":350,\"\u0E4C\":-2331,\"a\":-811,\"\u0E1A\":553,\"\u0E19\":-10,\"\u0E21\":54,\"e\":-343,\"0\":373,\"\u0E34\":277,\"\u0E47\":397,\"\u0E37\":473,\"\u0E08\":-179,\"\u0E22\":44,\"i\":-539,\"\u0E42\":280,\"\u0E14\":330,\"r\":-241,\"\u0E17\":-108,\"\u0E1E\":-141,\"\u0E39\":255,\".\":15,\"\u0E04\":-139,\"\u0E4A\":1164,\"D\":-1206,\"n\":-264,\"\u0E0A\":-295,\"\u0E25\":-101,\"\u0E41\":-76,\"\u0E1F\":607,\"\u0E15\":-105,\"\u0E44\":-195,\"\u0E31\":227,\"s\":637,\"\u0E16\":-261,\"\u0E40\":217,\"\u0E2D\":83,\"\u0E1B\":6,\"l\":-102,\"(\":-1050,\"!\":-600,\"\u0E2E\":-218,\"\u0E2A\":73,\"8\":-353,\"\u0E02\":-88,\"\u0E4B\":1012,\"\u0E46\":374,\"\u0E38\":223,\"b\":-315,\"9\":228,\"o\":145,\"h\":-34,\"\u0E10\":314,\"p\":342,\"2\":-109,\"V\":314,\"1\":41,\"\u0E0D\":-45,\":\":244,\")\":-20,\"S\":43,\"\u0E20\":-29,\"U\":34,\"\u0E23\":2},\"UW1\":{\"\u0E44\":1349,\" \":-303,\"\u0E41\":577,\"\u0E2D\":-206,\"\u0E43\":1868,\"\u0E35\":-187,\"\u0E27\":191,\"\u0E04\":151,\"\u0E37\":684,\"\u0E14\":-205,\"\u0E1A\":-38,\"\u0E31\":-33,\"\u0E01\":404,\"\u0E25\":185,\"\u0E16\":497,\"\u0E2A\":-137,\"\u0E40\":454,\"\u0E2B\":587,\"\u0E19\":-93,\"\u0E30\":202,\"\u0E21\":-111,\"\u0E36\":617,\"\u0E02\":-379,\"\u0E32\":209,\"\u0E23\":121,\"\u0E15\":352,\"e\":-133,\"\u0E08\":-365,\"\u0E49\":97,\"\u0E1E\":-126,\"\u0E47\":-235,\"\u0E1F\":646,\"b\":418,\"d\":-194,\"5\":19,\"p\":-491,\"\u0E20\":392,\"\u0E17\":112,\"\u0E38\":-89,\"t\":-204,\"\u0E42\":446,\"-\":-240,\"\u0E2E\":-66,\".\":79,\"2\":-406,\"N\":-531,\"\u0E33\":373,\"\u0E13\":-446,\"u\":-172,\"3\":28,\"\u0E4C\":-62,\"\u0E22\":113,\"\u0E07\":121,\"o\":298,\"J\":-1640,\"%\":-1726,\"\u2571\":1033,\"H\":-266,\"\u0E0B\":113,\"9\":-285,\"B\":-554,\"l\":-63,\"i\":77,\"g\":-144,\"1\":-76,\"s\":55,\"\u0E0D\":96,\"\u0E46\":-20,\"a\":5,\"w\":-20,\"+\":-23},\"BW1\":{\"\u0E35\u0E48\":1653,\"\u0E23\u0E30\":-2958,\"\u0E44\u0E1B\":2492,\"\u0E48\u0E32\":766,\"\u0E31\u0E1A\":1371,\"\u0E21\u0E35\":3306,\"\u0E01\u0E47\":4237,\"\u0E2D\u0E07\":389,\"\u0E49\u0E32\":675,\"\u0E37\u0E2D\":624,\"\u0E23\u0E16\":2224,\"\u0E21\u0E48\":998,\"\u0E32\u0E01\":367,\" (\":3062,\"\u0E08\u0E30\":3182,\"\u0E40\u0E04\":2007,\"\u0E47\u0E19\":565,\"\u0E27\u0E22\":270,\"\u0E21\u0E32\":1636,\"\u0E35\u0E22\":-474,\"\u0E39\u0E48\":625,\"\u0E2A\u0E35\":1933,\"\u0E2A\u0E32\":-1536,\"\u0E48\u0E30\":953,\"\u0E15\u0E34\":819,\"\u0E23\u0E2D\":1575,\"\u0E34\u0E14\":293,\"\u0E43\u0E19\":2604,\"\u0E25\u0E30\":1289,\"\u0E27\u0E21\":1377,\"\u0E44\u0E23\":2849,\"\u0E42\u0E2B\":5207,\"\u0E04\u0E30\":1877,\"\u0E38\u0E01\":1391,\"\u0E07 \":1100,\"\u0E30 \":1939,\"\u0E1A \":1953,\"\u0E22\u0E27\":1037,\"\u0E2D\u0E22\":188,\"\u0E1A\u0E1A\":1163,\"\u0E2D\u0E01\":316,\"\u0E14\u0E39\":1129,\"\u0E37\u0E48\":-1064,\"\u0E32 \":-132,\"\u0E4C \":-394,\"\u0E49\u0E19\":-109,\"\u0E17\u0E30\":-772,\"\u0E27\u0E32\":-812,\"\u0E1B\u0E35\":311,\"\u0E15\u0E23\":1002,\"\u0E34 \":-1642,\"\u0E31\u0E49\":-915,\"\u0E02\u0E2D\":1619,\"\u0E32\u0E21\":189,\"\u0E04 \":-1448,\"\u0E17\u0E33\":1153,\"\u0E19\u0E30\":2039,\"\u0E1C\u0E21\":1855,\"\u0E43\u0E08\":1095,\"\u0E31\u0E19\":-36,\"\u0E32\u0E23\":463,\"\u0E34\u0E27\":433,\"\u0E40\u0E25\":787,\"\u0E19\u0E33\":1148,\"\u0E27\u0E07\":-827,\"\u0E32\u0E2A\":-683,\"\u0E2A\u0E07\":-1178,\"\u0E36\u0E01\":1510,\"\u0E32\u0E22\":-226,\"\u0E1E\u0E2D\":807,\"\u0E2A\u0E34\":1553,\"\u0E42\u0E22\":-690,\"\u0E20\u0E32\":-1704,\"\u0E01 \":1690,\"\u0E22\u0E32\":-841,\"\u0E08\u0E2D\":947,\"\u0E32\u0E07\":-868,\"\u0E01\u0E32\":-468,\"55\":645,\"\u0E15\u0E30\":-2215,\"\u0E47\u0E21\":-343,\"\u0E41\u0E1A\":-940,\"\u0E04\u0E19\":913,\"\u0E01\u0E39\":2108,\"\u0E32\u0E14\":-701,\"\u0E21\u0E30\":-992,\"\u0E2D\u0E34\":353,\"\u0E2A\u0E30\":-1779,\"\u0E2D\u0E32\":-1270,\"\u0E01\u0E01\":-52,\"\u0E25 \":-1446,\"\u0E34\u0E48\":-631,\" '\":2309,\"\u0E49\u0E22\":366,\"r \":-931,\"\u0E34\u0E1B\":262,\"0 \":1903,\"\u0E48\u0E2D\":100,\"\u0E2D \":-212,\"\u0E2A\u0E33\":-1026,\"\u0E48\u0E27\":-108,\"\u0E2D\u0E1A\":549,\"\u0E38\u0E48\":-628,\"\u0E31\u0E48\":-568,\"\u0E19\u0E19\":938,\"\u0E2D\u0E19\":277,\" -\":1262,\"\u0E27\u0E35\":-1137,\"\u0E27\u0E01\":419,\"\u0E32\u0E27\":481,\"\u0E34\u0E15\":478,\"x \":-1575,\"\u0E08\u0E33\":-66,\"\u0E17\u0E35\":557,\"\u0E31\u0E0D\":-744,\"\u0E23\u0E36\":1898,\"\u0E01\u0E38\":1580,\"\u0E34\u0E01\":431,\"\u0E01\u0E30\":-787,\"\u0E42\u0E15\":1192,\"\u0E31\u0E1E\":1006,\"\u0E22\u0E07\":774,\"\u0E0B\u0E35\":-488,\"\u0E0D\u0E48\":1048,\"\u0E1A\u0E2D\":-300,\"\u0E14 \":493,\"\u0E2D\u0E1B\":1387,\"\u0E2D\u0E04\":-240,\"^^\":1407,\"\u0E19\u0E01\":-560,\"\u0E21\u0E01\":-388,\"\u0E2A\u0E4C\":779,\"\u0E35 \":424,\"\u0E2D\u0E25\":-541,\"\u0E08\u0E19\":655,\"\u0E31\u0E2A\":791,\"\u0E31\u0E01\":184,\"\u0E1A\u0E35\":-1206,\"9.\":-1158,\"\u0E40\u0E22\":-989,\"\u0E2B\u0E49\":708,\"\u0E17\u0E19\":561,\"\u0E01\u0E49\":697,\"\u0E42\u0E19\":-402,\"\u0E43\u0E1A\":-943,\"\u0E25\u0E19\":-1696,\"\u0E31\u0E22\":358,\"\u0E48\u0E19\":146,\"\u0E0A\u0E49\":453,\"- \":642,\"an\":-493,\"\u0E22\u0E19\":381,\"\u0E17\u0E4C\":-953,\"\u0E32\u0E30\":523,\"\u0E2B\u0E32\":214,\"\u0E42\u0E25\":499,\"\u0E14\u0E35\":255,\"\u0E41\u0E08\":355,\"n \":-434,\"nd\":-1054,\"a \":-140,\"\u0E39\u0E25\":-390,\"00\":356,\"\u0E22\u0E39\":-924,\"\u0E32\u0E17\":483,\"\u0E17\u0E14\":-1251,\"\u0E31\u0E14\":-420,\"\u0E2D\u0E2D\":-72,\"\u0E47\u0E15\":982,\" \u0E19\":-422,\"\u0E49\u0E2D\":208,\"\u0E04\u0E22\":513,\"\u0E37\u0E49\":-60,\"\u0E04\u0E21\":-593,\"\u0E32\u0E2D\":-73,\" \u0E13\":-570,\"\u0E22\u0E4C\":-369,\"\u0E1B\u0E01\":-315,\"t \":-574,\"\u0E19\u0E39\":689,\"\u0E31\u0E07\":-14,\"\u0E23\u0E04\":271,\"\u0E31\u0E21\":-352,\"\u0E07\u0E07\":594,\"\u0E31\u0E08\":-698,\"  \":538,\"\u0E17\u0E32\":375,\"\u0E1E\u0E25\":-1025,\"\u0E41\u0E14\":-408,\"\u0E47\u0E08\":96,\"\u0E23\u0E35\":-259,\"\u0E27\u0E34\":-382,\"\u0E04\u0E07\":540,\"V \":-581,\"\u0E35\u0E19\":-99,\"\u0E49\u0E27\":156,\"\u0E38\u0E2A\":1060,\"\u0E35\u0E1B\":-920,\"\u0E47\u0E1B\":-903,\"A \":-530,\"\u0E21\u0E04\":-274,\"\u0E31\u0E17\":561,\"\u0E2D\u0E15\":274,\"\u0E32\u0E32\":327,\"RT\":921,\"ay\":641,\" T\":-153,\"he\":-66,\"mp\":776,\"\u0E47\u0E04\":92,\"\u0E34\u0E0A\":-704,\"\u0E43\u0E2A\":767,\"\u0E07\u0E39\":-868,\"\u0E1C\u0E25\":146,\"_ \":-463,\"\u0E22\u0E38\":211,\"\u0E21\u0E07\":-580,\"-V\":-537,\"\u0E0B\u0E19\":-212,\"\u0E16\u0E32\":-154,\"\u0E2A\u0E14\":105,\"\u0E32\u0E13\":416,\"\u0E1E\u0E23\":-317,\"\u0E1B\u0E19\":363,\"l \":189,\" 7\":447,\"\u0E02\u0E32\":36,\"\u0E17\u0E38\":-20,\"ho\":595,\"\u0E01\u0E34\":-202,\"..\":110,\"\u0E0A\u0E30\":-464,\"\u0E47\u0E17\":-594,\"\u0E35\u0E14\":316,\"\u0E01\u0E33\":-254,\"\u0E31\u0E27\":75,\" _\":-577,\"\u0E29\u0E35\":168,\"\u0E1A\u0E32\":-167,\"by\":472,\"11\":327,\"\u0E32\u0E28\":246,\"\u0E08\u0E14\":-390,\"\u0E32\u0E0A\":-350,\"e \":-142,\"\u0E0B\u0E39\":-260,\"\u0E25\u0E07\":87,\"\u0E48 \":27,\"ai\":112,\"\u0E04\u0E32\":112,\"\u0E01\u0E14\":72,\"\u0E42\u0E23\":-140,\"\u0E19\u0E35\":81,\"\u0E21\u0E49\":123,\"\u0E41\u0E01\":137,\"\u0E39\u0E14\":122,\" R\":-166,\"\u0E14\u0E32\":122,\"\u0E44\u0E1E\":-190,\"\u0E0A\u0E07\":134,\"\u0E32\u0E1A\":68,\"\u0E21\u0E2A\":-44,\"\u0E31\u0E15\":-85,\"\u0E21\u0E21\":50,\"\u0E1E\u0E01\":159,\"\u0E07\u0E46\":91,\"\u0E20\u0E39\":-123,\"ry\":-81,\"\u0E44\u0E02\":60,\"\u0E39\u0E07\":17,\" 6\":17,\"\u0E31\u0E25\":2},\"BW3\":{\"\u0E21\u0E32\":2733,\"\u0E2D\u0E22\":918,\"\u0E01\u0E47\":3162,\"\u0E23\u0E16\":3435,\"\u0E44\u0E23\":-814,\"\u0E02\u0E2D\":2848,\"\u0E21\u0E35\":3027,\"\u0E2D\u0E07\":-1739,\"\u0E44\u0E1B\":2861,\"\u0E23\u0E30\":-818,\"\u0E19\u0E30\":2142,\"\u0E40\u0E2D\":-944,\"\u0E19\u0E49\":1779,\"\u0E25\u0E31\":-2009,\"\u0E19\u0E35\":1348,\"\u0E22\u0E31\":2016,\"\u0E2D\u0E19\":-914,\"\u0E04\u0E32\":-745,\"\u0E01\u0E31\":1296,\"\u0E2B\u0E19\":724,\"\u0E23\u0E34\":-1904,\"\u0E27\u0E48\":1633,\"\u0E0B\u0E35\":-982,\"\u0E08\u0E30\":2647,\"\u0E19\u0E34\":1812,\"\u0E07\u0E32\":2099,\"\u0E40\u0E2B\":1624,\"\u0E40\u0E1B\":358,\" \u0E40\":688,\"\u0E04\u0E19\":2113,\"\u0E25\u0E07\":1162,\"\u0E23\u0E2D\":1660,\"\u0E14\u0E35\":853,\"\u0E43\u0E08\":-1214,\"\u0E21\u0E31\":409,\" \u0E2D\":-1112,\", \":4155,\"\u0E01\u0E01\":-1518,\"\u0E2D\u0E32\":1025,\" \u0E27\":-2435,\"\u0E01 \":-972,\"\u0E2D\u0E34\":568,\"\u0E2B\u0E32\":-510,\" \u0E41\":1486,\"\u0E19\u0E19\":-1496,\"\u0E23\u0E35\":-631,\"\u0E44\u0E14\":739,\"\u0E2D\u0E35\":641,\"\u0E0A\u0E21\":1139,\"\u0E22\u0E01\":1342,\"\u0E14\u0E39\":1470,\"\u0E15\u0E2D\":1747,\"\u0E1C\u0E21\":1816,\"\u0E01\u0E25\":1072,\"\u0E19 \":-559,\"\u0E2D\u0E01\":-606,\"\u0E44\u0E2B\":68,\"\u0E19\u0E32\":570,\"\u0E2D\u0E31\":1579,\"\u0E01\u0E2D\":-703,\"\u0E07\u0E48\":2052,\"\u0E25\u0E32\":-672,\"\u0E1E\u0E32\":-240,\"\u0E2A\u0E32\":193,\" \u0E01\":1321,\"\u0E17\u0E33\":738,\"\u0E02\u0E32\":-213,\"\u0E1E\u0E19\":1162,\"% \":2267,\"\u0E40\u0E27\":-1286,\"\u0E25\u0E14\":1795,\"\u0E22\u0E32\":1243,\"\u0E22\u0E2D\":625,\"\u0E2B\u0E21\":830,\"\u0E01\u0E04\":-667,\" H\":-653,\"\u0E40\u0E14\":18,\"\u0E1A\u0E49\":1231,\" \u0E44\":1065,\"\u0E2A\u0E34\":-898,\"..\":1441,\"\u0E2D\u0E14\":-1227,\"\u0E1B\u0E35\":697,\"\u0E1B\u0E01\":1568,\"\u0E15\u0E34\":-680,\"\u0E2B\u0E49\":-231,\"\u0E08\u0E31\":-313,\"\u0E27\u0E22\":-550,\"\u0E2D\u0E1A\":-261,\") \":902,\"\u0E20\u0E31\":-1613,\"\u0E40\u0E19\":-900,\"\u0E2A\u0E21\":256,\"\u0E1C\u0E31\":-2123,\"\u0E2A\u0E38\":-968,\"\u0E40\u0E15\":-213,\"\u0E40\u0E25\":-393,\"\u0E08\u0E39\":-2325,\"\u0E40\u0E1E\":89,\"! \":1698,\"\u0E16\u0E49\":1433,\" \u0E1B\":-362,\"\u0E23\u0E31\":-288,\" \u0E2A\":432,\"\u0E1E\u0E37\":-118,\" \u0E17\":1068,\"\u0E23\u0E49\":115,\"\u0E02\u0E19\":1074,\"\u0E08\u0E19\":1988,\"\u0E15\u0E35\":-166,\": \":2475,\"\u0E25\u0E22\":1156,\"\u0E01\u0E40\":-423,\" A\":-1276,\"\u0E40\u0E17\":-319,\"\u0E02\u0E31\":-400,\"\u0E19\u0E48\":842,\"\u0E40\u0E1F\":-540,\"\u0E22\u0E34\":1793,\"\u0E42\u0E14\":298,\"\u0E01\u0E48\":1640,\"\u0E41\u0E14\":-341,\"\u0E15\u0E25\":1358,\". \":835,\"\u0E17\u0E32\":440,\"\u0E01\u0E33\":2634,\"\u0E40\u0E40\":987,\"\u0E41\u0E1A\":-573,\"\u0E2B\u0E25\":523,\"\u0E2D\u0E48\":1576,\"\u0E02\u0E48\":-1571,\"2 \":-590,\"\u0E21\u0E27\":520,\"\u0E27\u0E27\":-1423,\"\u0E0A\u0E32\":-329,\"\u0E25\u0E30\":1044,\"20\":806,\"\u0E19\u0E40\":-287,\"\u0E01\u0E49\":188,\"\u0E17\u0E31\":764,\" -\":539,\"\u0E19\u0E31\":837,\"\u0E19\u0E36\":1314,\"\u0E1E\u0E1A\":948,\"\u0E40\u0E02\":303,\" N\":-1153,\"\u0E22\u0E22\":-599,\"\u0E23\u0E23\":-288,\"\u0E27\u0E2D\":1033,\"\u0E01\u0E27\":364,\"\u0E25\u0E35\":-919,\"\u0E01\u0E14\":846,\"08\":1194,\"\u0E1A\u0E38\":175,\"\u0E40\u0E22\":89,\"\u0E21\u0E2D\":533,\"\u0E2A\u0E31\":-169,\"\u0E0B\u0E37\":951,\"\u0E1A\u0E32\":884,\"BF\":2410,\"\u0E27\u0E34\":582,\"\u0E23\u0E2A\":604,\"\u0E04\u0E07\":685,\"\u0E15\u0E23\":-134,\"\u0E42\u0E1B\":842,\"\u0E16\u0E36\":-395,\" \u0E1A\":-299,\"\u0E1E\u0E25\":375,\"\u0E01\u0E1B\":-576,\"\u0E43\u0E0A\":393,\" S\":-650,\"\u0E41\u0E1B\":-368,\"\u2019 \":1306,\" \u0E43\":662,\"\u0E07\u0E31\":1340,\"\u0E14\u0E31\":292,\"\u0E15\u0E48\":554,\"\u0E14\u0E32\":354,\"\u0E04\u0E27\":526,\"\u0E22\u0E27\":-224,\"  \":405,\" M\":-513,\"\u0E15\u0E01\":1075,\"\u0E40\u0E21\":-74,\"\u0E42\u0E22\":-209,\"\u0E40\u0E0A\":112,\"\u0E41\u0E04\":344,\" U\":-1135,\"\u0E18\u0E35\":-560,\"\u0E1E\u0E2D\":199,\"\u0E09\u0E48\":-1237,\"\u0E1E\u0E31\":-379,\"\u0E1A\u0E17\":709,\"\u0E1C\u0E25\":357,\"\u0E14\u0E14\":-842,\"\u0E16\u0E19\":393,\"\u0E23\u0E27\":101,\"\u0E43\u0E19\":519,\"\u0E1B\u0E2D\":-759,\" \u0E13\":-1180,\"\u0E2D\u0E2D\":-89,\"\u0E15\u0E30\":-964,\"\u0E2A\u0E19\":429,\"\u0E1E\u0E38\":-562,\"\u0E20\u0E32\":755,\"\u0E0A\u0E2D\":662,\"\u0E23\u0E48\":-34,\"6 \":194,\"\u0E41\u0E2A\":216,\"\u0E15\u0E49\":322,\"\u0E01\u0E38\":779,\"\u0E01\u0E39\":783,\"\u0E46 \":538,\"\u0E25\u0E1E\":1407,\"\u0E23\u0E36\":491,\".\u0E40\":821,\"\u0E04\u0E38\":336,\"\u0E1F\u0E2D\":764,\"\u0E41\u0E15\":492,\"\u0E13 \":817,\"s \":-751,\"\u0E42\u0E19\":-335,\"Ra\":-533,\" R\":-216,\"55\":528,\"\u0E44\u0E0B\":-695,\"\u0E1A\u0E48\":738,\"\u0E04\u0E31\":373,\"\u0E40\u0E23\":-47,\"\u0E1B\u0E1B\":-380,\"\u0E41\u0E1E\":-275,\"\u0E41\u0E08\":278,\"\u0E21\u0E38\":-685,\"\u0E27\u0E30\":636,\" \u0E04\":241,\"\u0E41\u0E17\":430,\"Pr\":-481,\"\u0E0A\u0E48\":279,\"\u0E15\u0E1A\":956,\"\u0E40\u0E18\":960,\"\u0E1C\u0E36\":-831,\"\u0E2D\u0E37\":369,\" \u0E02\":192,\"\u0E16\u0E32\":-22,\"\u0E07\u0E2D\":-141,\"\u0E0A\u0E34\":-107,\"\u0E2A\u0E48\":-292,\"\u0E42\u0E1E\":98,\"1 \":-324,\"\u0E1E\u0E27\":514,\" c\":155,\"((\":-673,\"\u0E41\u0E2B\":62,\"88\":-304,\"\u0E27\u0E35\":91,\" \u0E1E\":-85,\"\u0E0A\u0E19\":243,\"\u0E2D\u0E38\":244,\"\u0E22\u0E39\":295,\"He\":247,\"T\u0E23\":-544,\"\u0E01\u0E34\":239,\"\u0E2A\u0E35\":111,\"\u0E14\u0E23\":45,\"\u0E21\u0E48\":-223,\"\u0E21\u0E30\":19,\"? \":297,\"2\u0E04\":348,\"\u0E09\u0E1A\":159,\"\u0E0A\u0E49\":-80,\"\u0E1B\u0E25\":-37,\"\u0E43\u0E04\":179,\"m \":233,\"\u0E25\u0E38\":-129,\" :\":190,\" \u0E15\":30,\"\u0E07\u0E35\":68,\"\u0E22\u0E38\":170,\"' \":115,\"\u0E2B\u0E31\":-73,\"\u0E1F\u0E35\":-186,\"\u0E19\u0E39\":153,\"\u0E04\u0E34\":70,\" x\":-44,\"\u0E01\u0E32\":8,\"\u0E1B\u0E23\":8,\"\u0E1E\u0E0D\":85,\"5 \":-17,\"\u0E44\u0E1F\":49,\" P\":-26,\" (\":31,\"\u0E08\u0E35\":-29,\"\u0E01\u0E21\":-26,\"\u0E19\u0E38\":20,\"\u0E1E\u0E23\":5,\"\u0E22\u0E19\":-11,\"\u0E21\u0E34\":11,\",0\":-8,\"8 \":11,\"\u0E1A\u0E19\":2,\"\u0E15\u0E36\":-5},\"TW1\":{\"\u0E19\u0E35\u0E49\":2638,\"\u0E27\u0E48\u0E32\":2251,\"\u0E17\u0E35\u0E48\":1040,\"\u0E25\u0E49\u0E27\":1847,\"\u0E01\u0E32\u0E23\":531,\"\u0E40\u0E25\u0E22\":2064,\"\u0E40\u0E23\u0E32\":3293,\"\u0E02\u0E2D\u0E07\":1669,\"\u0E23\u0E32\u0E22\":-2282,\"\u0E41\u0E15\u0E48\":1263,\"\u0E44\u0E14\u0E49\":1162,\"\u0E2D\u0E35\u0E01\":3076,\"\u0E17\u0E48\u0E32\":-701,\"\u0E49\u0E32 \":-1483,\"\u0E44\u0E21\u0E48\":901,\"\u0E48\u0E2D\u0E22\":1295,\"\u0E01\u0E34\u0E19\":801,\"\u0E37\u0E49\u0E2D\":1061,\"\u0E23\u0E37\u0E2D\":2746,\"\u0E40\u0E2D\u0E32\":2656,\"\u0E04\u0E37\u0E2D\":2825,\"\u0E21\u0E31\u0E19\":354,\"\u0E31\u0E49\u0E07\":-420,\"\u0E04\u0E38\u0E13\":1341,\"\u0E32\u0E15\u0E34\":1941,\"\u0E1B\u0E47\u0E19\":862,\"\u0E48\u0E2D\u0E07\":-513,\"\u0E32\u0E02\u0E32\":1816,\"\u0E02\u0E2D\u0E1A\":-981,\"\u0E0A\u0E2D\u0E1A\":2000,\"\u0E32\u0E04\u0E32\":1281,\"\u0E22\u0E39\u0E48\":1372,\"\u0E21\u0E40\u0E04\":2174,\"\u0E2A\u0E31\u0E19\":-484,\"\u0E1B\u0E23\u0E30\":-1440,\"\u0E30\u0E40\u0E25\":1815,\"\u0E32\u0E21\u0E32\":-748,\"\u0E19\u0E31\u0E01\":-1979,\"\u0E27\u0E31\u0E19\":-494,\"\u0E32\u0E23\u0E4C\":-963,\"\u0E22\u0E32\u0E01\":1761,\"\u0E1A\u0E2D\u0E01\":2862,\"\u0E04\u0E48\u0E32\":1355,\"\u0E1E\u0E35\u0E48\":973,\"box\":3019,\"da \":-855,\"\u0E35\u0E1B \":-2784,\"\u0E41\u0E21\u0E48\":-1965,\"\u0E27\u0E25\u0E32\":1132,\"\u0E41\u0E25\u0E30\":803,\"\u0E36\u0E07\u0E40\":2238,\"\u0E22\u0E35\u0E48\":-1653,\"\u0E49\u0E27\u0E22\":821,\"\u0E01\u0E31\u0E1A\":467,\"\u0E14\u0E49\u0E32\":-528,\"\u0E23\u0E32\u0E21\":-1580,\"\u0E02\u0E49\u0E32\":383,\"\u0E08\u0E49\u0E32\":-704,\"\u0E40\u0E01\u0E47\":-2219,\"\u0E40\u0E17\u0E28\":688,\"\u0E2B\u0E31\u0E27\":-842,\"\u0E1A\u0E32\u0E17\":1762,\"\u0E12\u0E19\u0E32\":1199,\"\u0E2D\u0E34\u0E19\":-581,\" \u0E13 \":-1447,\"\u0E2D\u0E47\u0E21\":-888,\"\u0E15\u0E49\u0E19\":-1414,\"\u0E49\u0E32\u0E07\":741,\"\u0E2B\u0E21\u0E48\":865,\"\u0E23\u0E23\u0E04\":1449,\"\u0E0A\u0E47\u0E04\":2674,\"\u0E37\u0E2D\u0E19\":1321,\"\u0E31\u0E48\u0E07\":503,\" \u0E1B\u0E35\":1887,\"\u0E15\u0E31\u0E27\":13,\"\u0E35\u0E42\u0E2D\":1912,\"\u0E04\u0E48\u0E30\":1621,\"\u0E31\u0E15\u0E23\":1152,\"\u0E2E\u0E2D\u0E19\":-1096,\"\u0E48\u0E32\u0E22\":1185,\"\u0E15\u0E4C \":-870,\"\u0E16\u0E49\u0E32\":579,\"\u0E49\u0E2D\u0E19\":1306,\"\u0E20\u0E32\u0E04\":2027,\"\u0E22\u0E25\u0E30\":-1000,\"\u0E0D\u0E35\u0E48\":-2789,\"\u0E2B\u0E23\u0E48\":1141,\"\u0E25\u0E34\u0E1B\":1204,\"\u0E42\u0E23\u0E07\":-1567,\"\u0E2A\u0E31\u0E07\":-1340,\"\u0E23\u0E4C\u0E17\":1362,\"\u0E31\u0E49\u0E22\":700,\"\u0E08\u0E31\u0E14\":561,\"\u0E0A\u0E31\u0E22\":-1866,\"\u0E14\u0E47\u0E01\":1540,\"\u0E1B\u0E34\u0E14\":1134,\"\u0E44\u0E2B\u0E21\":1072,\"\u0E37\u0E48\u0E2D\":699,\"\u0E07\u0E32\u0E19\":541,\"\u0E2D\u0E2D\u0E2A\":1618,\"\u0E25\u0E39\u0E01\":-414,\"\u0E08\u0E32\u0E01\":851,\"\u0E34\u0E01\u0E32\":1330,\" \u0E21\u0E35\":-345,\"\u0E2A\u0E19\u0E2D\":1002,\"\u0E23\u0E32\u0E07\":-782,\"\u0E1C\u0E34\u0E27\":354,\"\u0E2D\u0E2D\u0E01\":494,\"\u0E41\u0E23\u0E30\":2025,\"\u0E2A\u0E21\u0E32\":-1583,\"\u0E48\u0E32\u0E07\":862,\"\u0E40\u0E08\u0E2D\":950,\"\u0E49\u0E2D\u0E21\":579,\"\u0E01\u0E23\u0E30\":-511,\"\u0E38\u0E48\u0E07\":-1037,\"\u0E2B\u0E19\u0E32\":1024,\" \u0E21\u0E32\":196,\"\u0E15\u0E48\u0E07\":-783,\"\u0E1B\u0E31\u0E0D\":-595,\"\u0E23\u0E31\u0E1A\":227,\"\u0E44\u0E2B\u0E19\":915,\"an \":-502,\"\u0E30\u0E19\u0E33\":677,\"\u0E2A\u0E31\u0E01\":677,\"\u0E17\u0E23\u0E39\":624,\"\u0E02\u0E32\u0E27\":1155,\"\u0E35\u0E22\u0E19\":258,\"\u0E34\u0E0A \":-1281,\"\u0E38\u0E23\u0E35\":1416,\"\u0E1B\u0E47\u0E14\":1272,\"\u0E15\u0E49\u0E32\":698,\"\u0E04\u0E49\u0E32\":571,\"\u0E40\u0E18\u0E2D\":707,\"\u0E04\u0E27\u0E23\":898,\"\u0E40\u0E1A\u0E32\":1449,\"\u0E48\u0E32\u0E19\":918,\"\u0E31\u0E04\u0E23\":1176,\"\u0E2A\u0E35\u0E22\":603,\"\u0E15\u0E36\u0E07\":-835,\"\u0E31\u0E19 \":-384,\"\u0E1B\u0E1B\u0E1B\":923,\"\u0E21\u0E31\u0E22\":600,\"\u0E31\u0E49\u0E19\":495,\" \u0E2D\u0E30\":-1111,\"\u0E23\u0E04\u0E4C\":-1154,\"\u0E01\u0E31\u0E19\":85,\"ty \":-818,\"\u0E2D\u0E40\u0E04\":1450,\"\u0E1B\u0E32\u0E01\":-118,\"\u0E35\u0E42\u0E04\":802,\"\u0E2A\u0E48\u0E07\":-376,\"\u0E40\u0E2B\u0E19\":-509,\"\u0E1E\u0E27\u0E07\":-1338,\"\u0E17\u0E32\u0E07\":1089,\"\u0E34\u0E2D\u0E34\":954,\"\u0E15\u0E32\u0E21\":402,\"\u0E19\u0E21\u0E32\":257,\"\u0E1B\u0E49\u0E07\":-155,\"\u0E21\u0E48\u0E07\":911,\"\u0E21\u0E44\u0E1B\":-533,\"\u0E0D\u0E2B\u0E32\":483,\"\u0E22\u0E2D\u0E30\":630,\"\u0E16\u0E32\u0E19\":-1002,\"\u0E15\u0E23\u0E07\":795,\"\u0E04\u0E31\u0E14\":-313,\"\u0E01\u0E32\u0E07\":-541,\"\u0E15\u0E35\u0E49\":960,\"\u0E32\u0E19 \":231,\"\u0E23\u0E34\u0E2A\":478,\"\u0E19\u0E32\u0E14\":854,\"\u0E20\u0E32\u0E22\":-635,\"\u0E37\u0E48\u0E21\":960,\"\u0E25\u0E32\u0E22\":692,\"\u0E01\u0E31\u0E14\":795,\"\u0E42\u0E1B\u0E23\":269,\"\u0E27\u0E48\u0E30\":-243,\"\u0E2A\u0E32\u0E23\":314,\"\u0E16\u0E44\u0E1F\":1068,\"\u0E04\u0E23\u0E07\":-744,\"\u0E0A\u0E19 \":-1140,\"\u0E41\u0E04\u0E48\":310,\"\u0E19\u0E0A\u0E19\":627,\"\u0E34\u0E48\u0E07\":135,\"\u0E19\u0E19\u0E19\":476,\"\u0E15\u0E23\u0E32\":513,\"\u0E1A\u0E41\u0E08\":620,\"\u0E22\u0E1A\u0E01\":1182,\"\u0E2D\u0E01\u0E47\":-339,\"\u0E48\u0E2D\u0E19\":41,\"\u0E16\u0E36\u0E07\":101,\"\u0E22\u0E31\u0E07\":239,\"he \":-273,\"\u0E04\u0E2D\u0E19\":-423,\"\u0E49\u0E32\u0E2D\":-333,\"\u0E41\u0E1E\u0E49\":178,\"\u0E32\u0E15\u0E23\":-907,\"\u0E29\u0E13\u0E32\":803,\"\u0E20\u0E32\u0E1E\":585,\" \u0E23\u0E1A\":905,\"\u0E31\u0E48\u0E19\":170,\"\u0E14\u0E31\u0E14\":-591,\"\u0E1F\u0E23\u0E35\":508,\"\u0E17\u0E35\u0E22\":-607,\"\u0E2A\u0E27\u0E22\":298,\"\u0E38\u0E49\u0E19\":490,\"nd \":-761,\"\u0E1C\u0E39\u0E49\":-138,\"\u0E40\u0E2A\u0E32\":1005,\"\u0E21\u0E34\u0E15\":-819,\"\u0E35\u0E22\u0E14\":219,\"\u0E23\u0E47\u0E08\":264,\" PA\":711,\"\u0E35\u0E49 \":-322,\"\u0E01\u0E29\u0E32\":539,\"\u0E14\u0E49\u0E27\":-255,\"\u0E30\u0E2A\u0E1A\":-519,\"The\":-122,\"\u0E19\u0E32\u0E21\":-494,\"\u0E30\u0E0A\u0E32\":-486,\"\u0E21\u0E32\u0E22\":295,\"\u0E25\u0E22\u0E35\":551,\"\u0E15\u0E49\u0E21\":-758,\"\u0E31\u0E48\u0E27\":507,\"\u0E41\u0E14\u0E14\":349,\"\u0E1E\u0E25\u0E2A\":601,\"\u0E1C\u0E31\u0E2A\":198,\"\u0E39\u0E21\u0E34\":375,\"\u0E04\u0E31\u0E1A\":364,\"\u0E23\u0E4C \":42,\"\u0E34\u0E49\u0E19\":-50,\"\u0E22 T\":-570,\" \u0E44\u0E1B\":-306,\"\u0E19\u0E31\u0E14\":471,\" \u0E07\u0E07\":430,\"\u0E2A\u0E14\u0E38\":414,\"\u0E14\u0E32\u0E27\":252,\"nda\":87,\"\u0E02\u0E35\u0E49\":-259,\"\u0E37\u0E2D \":-365,\"\u0E25\u0E31\u0E07\":-95,\" \u0E1E\u0E2D\":358,\"ew \":-249,\"\u0E21\u0E2D\u0E07\":303,\"\u0E49\u0E32\u0E22\":299,\"\u0E41\u0E14\u0E01\":487,\"\u0E16\u0E32\u0E21\":183,\"\u0E01\u0E15\u0E34\":224,\"\u0E32\u0E07 \":191,\"\u0E15\u0E34\u0E14\":120,\"\u0E15\u0E34\u0E1A\":-280,\"\u0E1E\u0E27\u0E01\":236,\"\u0E27\u0E35 \":-646,\" \u0E2A\u0E19\":365,\"\u0E01\u0E25\u0E49\":436,\"\u0E43\u0E0A\u0E49\":146,\"\u0E1B\u0E14\u0E39\":184,\"\u0E08\u0E49\u0E07\":105,\"\u0E30\u0E14\u0E32\":225,\"\u0E22\u0E22\u0E22\":147,\"\u0E01\u0E2D\u0E30\":432,\"\u0E17\u0E31\u0E01\":420,\"\u0E01\u0E47\u0E1A\":149,\"\u0E21\u0E27\u0E22\":277,\"\u0E25\u0E2D\u0E07\":209,\"\u0E2D\u0E31\u0E19\":61,\"\u0E42\u0E2A\u0E21\":154,\"\u0E07\u0E2A\u0E35\":267,\" \u0E17\u0E33\":-190,\"\u0E40\u0E27\u0E19\":-321,\"\u0E25\u0E31\u0E27\":37,\"\u0E02\u0E47\u0E07\":-170,\"\u0E04\u0E37\u0E19\":275,\" \u0E0A\u0E32\":396,\"\u0E49\u0E01\u0E30\":374,\"\u0E04\u0E32\u0E14\":-232,\"\u0E19\u0E2D\u0E07\":-222,\"\u0E42\u0E17\u0E23\":246,\"\u0E30\u0E22\u0E30\":-223,\"\u0E47\u0E2D\u0E01\":-104,\"\u0E41\u0E14\u0E07\":-209,\"\u0E19\u0E14\u0E35\":150,\"\u0E48\u0E14\u0E35\":194,\"\u0E1A\u0E42\u0E2D\":371,\"\u0E19\u0E31\u0E1A\":-131,\"\u0E1E\u0E31\u0E19\":-176,\"\u0E1B\u0E25\u0E07\":72,\"\u0E0A\u0E34\u0E1A\":-226,\"\u0E1E\u0E2D\u0E15\":270,\"\u0E39\u0E41\u0E25\":109,\"\u0E14\u0E34\u0E21\":115,\"\u0E32 2\":186,\"\u0E19\u0E17\u0E4C\":-18,\"san\":-97,\"\u0E30\u0E43\u0E08\":-182,\"\u0E38\u0E49\u0E21\":52,\"\u0E02\u0E27\u0E32\":117,\"\u0E21\u0E21\u0E21\":141,\"\u0E17\u0E2D\u0E19\":-122,\"\u0E22\u0E34\u0E19\":-105,\"\u0E25\u0E34\u0E01\":37,\"\u0E32\u0E41\u0E1F\":61,\"\u0E17\u0E23 \":-247,\"\u0E34\u0E15\u0E23\":58,\"\u0E17\u0E47\u0E01\":-29,\"\u0E21\u0E2D\u0E01\":93,\"\u0E40\u0E2D\u0E01\":-95,\"\u0E04\u0E31\u0E19\":37,\"\u0E14\u0E35\u0E49\":-72,\"\u0E01\u0E0B\u0E4C\":-31,\"\u0E35\u0E48\u0E22\":-5,\"\u0E1E\u0E23\u0E30\":72,\"\u0E01\u0E0A\u0E21\":72,\"\u0E01\u0E48\u0E32\":66,\"\u0E23\u0E23\u0E21\":11,\"\u0E15\u0E1E\u0E2D\":-40,\"\u0E2B\u0E32\u0E14\":-23,\"55 \":-23,\"\u0E01\u0E15\u0E38\":31,\"\u0E19\u0E25\u0E35\":46,\"\u0E21\u0E1E\u0E39\":14,\"\u0E22\u0E31\u0E14\":34,\"All\":-17,\"\u0E04\u0E15\u0E30\":-23,\"\u0E40\u0E2D\u0E21\":-20,\"\u0E23\u0E48\u0E32\":8,\"ter\":5},\"BW2\":{\"\u0E48\u0E2D\":-1298,\"\u0E04\u0E23\":-1523,\"\u0E30\u0E40\":-1312,\"\u0E2D\u0E22\":-2542,\"55\":-5954,\"\u0E32\u0E01\":-566,\"\u0E01\u0E25\":-1600,\"\u0E49\u0E2D\":-1186,\"\u0E1B\u0E23\":-1494,\"\u0E32\u0E40\":386,\"\u0E07\u0E40\":-798,\"  \":-3208,\"\u0E19\u0E17\":-686,\"\u0E32\u0E04\":-295,\"\u0E4C \":-1456,\"\u0E21\u0E40\":-1180,\"\u0E19 \":-1065,\"\u0E19\u0E41\":-591,\"\u0E2D\u0E07\":-1361,\"..\":-4184,\"\u0E32\u0E23\":-332,\"\u0E49\u0E27\":-510,\"\u0E2D\u0E19\":-464,\"\u0E35\u0E22\":-1846,\"\u0E37\u0E2D\":-1519,\"\u0E23\u0E16\":-1765,\"\u0E07\u0E41\":-227,\"\u0E19\u0E23\":1024,\"\u0E46\u0E46\":-3943,\"\u0E2D\u0E01\":-436,\"\u0E01\u0E15\":-1456,\"\u0E34\u0E2D\":1211,\"\u0E2D\u0E1A\":-774,\"\u0E32\u0E2D\":305,\"\u0E01\u0E23\":-1040,\" \u0E1B\":-1335,\"\u0E19\u0E40\":-709,\" \u0E08\":-1612,\"\u0E21\u0E1E\":-1453,\"\u0E19\u0E44\":-1141,\"\u0E19\u0E01\":929,\"\u0E32\u0E19\":-487,\"\u0E48\u0E19\":-219,\"\u0E49\u0E40\":381,\"\u0E1B \":-1225,\"\u0E48\u0E07\":-757,\"\u0E23\u0E2D\":-476,\"\u0E48\u0E27\":-1014,\"\u0E15\u0E23\":-1559,\"\u0E35\u0E42\":-819,\"\u0E07\u0E23\":669,\"\u0E19\u0E21\":1418,\"\u0E1E\u0E23\":-1502,\" \u0E40\":-612,\"\u0E1B\u0E25\":-1207,\"\u0E32\u0E21\":-41,\"\u0E14\u0E40\":-1013,\"\u0E32\u0E02\":-229,\"\u0E19\u0E15\":-300,\"\u0E22\u0E04\":736,\"\u0E49 \":-892,\"\u0E07\u0E2B\":-460,\"\u0E21\u0E01\":565,\"\u0E48\u0E2A\":-488,\" \u0E2D\":-1303,\"\u0E01\u0E27\":-1001,\"\u0E35\u0E40\":-891,\"0\u0E19\":2663,\"\u0E21\u0E02\":-567,\"\u0E07\u0E2D\":481,\"\u0E27\u0E22\":-364,\"\u0E07\u0E01\":-187,\"\u0E22\u0E2D\":-203,\"\u0E1A\u0E40\":-146,\"\u0E01\u0E2A\":579,\" \u0E1A\":-910,\"\u0E07\u0E1E\":-257,\"\u0E48\u0E40\":35,\"\u0E2D\u0E21\":-310,\"\u0E07\u0E21\":758,\"\u0E33\u0E40\":-1065,\"\u0E32\u0E22\":-529,\"0 \":1199,\"\u0E1A\u0E1C\":-1891,\"\u0E07\u0E22\":695,\"\u0E49\u0E08\":-656,\"y \":-949,\"\u0E04\u0E27\":-762,\"\u0E34\u0E01\":-438,\"\u0E39\u0E41\":-784,\"\u0E07\u0E14\":707,\"\u0E22\u0E15\":-1023,\"\u0E39\u0E01\":-405,\"\u0E25 \":-1276,\"\u0E19\u0E25\":321,\" \u0E21\":927,\" H\":-1751,\"\u0E2D\u0E27\":426,\"\u0E32\u0E41\":189,\"\u0E33\u0E2B\":-433,\" 1\":329,\"\u0E1B\u0E1B\":-1367,\" \u0E27\":-1750,\"!!\":-3030,\"\u0E07\u0E02\":-349,\"\u0E17\u0E23\":-595,\"\u0E49\u0E23\":1116,\"\u0E1A\u0E1B\":-533,\"\u0E32\u0E17\":-537,\"\u0E36\u0E01\":-1330,\"\u0E21\u0E22\":863,\"\u0E1B\u0E44\":-140,\" \u0E1E\":-781,\"))\":-3430,\"\u0E33\u0E15\":448,\"\u0E07\u0E1A\":877,\"\u0E4C\u0E40\":-573,\" 2\":-865,\"\u0E1E\u0E19\":-1420,\" N\":-695,\"\u0E27\u0E01\":-324,\"\u0E47\u0E21\":-559,\"\u0E07\u0E25\":521,\"\u0E34\u0E14\":-159,\" \u0E2A\":-270,\"\u0E35\u0E21\":-205,\"\u0E35\u0E1E\":-1228,\"\u0E30\u0E21\":415,\"\u0E14\u0E14\":-83,\"\u0E01\u0E19\":296,\"\u0E19\u0E14\":-195,\"\u0E21\u0E19\":443,\"1 \":675,\"2 \":487,\"\u0E32\u0E1E\":495,\" S\":-1482,\"\u0E19\u0E02\":-577,\"A \":-452,\"\u0E27\u0E2A\":585,\"\u0E15\u0E25\":-248,\"\u0E07\u0E2A\":-56,\"V \":-190,\"\u0E21\u0E04\":-587,\"\u0E16\u0E19\":-857,\"\u0E49\u0E44\":-408,\" A\":-1170,\"\u0E33\u0E21\":-280,\"\u0E04 \":-331,\" c\":495,\"\u0E21\u0E25\":665,\" G\":499,\"01\":-728,\"x \":-628,\"\u0E04\u0E25\":-482,\"\u0E32\u0E1A\":-33,\"\u0E07\u0E44\":-31,\"\u0E2D\u0E17\":152,\"\u0E38\u0E01\":-120,\"\u0E14\u0E07\":741,\"\u0E49a\":993,\"\u0E19\u0E2B\":-320,\"\u0E39\u0E27\":337,\"\u0E01\u0E2D\":343,\" R\":-62,\"\u0E34\u0E17\":800,\" 0\":920,\"\u0E35\u0E16\":1228,\"l \":382,\"\u0E23\u0E2A\":200,\"56\":-1388,\"\u0E49\u0E01\":151,\"\u0E22\u0E23\":380,\" C\":-127,\"\u0E32.\":523,\"\u0E30\u0E15\":-494,\" e\":379,\"\u0E13\u0E20\":-808,\"\u0E2A\u0E42\":950,\"\u0E1A\u0E23\":-249,\"\u0E25\u0E2D\":-373,\"\u0E2D\u0E02\":701,\"\u0E39\u0E2A\":503,\"\u0E19\u0E28\":963,\"\u0E19\u0E43\":-171,\"\u0E19\u0E19\":-288,\"\u0E49\u0E21\":-91,\"\u0E27\u0E40\":-91,\"\u0E21\u0E0A\":-356,\"\u0E34\u0E44\":530,\"\u0E27\u0E1E\":572,\" o\":638,\".3\":-380,\"\u0E34\u0E40\":161,\"\u0E21\u0E42\":-645,\"\u0E25/\":938,\"r \":-279,\"\u0E22\u0E42\":447,\"\u0E2D\u0E40\":-181,\"\u0E15.\":499,\" (\":300,\"\u0E07\u0E19\":-147,\"\u0E23\u0E1B\":680,\"\u0E213\":1283,\"\u0E04\u0E2D\":-296,\"\u0E13\u0E14\":418,\"\u0E2A\u0E19\":36,\"\u0E2A\u0E40\":153,\"\u0E4C\u0E44\":362,\"\u0E35\u0E19\":269,\"\u0E13\u0E2D\":349,\"\u0E01\u0E44\":350,\"\u0E075\":488,\"\u0E33\u0E43\":-507,\"??\":-1052,\"\u0E22\u0E1E\":-108,\"1\u0E2B\":568,\"\u0E23\u0E04\":-353,\"\u0E30\u0E22\":-624,\"\u0E01\u0E16\":-863,\"\u0E08\u0E14\":-427,\"\u0E21\u0E2A\":201,\"\u0E04\u0E2B\":663,\"\u0E07\u0E08\":-99,\"\u0E15\u0E44\":459,\"2\u0E2B\":437,\"\u0E01\u0E42\":349,\"\u0E34\u0E27\":-184,\"5+\":-532,\"\u0E34\u0E2A\":-170,\"\u0E212\":620,\"\u0E27\u0E1C\":-509,\"\u0E30\u0E17\":-171,\" E\":274,\"\u0E21\u0E21\":-29,\"\u0E4C\u0E22\":292,\"\u0E33\u0E17\":302,\"\u0E21\u0E1C\":-283,\"\u0E25\u0E40\":-138,\"\u0E30V\":181,\" a\":125,\"\u0E34 \":-137,\"\u0E19\u0E0A\":170,\"\u0E32a\":330,\":)\":-465,\"\u0E39\u0E14\":-269,\"\u0E4C.\":129,\"\u0E15\u0E1A\":398,\"g \":176,\"\u0E32\u0E16\":84,\"\u0E48\u0E41\":68,\"0%\":-302,\"\u0E25\u0E42\":104,\"\u0E07\u0E15\":-119,\"25\":-113,\"\u0E23\u0E41\":110,\"e\u0E40\":166,\" b\":79,\".\u0E19\":124,\"\u0E07\u0E17\":-32,\": \":58,\"\u0E193\":123,\" M\":-38,\"\u0E34\u0E23\":29,\"\u0E19\u0E08\":26,\"\u0E32\u0E0B\":43,\"\u0E49\u0E42\":79,\"++\":-92,\"\u0E04\u0E01\":34,\"\u0E15\u0E1E\":-87,\"\u0E38\u0E2D\":49,\"\u0E19\u0E27\":-29,\"\u0E07\u0E42\":-31,\"\u0E21\u0E41\":-14,\"\u0E2A\u0E27\":-28,\"\u0E48\u0E25\":31,\"0\u0E1B\":-43,\"\u0E48\u0E43\":23,\"\u0E14\u0E2B\":17,\"\u0E07\u0E07\":-11,\"\u0E04\u0E42\":-5,\"\u0E4C\u0E1E\":14,\"\u0E2D\u0E2A\":-2},\"TW4\":{\"\u0E04\u0E23\u0E31\":2075,\"\u0E44\u0E21\u0E48\":4224,\"\u0E01\u0E34\u0E19\":1709,\"\u0E27\u0E31\u0E19\":2095,\"\u0E14\u0E49\u0E27\":3007,\"\u0E2A\u0E31\u0E19\":-3192,\"\u0E01\u0E27\u0E48\":2157,\"\u0E04\u0E49\u0E32\":-2173,\"\u0E2D\u0E22\u0E39\":3493,\"\u0E2D\u0E22\u0E32\":3496,\"\u0E23\u0E32\u0E04\":1803,\"\u0E0A\u0E31\u0E48\":-2019,\"\u0E02\u0E35\u0E48\":-927,\"\u0E22\u0E31\u0E07\":1823,\"\u0E44\u0E2B\u0E21\":2377,\"\u0E44\u0E25\u0E19\":-1832,\"\u0E25\u0E22\u0E25\":4508,\"\u0E2A\u0E14\u0E49\":-3516,\"\u0E21\u0E32\u0E01\":821,\"\u0E17\u0E35\u0E48\":671,\"\u0E15\u0E49\u0E2D\":830,\"\u0E44\u0E2B\u0E19\":1182,\"\u0E44\u0E2B\u0E23\":-677,\"\u0E08\u0E23\u0E34\":1637,\"\u0E19\u0E04\u0E23\":2337,\"\u0E41\u0E25\u0E49\":1152,\"\u0E19\u0E32\u0E19\":1305,\"\u0E1F\u0E49\u0E32\":-1555,\"\u0E43\u0E2B\u0E0D\":-1024,\"\u0E01\u0E32\u0E23\":974,\"\u0E1C\u0E34\u0E14\":-1146,\"\u0E40\u0E25\u0E22\":877,\"\u0E2D\u0E30\u0E44\":1910,\"\u0E2A\u0E27\u0E22\":1677,\"\u0E40\u0E17\u0E48\":2288,\"\u0E40\u0E14\u0E35\":1602,\"\u0E17\u0E38\u0E19\":-1141,\"\u0E19\u0E48\u0E32\":648,\"\u0E43\u0E2B\u0E49\":755,\"\u0E01\u0E31\u0E19\":131,\"\u0E2A\u0E38\u0E14\":-178,\"\u0E07 \u0E23\":3219,\"\u0E40\u0E15\u0E2D\":-1512,\"\u0E01\u0E23\u0E30\":2014,\"\u0E21\u0E31\u0E49\":2114,\"\u0E23\u0E32\u0E22\":1759,\"\u0E2D\u0E2D\u0E01\":1040,\"\u0E40\u0E04\u0E23\":1805,\"\u0E17\u0E38\u0E01\":1596,\"\u0E21\u0E31\u0E19\":996,\" 2\":-753,\"\u0E04\u0E48\u0E30\":1302,\"\u0E40\u0E1B\u0E47\":750,\"\u0E14\u0E49\u0E32\":-116,\"\u0E23\u0E27\u0E21\":1379,\"\u0E2B\u0E23\u0E37\":2075,\"\u0E19.\":148,\"\u0E04\u0E48\u0E32\":-790,\"\u0E1F\u0E23\u0E35\":1380,\"\u0E15\u0E23\u0E07\":1923,\"\u0E21\u0E32\u0E25\":-967,\"\u0E07\u0E27\u0E14\":2435,\"\u0E23\u0E35\u0E48\":-987,\"\u0E1B\u0E23\u0E30\":195,\"555\":702,\" \u0E1B\u0E32\":-1831,\"\u0E2D\u0E35\u0E01\":1265,\"\u0E1E\u0E32\u0E19\":-690,\"\u0E17\u0E30\u0E40\":-789,\"\u0E1A\u0E23\u0E34\":1144,\"\u0E23\u0E31\u0E10\":808,\"\u0E40\u0E19\u0E2D\":-674,\"\u0E42\u0E15\u0E42\":1843,\"\u0E1B\u0E23\u0E38\":-1353,\"\u0E41\u0E25\u0E30\":1119,\"\u0E01\u0E25\u0E31\":874,\"\u0E1A\u0E2D\u0E01\":1690,\"\u0E40\u0E17\u0E1E\":-743,\"\u0E19\u0E32\u0E04\":-2126,\"\u0E2D\u0E22\u0E48\":1289,\"\u0E14\u0E2D\u0E01\":2133,\"\u0E27\u0E48\u0E32\":274,\"\u0E21\u0E27\u0E22\":1209,\"\u0E23\u0E2A\u0E0A\":1646,\"\u0E41\u0E1A\u0E1A\":-444,\"\u0E21\u0E36\u0E07\":1247,\"\u0E2B\u0E19\u0E48\":601,\"\u0E41\u0E1B\u0E25\":-865,\"\u0E15\u0E34\u0E14\":1599,\"\u0E44\u0E17\u0E22\":256,\"\u0E40\u0E2D\u0E32\":1247,\"\u0E2D\u0E23\u0E48\":1382,\"\u0E15\u0E35\u0E49\":-823,\"\u0E21\u0E32\u0E23\":-713,\"\u0E2D\u0E19\u0E32\":1059,\"\u0E40\u0E27\u0E25\":1572,\"\u0E2B\u0E23\u0E2D\":1196,\"\u0E01\u0E31\u0E14\":-1651,\" GD\":-1535,\"\u0E40\u0E1A\u0E35\":397,\"\u0E17\u0E23\u0E31\":-1145,\"\u0E1A\u0E35\u0E01\":-824,\"\u0E15\u0E32\u0E21\":1075,\"\u0E44\u0E1B\u0E44\":-1756,\"\u0E40\u0E2A\u0E23\":-178,\" \u0E1B\u0E25\":-354,\"\u0E23\u0E35\u0E42\":2072,\"\u0E14\u0E34\u0E19\":-37,\"\u0E17\u0E49\u0E32\":-1464,\"\u0E40\u0E08\u0E49\":816,\"\u0E2A\u0E34\u0E19\":-774,\"\u0E40\u0E22\u0E2D\":1190,\"\u0E40\u0E1E\u0E37\":1316,\"\u0E02\u0E27\u0E14\":1195,\"the\":1724,\"\u0E21\u0E2D\u0E07\":756,\"\u0E19\u0E49\u0E2D\":1008,\"\u0E23\u0E30\u0E40\":-536,\"\u0E42\u0E14\u0E22\":1196,\" \u0E41\u0E2E\":-1453,\"\u0E1C\u0E34\u0E27\":767,\"\u0E40\u0E08\u0E35\":-1658,\"\u0E2B\u0E27\u0E22\":-1666,\"\u0E01\u0E49\u0E2D\":791,\"\u0E08\u0E31\u0E01\":-842,\"\u0E20\u0E32\u0E1E\":-1022,\"\u0E43\u0E19\u0E27\":-1216,\"\u0E21\u0E35\u0E48\":-1709,\"\u0E2B\u0E21\u0E32\":-1096,\"\u0E21\u0E31\u0E22\":-328,\"\u0E22\u0E2D\u0E14\":601,\" \u0E2D\u0E27\":-1837,\"\u0E40\u0E23\u0E32\":315,\"\u0E19\u0E35\u0E49\":555,\"\u0E40\u0E1E\u0E25\":-346,\" \u0E21\u0E35\":375,\"\u0E01\u0E31\u0E1A\":335,\"\u0E19\u0E38\u0E48\":1285,\"\u0E2A\u0E32\u0E22\":912,\" Pr\":-1155,\"\u0E1A\u0E38\u0E2B\":1006,\"\u0E2A\u0E27\u0E34\":-797,\"\u0E01\u0E15\u0E34\":868,\"\u0E2D\u0E32\u0E22\":666,\"\u0E08\u0E32\u0E01\":692,\"\u0E22\u0E01\u0E42\":1496,\" \u0E44\u0E27\":-1118,\"\u0E01\u0E47\u0E2D\":-1218,\"\u0E40\u0E04\u0E37\":-1154,\"\u0E23\u0E30\u0E2B\":579,\"\u0E08\u0E31\u0E14\":739,\"\u0E27\u0E23\u0E23\":1100,\" Ho\":-1065,\"\u0E01\u0E23\u0E35\":1135,\"\u0E23\u0E38\u0E48\":584,\"\u0E25\u0E34\u0E1B\":384,\"\u0E19\u0E30\u0E04\":491,\"\u0E40\u0E23\u0E35\":-466,\"\u0E0A\u0E21\u0E1E\":1157,\"\u0E02\u0E19\u0E32\":1047,\"\u0E04\u0E30\":804,\"\u0E2D\u0E2A\u0E31\":980,\"\u0E40\u0E14\u0E48\":-154,\"\u0E19\u0E2D\u0E01\":896,\"\u0E40\u0E1E\u0E23\":762,\"\u0E25\u0E32\u0E14\":-495,\"!!\":1197,\"\u0E17\u0E23\u0E39\":886,\"\u0E40\u0E1F\u0E48\":-636,\"\u0E25\u0E34\u0E15\":693,\"\u0E42\u0E04\u0E23\":965,\"\u0E22\u0E35\u0E48\":853,\"\u0E21\u0E49\u0E32\":-1249,\"\u0E17\u0E2D\u0E07\":-809,\" \u0E40\u0E2D\":-300,\"\u0E07\u0E35\u0E49\":1044,\"\u0E44\u0E27\u0E49\":496,\"\u0E14\u0E32\u0E27\":143,\"\u0E04\u0E37\u0E2D\":469,\"\u0E40\u0E19\u0E37\":696,\"\u0E2A\u0E32\u0E23\":-877,\"\u0E01\u0E23\u0E38\":567,\"\u0E40\u0E17\u0E35\":236,\"\u0E41\u0E21\u0E48\":524,\"\u0E23\u0E39\u0E1B\":348,\"\u0E40\u0E1E\u0E34\":553,\"\u0E1C\u0E25\u0E34\":583,\"\u0E02\u0E27\u0E31\":-942,\"\u0E1E\u0E35\u0E40\":-615,\"\u0E16\u0E19\u0E19\":874,\"\u0E19\u0E2D\u0E19\":783,\"\u0E2A\u0E34\u0E27\":548,\" 20\":561,\"Ref\":-423,\"\u0E2B\u0E19\u0E49\":56,\"\u0E15\u0E31\u0E27\":286,\"\u0E25\u0E2D\u0E07\":417,\"\u0E01\u0E23\u0E23\":-286,\"\u0E19\u0E30\u0E40\":-429,\"\u0E43\u0E08\u0E21\":510,\"\u0E1A\u0E17\u0E40\":817,\"\u0E14\u0E35\u0E01\":505,\"\u0E19\u0E32\u0E27\":414,\"\u0E21\u0E35\u0E41\":-557,\"\u0E23\u0E48\u0E27\":397,\"\u0E41\u0E23\u0E07\":-220,\" \u0E15\u0E31\":228,\"\u0E15\u0E49\u0E27\":680,\"\u0E2B\u0E32\u0E23\":-171,\" 3\":-150,\"\u0E2D\u0E30\":538,\"\u0E2A\u0E39\u0E07\":-358,\"\u0E1A\u0E31\u0E15\":352,\"\u0E2D\u0E34\u0E19\":508,\"\u0E2D\u0E40\u0E21\":532,\"\u0E18\u0E23\u0E23\":313,\"\u0E2B\u0E19\u0E2D\":-244,\" \u0E27\u0E2D\":-748,\"\u0E23\u0E34\u0E21\":571,\"\u0E23\u0E31\u0E01\":-326,\"\u0E1A\u0E32\u0E17\":447,\"\u0E2A\u0E1A\u0E32\":242,\"\u0E40\u0E27\u0E2D\":-441,\"\u0E1B\u0E01\u0E15\":560,\"\u0E27\u0E31\u0E22\":673,\"\u0E25\u0E30\u0E40\":-339,\"\u0E40\u0E23\u0E47\":-246,\"\u0E19\u0E35\u0E48\":304,\"\u0E40\u0E02\u0E32\":264,\"\u0E40\u0E0B\u0E47\":117,\"\u0E14\u0E39\u0E14\":-539,\"\u0E01\u0E14\":280,\"\u0E43\u0E08\u0E04\":58,\"\u0E43\u0E19\u0E41\":-979,\"\u0E40\u0E1E\u0E0A\":-511,\"\u0E14\u0E35\u0E44\":742,\"\u0E23\u0E1E.\":662,\"\u0E2D\u0E32\u0E01\":-414,\"\u0E15\u0E2D\u0E19\":301,\"\u0E43\u0E08\u0E01\":-17,\"\u0E40\u0E1A\u0E34\":-464,\"\u0E22\u0E32\u0E23\":117,\"2 \u0E21\":-519,\"\u0E40\u0E2B\u0E21\":118,\"\u0E2D\u0E21\u0E0A\":497,\"\u0E40\u0E14\u0E47\":-278,\"\u0E40\u0E25\u0E47\":236,\"\u0E44\u0E23\u0E1A\":-389,\"\u0E41\u0E2A\u0E07\":361,\"\u0E1B\u0E32\u0E01\":365,\"Cos\":-701,\"\u0E14\u0E35\u0E49\":-387,\"\u0E01\u0E25\u0E34\":443,\"\u0E1B\u0E34\u0E14\":224,\"\u0E40\u0E02\u0E35\":478,\"\u0E21\u0E01\u0E23\":454,\"\u0E15\u0E32\u0E22\":515,\"\u0E2A\u0E27\u0E31\":345,\"\u0E15\u0E23\u0E27\":509,\"!!!\":370,\"\u0E40\u0E15\u0E49\":-390,\"\u0E14\u0E31\u0E07\":154,\"\u0E42\u0E25/\":374,\"\u0E2B\u0E25\u0E2D\":274,\" \u0E1E\u0E32\":-374,\"\u0E27\u0E35\u0E2D\":227,\"10\u0E1B\":-488,\" \u0E1A\u0E49\":-170,\"\u0E2B\u0E32\u0E14\":218,\"\u0E1E\u0E31\u0E1F\":-532,\"\u0E2D\u0E2D\u0E07\":-339,\"\u0E17\u0E31\u0E49\":289,\"\u0E41\u0E1E\u0E07\":345,\"\u0E19\u0E33\u0E40\":183,\"\u0E44\u0E23\u0E49\":313,\"\u0E1B\u0E35\":203,\"\u0E2A\u0E37\u0E2D\":-418,\"\u0E43\u0E08\u0E41\":-203,\"\u0E41\u0E1A\u0E19\":319,\"\u0E40\u0E21\u0E37\":154,\"\u0E21\u0E32\u0E04\":-156,\"\u0E28\u0E23\u0E35\":36,\"\u0E2D\u0E2D\u0E19\":129,\"\u0E22\u0E01\u0E40\":386,\"\u0E01\u0E14\u0E49\":-299,\"\u0E40\u0E23\u0E19\":-161,\"\u0E01\u0E32\u0E19\":137,\" \u0E40\u0E1E\":125,\"\u0E17\u0E32\u0E19\":-92,\"\u0E15\u0E25\u0E32\":57,\") \u0E42\":-291,\"\u0E43\u0E08\u0E17\":258,\"\u0E2D\u0E31\u0E19\":148,\"\u0E21\u0E2D\u0E25\":240,\"\u0E23\u0E35\u0E1F\":136,\"\u0E19\u0E32\u0E17\":210,\"50\":160,\"\u0E04\u0E19\u0E35\":-233,\"\u0E40\u0E04\u0E49\":156,\"201\":112,\"\u0E40\u0E25\u0E35\":141,\"\u0E2D\u0E32\u0E17\":99,\"\u0E1E\u0E25\u0E31\":91,\"\u0E19\u0E27\u0E31\":70,\"\u0E19\u0E34\u0E2A\":82,\"\u0E40\u0E01\u0E2D\":-91,\" \u0E1A\u0E32\":-44,\" \u0E08\u0E23\":-105,\"\u0E40\u0E19\u0E34\":-79,\"\u0E2D\u0E38\u0E14\":49,\"\u0E13 \u0E1A\":163,\"\u0E17\u0E2D\u0E21\":102,\"\u0E2A\u0E31\u0E01\":61,\"\u0E2A\u0E38\u0E02\":-49,\" \u0E40\u0E08\":-90,\"\u0E1E\u0E32\u0E44\":61,\"Hon\":58,\"\u0E15\u0E2D\u0E1A\":101,\"\u0E2D\u0E32\u0E2B\":55,\"Fac\":63,\"\u0E40\u0E1F\u0E2A\":43,\"\u0E14\u0E34\u0E2D\":37,\"\u0E1B\u0E23\u0E31\":14,\"\u0E04\u0E38\u0E13\":20,\"\u0E40\u0E1B\u0E49\":-31,\" Ra\":-31,\"\u0E42\u0E17\u0E19\":34,\"\u0E46\u0E46\":46,\"\u0E40\u0E1B\u0E2D\":-46,\"\u0E1A\u0E32\u0E07\":14,\"\u0E0B\u0E39\u0E0B\":25,\"\u0E19\u0E34\u0E14\":20,\"\u0E20\u0E32\u0E22\":11,\"\u0E14\u0E35\u0E04\":-8,\"\u0E25\u0E07\":-14,\"\u0E21\u0E30\":2,\"\u0E2B\u0E21\u0E2D\":2},\"TW2\":{\"\u0E2D\u0E30\u0E44\":-1876,\"\u0E2D\u0E35\u0E01\":-1242,\"\u0E31\u0E1A\u0E02\":-2138,\"\u0E49\u0E19\u0E17\":-1939,\"\u0E35\u0E48\u0E22\":-2409,\"\u0E35\u0E48 \":-2022,\"\u0E15\u0E4C \":-651,\"\u0E25\u0E49\u0E27\":-920,\"\u0E49\u0E32 \":-985,\"\u0E25\u0E07\u0E17\":-611,\"\u0E32 \u0E0B\":-2637,\"\u0E2D\u0E1A\u0E04\":-1243,\"\u0E07\u0E40\u0E0A\":1943,\"\u0E23\u0E32\u0E04\":-1285,\"\u0E39\u0E49\u0E2A\":-2080,\"\u0E21\u0E32\u0E01\":-988,\"\u0E01\u0E32\u0E23\":-635,\"\u0E2D \u0E42\":-3253,\"\u0E31\u0E27\u0E40\":-394,\"\u0E19\u0E30\u0E19\":-1869,\"\u0E23\u0E4C\u0E0A\":-1118,\"\u0E07 \u0E01\":-3299,\"da \":-693,\"\u0E19 \u0E40\":-1356,\"\u0E22\u0E07\u0E43\":-2542,\"\u0E31\u0E07\u0E44\":-1533,\"\u0E31\u0E1A\u0E40\":-1396,\"\u0E48\u0E21\u0E02\":-1161,\"\u0E27\u0E22\u0E2A\":-847,\"\u0E32\u0E22\u0E1E\":-581,\"\u0E2D\u0E07\u0E01\":-444,\"\u0E49\u0E32\u0E02\":-386,\":  \":-994,\"\u0E02\u0E19\u0E2A\":-1595,\"\u0E14\u0E49\u0E17\":-2422,\"\u0E49 \u0E2E\":-2074,\"\u0E32\u0E07\u0E40\":-159,\"\u0E49\u0E32\u0E07\":-684,\"\u0E22 \u0E15\":-2005,\"\u0E49\u0E33\u0E21\":-1133,\"\u0E49\u0E32\u0E21\":1351,\"\u0E48\u0E07\u0E02\":-1281,\"\u0E34\u0E14\u0E16\":-1124,\"\u0E44\u0E1B \":-2021,\"\u0E27\u0E19\u0E15\":-1074,\"\u0E15\u0E48\u0E17\":-1281,\"\u0E49\u0E32\u0E23\":569,\"\u0E2A\u0E19\u0E43\":1491,\"\u0E07 \u0E23\":-1381,\"\u0E31\u0E07\u0E19\":-1316,\"\u0E17\u0E30\u0E40\":-1128,\"\u0E32\u0E01\u0E21\":-1372,\"\u0E48\u0E32\u0E07\":-883,\"\u0E31\u0E27\u0E2B\":-1299,\"\u0E4C \u0E18\":-1306,\"\u0E19 \u0E08\":-1968,\"\u0E34\u0E14\u0E15\":-1717,\"\u0E0A\u0E49\u0E44\":-1639,\"\u0E27\u0E22\u0E40\":-343,\"ty \":-661,\"\u0E21\u0E32\u0E40\":-1047,\"\u0E21\u0E32\u0E23\":-377,\"\u0E34\u0E19\u0E19\":-710,\"\u0E23\u0E4C \":458,\"\u0E49\u0E46\u0E46\":-1134,\"\u0E19\u0E32\u0E22\":1248,\"\u0E49\u0E27\u0E41\":-1308,\"55 \":-1107,\"\u0E19 \u0E1A\":-1155,\"\u0E23 \u0E2A\":-1121,\"\u0E48\u0E2D\u0E21\":-289,\"\u0E42\u0E04\u0E04\":821,\"\u0E17 \u0E40\":-1153,\"\u0E31\u0E19\u0E21\":-1089,\"\u0E2D\u0E01\u0E40\":-919,\"\u0E31\u0E19\u0E17\":-343,\". .\":-1481,\"\u0E32\u0E07\u0E44\":-1152,\"\u0E4C \u0E44\":-855,\"\u0E46\u0E46\u0E46\":-470,\"\u0E48\u0E2D\u0E01\":450,\"\u0E2D\u0E01\u0E41\":-600,\"\u0E49\u0E07\u0E1D\":-800,\"\u0E1B\u0E35\u0E41\":-1277,\"\u0E34\u0E19\u0E40\":-589,\"\u0E1A\u0E2D\u0E01\":-984,\"\u0E22\u0E27\u0E01\":-1088,\"\u0E14\u0E49\u0E41\":-938,\"\u0E2D\u0E34\u0E2D\":1094,\"\u0E32\u0E27\u0E1A\":-1729,\"\u0E32\u0E22\u0E44\":-479,\"\u0E49\u0E2D\u0E04\":-952,\"\u0E31\u0E01\u0E07\":-583,\"\u0E2D\u0E19\u0E40\":-405,\"\u0E2B\u0E19\u0E2D\":-276,\"\u0E19 \u0E19\":-1146,\"\u0E38\u0E14\u0E19\":-1097,\"\u0E48\u0E32\u0E19\":-411,\"\u0E04 \u0E41\":-1364,\"\u0E31\u0E27\u0E1A\":1092,\"\u0E21\u0E48\u0E27\":-746,\"\u0E34\u0E14\u0E17\":576,\"\u0E34\u0E15\u0E19\":633,\"\u0E32\u0E07\u0E01\":-367,\"\u0E2D\u0E07\u0E08\":-400,\"\u0E31\u0E14\u0E1C\":-633,\"\u0E02\u0E2D\u0E2D\":872,\"\u0E49\u0E19\u0E2B\":-512,\"\u0E31\u0E07\u0E2A\":-490,\"\u0E2D\u0E21\u0E40\":-365,\"\u0E48\u0E30.\":-864,\"\u0E32\u0E14\u0E43\":-382,\"\u0E32\u0E19\u0E43\":-624,\"\u0E42\u0E15\u0E42\":-528,\"\u0E32\u0E01\u0E1A\":-1332,\"\u0E34\u0E19\u0E02\":-820,\"\u0E2D\u0E07\u0E21\":456,\"\u0E31\u0E19\u0E2A\":159,\"\u0E1A\u0E19\u0E40\":967,\"\u0E39\u0E49\u0E43\":-624,\"\u0E2B\u0E49\u0E21\":-1027,\"\u0E39\u0E25\u0E04\":-582,\"\u0E0A\u0E49\u0E08\":-950,\"\u0E48\u0E32\u0E15\":-513,\"\u0E2B\u0E49 \":-386,\"\u0E31\u0E2A\u0E14\":-745,\"\u0E44\u0E1B\u0E01\":-601,\"\u0E2D\u0E1A\u0E16\":-324,\"\u0E48\u0E19\u0E40\":600,\"\u0E35\u0E48\u0E21\":397,\"\u0E27\u0E19\u0E2B\":-337,\"\u0E04\u0E19\u0E02\":-872,\"\u0E49\u0E32\u0E44\":292,\"\u0E14\u0E35\u0E40\":364,\"\u0E31\u0E27\u0E27\":493,\"\u0E23\u0E4C\u0E15\":-318,\"\u0E38\u0E14\u0E22\":-753,\"\u0E48\u0E07\u0E2A\":373,\"\u0E36\u0E01\u0E27\":415,\"\u0E2D\u0E14\u0E40\":453,\"\u0E49\u0E19\u0E40\":106,\"\u0E39\u0E01\u0E01\":340,\"88-\":-399,\"\u0E48\u0E07\u0E40\":-311,\"\u0E49\u0E32\u0E17\":-303,\"\u0E34\u0E27\u0E40\":-335,\"\u0E32\u0E21\u0E2A\":-285,\"\u0E49\u0E07\u0E27\":482,\"\u0E34\u0E19\u0E2A\":-278,\"\u0E21\u0E32\u0E2A\":-219,\"\u0E48\u0E21\u0E40\":-259,\"\u0E36\u0E07\u0E40\":-319,\"\u0E34\u0E19\u0E44\":356,\"\u0E48\u0E07\u0E1B\":-417,\"\u0E35\u0E49\u0E2A\":-414,\"\u0E35\u0E19 \":-259,\"\u0E22\u0E19\u0E43\":-282,\"\u0E02\u0E2D\u0E1A\":-298,\"\u0E38\u0E01\u0E27\":-474,\"\u0E1A\u0E1A\u0E19\":-208,\"\u0E32\u0E23\u0E17\":-254,\"\u0E31\u0E07\u0E1B\":-390,\"\u0E47\u0E19\u0E15\":-517,\"\u0E48\u0E2D\u0E44\":-210,\"\u0E31\u0E19\u0E43\":234,\"\u0E21\u0E30\u0E40\":-121,\"\u0E44\u0E21\u0E21\":-467,\"\u0E2A\u0E35\u0E40\":219,\"\u0E38\u0E01\u0E2D\":232,\"\u0E2A\u0E35\u0E2A\":-254,\"\u0E27\u0E22\u0E07\":-384,\"\u0E1A\u0E19\u0E0B\":-253,\"5 \u0E1B\":-324,\"\u0E1B\u0E35\u0E43\":-193,\"\u0E31\u0E27\u0E43\":-184,\"\u0E49\u0E32\u0E43\":-148,\"\u0E2D\u0E21\u0E23\":-270,\"\u0E31\u0E22\u0E40\":-387,\"\u0E38\u0E1B\u0E1B\":409,\"\u0E32\u0E21 \":-92,\"\u0E31\u0E25 \":-197,\"\u0E08\u0E33\u0E40\":-270,\"\u0E25\u0E30\u0E19\":208,\"\u0E2D\u0E01\u0E01\":-101,\"\u0E25\u0E32\u0E07\":166,\"\u0E23\u0E32\u0E1A\":-100,\"\u0E2D\u0E01\u0E2B\":150,\"\u0E31\u0E19\u0E16\":-143,\"\u0E32\u0E23\u0E08\":-99,\"\u0E39\u0E01\u0E15\":-105,\"\u0E2D\u0E30\u0E40\":26,\"\u0E25\u0E07\u0E23\":-169,\"\u0E2D\u0E1A\u0E2D\":125,\"\u0E2D\u0E07\u0E42\":92,\"\u0E07 \u0E27\":-92,\"\u0E15\u0E32\u0E02\":110,\"in \":40,\"\u0E49\u0E19\u0E15\":63,\"\u0E2D\u0E19\u0E41\":34,\"\u0E36\u0E07\u0E02\":-66,\"\u0E49\u0E27\u0E22\":-17,\"e H\":-11,\"\u0E19\u0E19\u0E19\":-25,\"\u0E49 H\":-17,\"\u0E48\u0E2D\u0E2A\":-5},\"TW3\":{\"\u0E01\u0E27\u0E48\":-2147,\"\u0E19\u0E41\u0E14\":-1440,\"\u0E04\u0E23\u0E31\":-928,\"\u0E07\u0E41\u0E15\":-1264,\"\u0E33\u0E44\u0E21\":-1913,\"\u0E32\u0E23\u0E16\":-3032,\"\u0E48\u0E2D\u0E22\":-1015,\"\u0E1A\u0E1C\u0E34\":-338,\"\u0E30\u0E44\u0E23\":-1028,\"\u0E30\u0E19\u0E33\":-1363,\"\u0E19\u0E17\u0E35\":-689,\"\u0E07\u0E44\u0E07\":-308,\"\u0E01\u0E23\u0E30\":-700,\"\u0E19\u0E19\u0E35\":-940,\"\u0E32\u0E04\u0E32\":-85,\"\u0E07\u0E1E\u0E37\":-1661,\"\u0E27\u0E40\u0E2D\":-1287,\". .\":-3092,\" \u0E44\u0E27\":-2116,\"\u0E07\u0E2A\u0E33\":-2535,\"\u0E32\u0E40\u0E25\":-962,\"\u0E2D\u0E23\u0E48\":-1480,\"\u0E07\u0E40\u0E17\":-849,\"\u0E19\u0E04\u0E23\":-474,\"\u0E19\u0E44\u0E1B\":-652,\"\u0E48\u0E2A\u0E38\":-1902,\"\u0E19 \u0E19\":-1686,\"\u0E07\u0E01\u0E32\":-329,\"\u0E07\u0E19\u0E35\":-422,\"\u0E14\u0E02\u0E32\":-1004,\"\u0E16\u0E44\u0E1F\":-2197,\" \u0E23\u0E39\":-1711,\" \u0E1B\u0E32\":-1703,\"\u0E30\u0E40\u0E2D\":-1174,\"\u0E01\u0E04\u0E49\":-695,\"\u0E14\u0E0A\u0E2D\":-2140,\"\u0E22\u0E2A\u0E39\":-1263,\"\u0E01\u0E0B\u0E35\":-1115,\"\u0E48\u0E27\u0E48\":-1653,\"  \u0E21\":-1513,\"\u0E07\u0E2B\u0E19\":-197,\"\u0E48\u0E17\u0E33\":-1892,\"\u0E19 \u0E1A\":-1717,\"\u0E39\u0E41\u0E25\":-1546,\"\u0E32 \u0E0B\":-1568,\" \u0E40\u0E2D\":-687,\"\u0E19\u0E40\u0E19\":-183,\"\u0E1B\u0E44\u0E14\":-2685,\"5 \u0E1B\":-1096,\"\u0E48\u0E14\u0E34\":-1787,\"\u0E32\u0E02\u0E2D\":-1408,\"\u0E32\u0E19\u0E32\":1547,\"\u0E1A\u0E1B\u0E23\":-349,\"\u0E4C \u0E18\":-1107,\"\u0E35\u0E41\u0E21\":-1417,\"\u0E07\u0E1B\u0E23\":-624,\"\u0E1A\u0E2A\u0E19\":-1654,\"\u0E32\u0E40\u0E14\":-1017,\"\u0E22\u0E25\u0E30\":-1014,\"\u0E1A\u0E23\u0E34\":-258,\"\u0E35 \u0E04\":-1546,\"\u0E48\u0E2B\u0E49\":-1288,\"\u0E19\u0E44\u0E2B\":1424,\"\u0E32\u0E15\u0E23\":-1466,\"\u0E49\u0E27\u0E48\":727,\"\u0E32\u0E2A\u0E38\":-917,\"\u0E32\u0E01\u0E34\":464,\"\u0E07\u0E01\u0E34\":-1064,\"\u0E1A\u0E2D\u0E32\":-1198,\"\u0E19 \u0E40\":-983,\"\u0E1B\u0E01\u0E34\":-817,\" \u0E2E\u0E32\":-898,\"\u0E22\u0E40\u0E2B\":-1495,\"\u0E22\u0E40\u0E1B\":-1362,\"\u0E1F\u0E40\u0E1F\":-593,\"\u0E35\u0E21\u0E32\":-1147,\" \u0E01\u0E31\":-1315,\"\u0E22\u0E41\u0E25\":-1045,\"\u0E47\u0E21\u0E35\":-1016,\"\u0E32\u0E22\u0E19\":968,\"\u0E16\u0E19\u0E30\":-643,\"\u0E01\u0E1E\u0E19\":-1509,\"\u0E01\u0E23\u0E49\":1201,\"\u0E07 \u0E27\":-1097,\"\u0E19\u0E23\u0E32\":-1660,\" Ho\":-593,\"\u0E14\u0E40\u0E14\":-741,\"\u0E2D\u0E40\u0E1E\":-794,\"\u0E2D\u0E22\u0E32\":-186,\"\u0E35\u0E40\u0E2D\":-542,\"\u0E07\u0E2D\u0E2D\":-853,\" \u0E08\u0E23\":-1161,\" \u0E2A\u0E1B\":-770,\"\u0E2D\u0E2D\u0E2D\":-542,\"\u0E34\u0E01\u0E32\":-397,\"\u0E21\u0E17\u0E35\":-885,\"\u0E23\u0E40\u0E21\":-1040,\"\u0E1A\u0E19\u0E35\":-806,\"\u0E49\u0E16\u0E36\":-691,\"\u0E19\u0E15\u0E35\":-503,\"\u0E01\u0E01\u0E49\":808,\"\u0E19\u0E40\u0E02\":-879,\"\u0E32\u0E40\u0E15\":-594,\"\u0E01\u0E01\u0E01\":-493,\" \u0E2A\u0E27\":-954,\"\u0E32\u0E08\u0E2D\":-488,\" \u0E27\u0E2D\":-823,\"\u0E2D \u0E42\":-565,\" \u0E40\u0E2E\":-448,\" \u0E2B\u0E19\":-647,\"\u0E2D\u0E2A\u0E31\":-755,\"\u0E07\u0E01\u0E31\":-583,\"\u0E07\u0E07\u0E32\":-396,\"\u0E07\u0E2B\u0E31\":-792,\"\u0E07\u0E17\u0E30\":-800,\"\u0E07\u0E19\u0E31\":-489,\"\u0E23\u0E41\u0E1E\":-490,\"\u0E13\u0E04\u0E48\":-1088,\"\u0E13\u0E2A\u0E21\":-987,\" \u0E1A\u0E49\":-814,\"\u0E27\u0E04\u0E37\":-1045,\"\u0E14\u0E19\u0E35\":-108,\"\u0E22 \u0E15\":-694,\"\u0E07\u0E04\u0E37\":-522,\"\u0E32\u0E23\u0E48\":-503,\"\u0E07\u0E0A\u0E37\":-678,\"\u0E19\u0E14\u0E39\":-278,\"\u0E19\u0E43\u0E08\":-243,\"\u0E49\u0E41\u0E1A\":-167,\"\u0E27\u0E41\u0E15\":-466,\"\u0E2D\u0E23\u0E31\":338,\"3. \":563,\"\u0E19\u0E04\u0E30\":-423,\"\u0E32\u0E41\u0E14\":-594,\"\u0E23\u0E15\u0E32\":-293,\"\u0E19\u0E21\u0E32\":-459,\"\u0E1A\u0E04\u0E23\":-515,\"\u0E19\u0E19\u0E32\":419,\"\u0E07\u0E08\u0E32\":-428,\"\u0E32\u0E0A\u0E34\":-284,\"\u0E22\u0E1E\u0E31\":-412,\"\u0E21\u0E40\u0E04\":-96,\"\u0E2D\u0E2A\u0E21\":394,\"\u0E40\u0E0A\u0E37\":145,\" \u0E1E\u0E32\":-552,\"\u0E27\u0E44\u0E2B\":-351,\"\u0E19\u0E2A\u0E38\":-337,\"\u0E4C\u0E2A\u0E34\":-198,\"\u0E21\u0E22\u0E2D\":155,\" \u0E1A\u0E32\":-346,\"\u0E15\u0E27\u0E34\":194,\"\u0E2D\u0E40\u0E08\":-356,\"\u0E2D\u0E40\u0E2A\":327,\"\u0E07\u0E14\u0E37\":-482,\"\u0E25\u0E40\u0E25\":-74,\"\u0E2D\u0E21\u0E31\":-269,\"\u0E07\u0E40\u0E14\":296,\"\u0E19 \u0E08\":-165,\"\u0E32\u0E2D\u0E2D\":229,\"\u0E1A\u0E40\u0E1B\":-307,\"\u0E2D\u0E01\u0E32\":6,\"\u0E22\u0E2B\u0E25\":-279,\"\u0E07\u0E19\u0E49\":-250,\"\u0E30\u0E2A\u0E34\":-268,\"\u0E21\u0E1E\u0E32\":-158,\"\u0E21\u0E40\u0E21\":-83,\"\u0E33\u0E40\u0E02\":-278,\"\u0E30\u0E40\u0E27\":-194,\"\u0E32\u0E27\u0E31\":146,\"\u0E2D\u0E22\u0E01\":229,\"\u0E04 \u0E41\":-200,\" Sh\":-200,\"\u0E19\u0E1E\u0E34\":-199,\" \u0E27\u0E07\":170,\"e H\":-145,\"\u0E19\u0E41\u0E2A\":-168,\"\u0E32\u0E01\u0E31\":52,\"\u0E01\u0E1A\u0E49\":-146,\"\u0E21\u0E41\u0E1B\":-120,\"\u0E2D\u0E1A\u0E32\":82,\"\u0E1910\":-67,\"\u0E32\u0E15\u0E35\":49,\"\u0E19\u0E19\u0E31\":79,\"\u0E27\u0E2D\u0E22\":-155,\"\u0E35\u0E27\u0E34\":-108,\"\u0E32\u0E07 \":84,\"\u0E32\u0E19\u0E49\":84,\"\u0E07\u0E02\u0E32\":-41,\"\u0E21\u0E2A\u0E38\":-90,\"\u0E25 \u0E1A\":-49,\"\u0E25\u0E01\u0E32\":93,\"\u0E07\u0E23\u0E32\":-90,\"\u0E19\u0E40\u0E23\":52,\"\u0E07\u0E40\u0E27\":34,\"\u0E49\u0E21\u0E31\":-37,\"\u0E08\u0E23\u0E34\":-8,\"\u0E01\u0E25\u0E34\":-28,\"\u0E32\u0E23\u0E49\":8,\"d O\":-2}}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Parses an html string and returns a parsed html document.\n * @param html An HTML string.\n * @return A Document.\n */\nexport const parseFromString = (html: string) => {\n  return new window.DOMParser().parseFromString(html, 'text/html');\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Base BudouX parser.\n */\nexport class Parser {\n  /** BudouX model data */\n  private readonly model: Map<string, Map<string, number>>;\n  private readonly baseScore: number;\n\n  /**\n   * Constructs a BudouX parser.\n   * @param model A model data.\n   */\n  constructor(model: {[key: string]: {[key: string]: number}}) {\n    this.model = new Map(\n      Object.entries(model).map(([k, v]) => [k, new Map(Object.entries(v))])\n    );\n    this.baseScore =\n      -0.5 *\n      [...this.model.values()]\n        .map(group => [...group.values()])\n        .flat()\n        .reduce((prev, curr) => prev + curr, 0);\n  }\n\n  /**\n   * Parses the input sentence and returns a list of semantic chunks.\n   *\n   * @param sentence An input sentence.\n   * @return The retrieved chunks.\n   */\n  parse(sentence: string): string[] {\n    if (sentence === '') return [];\n    const boundaries = this.parseBoundaries(sentence);\n    const result = [];\n    let start = 0;\n    for (const boundary of boundaries) {\n      result.push(sentence.slice(start, boundary));\n      start = boundary;\n    }\n    result.push(sentence.slice(start));\n    return result;\n  }\n\n  /**\n   * Parses the input sentence and returns a list of boundaries.\n   *\n   * @param sentence An input sentence.\n   * @return The list of boundaries.\n   */\n  parseBoundaries(sentence: string): number[] {\n    const result = [];\n\n    for (let i = 1; i < sentence.length; i++) {\n      let score = this.baseScore;\n      // NOTE: Score values in models may be negative.\n      /* eslint-disable */\n      score += this.model.get('UW1')?.get(sentence.substring(i - 3, i - 2)) || 0;\n      score += this.model.get('UW2')?.get(sentence.substring(i - 2, i - 1)) || 0;\n      score += this.model.get('UW3')?.get(sentence.substring(i - 1, i)) || 0;\n      score += this.model.get('UW4')?.get(sentence.substring(i, i + 1)) || 0;\n      score += this.model.get('UW5')?.get(sentence.substring(i + 1, i + 2)) || 0;\n      score += this.model.get('UW6')?.get(sentence.substring(i + 2, i + 3)) || 0;\n      score += this.model.get('BW1')?.get(sentence.substring(i - 2, i)) || 0;\n      score += this.model.get('BW2')?.get(sentence.substring(i - 1, i + 1)) || 0;\n      score += this.model.get('BW3')?.get(sentence.substring(i, i + 2)) || 0;\n      score += this.model.get('TW1')?.get(sentence.substring(i - 3, i)) || 0;\n      score += this.model.get('TW2')?.get(sentence.substring(i - 2, i + 1)) || 0;\n      score += this.model.get('TW3')?.get(sentence.substring(i - 1, i + 2)) || 0;\n      score += this.model.get('TW4')?.get(sentence.substring(i, i + 3)) || 0;\n      /* eslint-enable */\n      if (score > 0) result.push(i);\n    }\n    return result;\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {parseFromString} from './dom.js';\nimport {Parser} from './parser.js';\n\nconst assert = console.assert;\n\nconst ZWSP_CODEPOINT = 0x200b; // U+200B ZERO WIDTH SPACE\nconst ZWSP = String.fromCharCode(ZWSP_CODEPOINT);\n\n// We could use `Node.TEXT_NODE` and `Node.ELEMENT_NODE` in a browser context,\n// but we define the same here for Node.js environments.\nconst NodeType = {\n  ELEMENT_NODE: 1,\n  TEXT_NODE: 3,\n};\n\nconst DomAction = {\n  Inline: 0, // An inline content, becomes a part of a paragraph.\n  Block: 1, // A nested paragraph.\n  Skip: 2, // Skip the content. The content before and after are connected.\n  Break: 3, // A forced break. The content before and after become paragraphs.\n  NoBreak: 4, // The content provides context, but it's not breakable.\n  BreakOpportunity: 5, // Force a break opportunity.\n} as const;\ntype DomAction = (typeof DomAction)[keyof typeof DomAction];\n\n/**\n * Determines the action from an element name, as defined in\n * {@link https://html.spec.whatwg.org/multipage/rendering.html HTML Rendering}.\n * See also {@link actionForElement}.\n */\nconst domActions: {[name: string]: DomAction} = {\n  // Hidden elements\n  // https://html.spec.whatwg.org/multipage/rendering.html#hidden-elements\n  AREA: DomAction.Skip,\n  BASE: DomAction.Skip,\n  BASEFONT: DomAction.Skip,\n  DATALIST: DomAction.Skip,\n  HEAD: DomAction.Skip,\n  LINK: DomAction.Skip,\n  META: DomAction.Skip,\n  NOEMBED: DomAction.Skip,\n  NOFRAMES: DomAction.Skip,\n  PARAM: DomAction.Skip,\n  RP: DomAction.Skip,\n  SCRIPT: DomAction.Skip,\n  STYLE: DomAction.Skip,\n  TEMPLATE: DomAction.Skip,\n  TITLE: DomAction.Skip,\n  NOSCRIPT: DomAction.Skip,\n\n  // Flow content\n  // https://html.spec.whatwg.org/multipage/rendering.html#flow-content-3\n  HR: DomAction.Break,\n  // Disable if `white-space: pre`.\n  LISTING: DomAction.Skip,\n  PLAINTEXT: DomAction.Skip,\n  PRE: DomAction.Skip,\n  XMP: DomAction.Skip,\n\n  // Phrasing content\n  // https://html.spec.whatwg.org/multipage/rendering.html#phrasing-content-3\n  BR: DomAction.Break,\n  RT: DomAction.Skip,\n  WBR: DomAction.BreakOpportunity,\n\n  // Form controls\n  // https://html.spec.whatwg.org/multipage/rendering.html#form-controls\n  INPUT: DomAction.Skip,\n  SELECT: DomAction.Skip,\n  BUTTON: DomAction.Skip,\n  TEXTAREA: DomAction.Skip,\n\n  // Other elements where the phrase-based line breaking should be disabled.\n  // https://github.com/google/budoux/blob/main/budoux/skip_nodes.json\n  ABBR: DomAction.Skip,\n  CODE: DomAction.Skip,\n  IFRAME: DomAction.Skip,\n  TIME: DomAction.Skip,\n  VAR: DomAction.Skip,\n\n  // Deprecated, but supported in all browsers.\n  // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nobr\n  NOBR: DomAction.NoBreak,\n};\n\nconst defaultBlockElements = new Set([\n  // 15.3.2 The page\n  'HTML',\n  'BODY',\n  // 15.3.3 Flow content\n  'ADDRESS',\n  'BLOCKQUOTE',\n  'CENTER',\n  'DIALOG',\n  'DIV',\n  'FIGURE',\n  'FIGCAPTION',\n  'FOOTER',\n  'FORM',\n  'HEADER',\n  'LEGEND',\n  'LISTING',\n  'MAIN',\n  'P',\n  // 15.3.6 Sections and headings\n  'ARTICLE',\n  'ASIDE',\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n  'HGROUP',\n  'NAV',\n  'SECTION',\n  // 15.3.7 Lists\n  'DIR',\n  'DD',\n  'DL',\n  'DT',\n  'MENU',\n  'OL',\n  'UL',\n  'LI',\n  // 15.3.8 Tables\n  'TABLE',\n  'CAPTION',\n  'COL',\n  'TR',\n  'TD',\n  'TH',\n  // 15.3.12 The fieldset and legend elements\n  'FIELDSET',\n  // 15.5.4 The details and summary elements\n  'DETAILS',\n  'SUMMARY',\n  // 15.5.12 The marquee element\n  'MARQUEE',\n]);\n\n/**\n * Determine the action for a CSS `display` property value.\n * @param display The value of the CSS `display` property.\n * @return The {@link domActions} for the value.\n */\nfunction actionForDisplay(display: string): DomAction {\n  // Handle common cases first.\n  if (display === 'inline') return DomAction.Inline;\n  if (display === 'block') return DomAction.Block;\n\n  // Handle Ruby base as in-flow.\n  if (display.startsWith('ruby')) {\n    if (display === 'ruby-text') return DomAction.Skip;\n    return DomAction.Inline;\n  }\n\n  // Handle other values including multi-value syntax as blocks.\n  // https://drafts.csswg.org/css-display/#the-display-properties\n  return DomAction.Block;\n}\n\n/**\n * Determine the action for an element.\n * @param element An element to determine the action for.\n * @return The {@link domActions} for the element.\n */\nfunction actionForElement(element: Element): DomAction {\n  const nodeName = element.nodeName;\n  const action = domActions[nodeName];\n  if (action !== undefined) return action;\n\n  if (typeof globalThis.getComputedStyle === 'function') {\n    const style = globalThis.getComputedStyle(element);\n    switch (style.whiteSpace) {\n      case 'nowrap':\n      case 'pre':\n        return DomAction.NoBreak;\n    }\n\n    const display = style.display;\n    if (display) return actionForDisplay(display);\n    // `display` is an empty string if the element is not connected.\n  }\n\n  // Use the built-in rules if the `display` property is empty, or if\n  // `getComputedStyle` is missing (e.g., jsdom.)\n  return defaultBlockElements.has(nodeName)\n    ? DomAction.Block\n    : DomAction.Inline;\n}\n\n/**\n * Applies wrapping styles to make linebreak controls work in children.\n * @param element A parent element to apply the styles.\n */\nexport const applyWrapStyle = (element: HTMLElement) => {\n  element.style.wordBreak = 'keep-all';\n  element.style.overflowWrap = 'anywhere';\n};\n\n/**\n * Represents a node in {@link Paragraph}.\n *\n * It wraps a {@link Text} or a {@link string}.\n *\n * A {@link string} provides the context for the parser, but it can't be split.\n */\nclass NodeOrText {\n  nodeOrText: Text | string;\n  chunks: string[] = [];\n  hasBreakOpportunityAfter = false;\n\n  constructor(nodeOrText: Text | string) {\n    this.nodeOrText = nodeOrText;\n  }\n\n  private static isString(value: Text | string): value is string {\n    return typeof value === 'string';\n  }\n\n  get canSplit(): boolean {\n    return !NodeOrText.isString(this.nodeOrText);\n  }\n\n  get text(): string | null {\n    return NodeOrText.isString(this.nodeOrText)\n      ? this.nodeOrText\n      : this.nodeOrText.nodeValue;\n  }\n\n  get length(): number {\n    return this.text?.length ?? 0;\n  }\n\n  /**\n   * Split the {@link Text} in the same way as the {@link chunks}.\n   * Joining all {@link chunks} must be equal to {@link text}.\n   */\n  split(separator: string | Node) {\n    const chunks = this.chunks;\n    assert(chunks.length === 0 || chunks.join('') === this.text);\n    if (chunks.length <= 1) return;\n    if (NodeOrText.isString(this.nodeOrText)) return;\n    const node = this.nodeOrText;\n    if (typeof separator === 'string') {\n      // If the `separator` is a string, insert it at each boundary.\n      node.nodeValue = chunks.join(separator);\n      return;\n    }\n\n    // Otherwise create a `Text` node for each chunk, with the separator node\n    // between them, and replace the `node` with them.\n    const document = node.ownerDocument;\n    let nodes = [];\n    for (const chunk of chunks) {\n      if (chunk) nodes.push(document.createTextNode(chunk));\n      // Add a separator between chunks. To simplify the logic, add a separator\n      // after each chunk, then remove the last one.\n      // To avoid `cloneNode` for the temporary one that is going to be removed,\n      // add `null` as a marker, then replace them with `cloneNode` later.\n      nodes.push(null);\n    }\n    nodes.pop();\n    nodes = nodes.map(n => (n ? n : separator.cloneNode(true)));\n    node.replaceWith(...nodes);\n  }\n}\nexport class NodeOrTextForTesting extends NodeOrText {}\n\n/**\n * Represents a \"paragraph\", broken by block boundaries or forced breaks.\n *\n * A CSS\n * {@link https://drafts.csswg.org/css2/#inline-formatting inline formatting context}\n * is usually a \"paragraph\", but it can be broken into multiple paragraphs by\n * forced breaks such as `<br>`.\n */\nclass Paragraph {\n  element: HTMLElement;\n  nodes: NodeOrText[] = [];\n\n  constructor(element: HTMLElement) {\n    this.element = element;\n  }\n\n  isEmpty(): boolean {\n    return this.nodes.length === 0;\n  }\n  get text(): string {\n    return this.nodes.map(node => node.text).join('');\n  }\n\n  get lastNode(): NodeOrText | undefined {\n    return this.nodes.length ? this.nodes[this.nodes.length - 1] : undefined;\n  }\n  setHasBreakOpportunityAfter() {\n    const lastNode = this.lastNode;\n    if (lastNode) lastNode.hasBreakOpportunityAfter = true;\n  }\n\n  /**\n   * @return Indices of forced break opportunities in the source.\n   * They can be created by `<wbr>` tag or `&ZeroWidthSpace;`.\n   */\n  getForcedOpportunities(): number[] {\n    const opportunities: number[] = [];\n    let len = 0;\n    for (const node of this.nodes) {\n      if (node.canSplit) {\n        const text = node.text;\n        if (text) {\n          for (let i = 0; i < text.length; ++i) {\n            if (text.charCodeAt(i) === ZWSP_CODEPOINT) {\n              opportunities.push(len + i + 1);\n            }\n          }\n        }\n      }\n      len += node.length;\n      if (node.hasBreakOpportunityAfter) {\n        opportunities.push(len);\n      }\n    }\n    return opportunities;\n  }\n\n  /**\n   * @return Filtered {@param boundaries} by excluding\n   * {@link getForcedOpportunities} if it's not empty.\n   * Otherwise {@param boundaries}.\n   */\n  excludeForcedOpportunities(boundaries: number[]): number[] {\n    const forcedOpportunities = this.getForcedOpportunities();\n    if (!forcedOpportunities.length) return boundaries;\n    const set = new Set<number>(forcedOpportunities);\n    return boundaries.filter(i => !set.has(i));\n  }\n}\nexport class ParagraphForTesting extends Paragraph {}\n\n/**\n * Options for {@link HTMLProcessor}.\n */\nexport interface HTMLProcessorOptions {\n  /**\n   * This class name is added to the containing block when the BudouX is applied.\n   * The containing block should have following CSS properties to make it work.\n   * `{ word-break: keep-all; overflow-wrap: anywhere; }`\n   *\n   * When falsy, an inline style is set instead.\n   */\n  className?: string;\n  /**\n   * The separator to insert at each semantics boundary.\n   *\n   * When it's a {@link Node}, a clone of the {@link Node} will be inserted.\n   *\n   * The default value is U+200B ZERO WIDTH SPACE.\n   */\n  separator?: string | Node;\n}\n\n/**\n * Adds HTML processing support to a BudouX {@link Parser}.\n */\nexport class HTMLProcessor {\n  private parser_: Parser;\n  /** See {@link HTMLProcessorOptions.className}. */\n  className?: string;\n  /** See {@link HTMLProcessorOptions.separator}. */\n  separator: string | Node = ZWSP;\n\n  /**\n   * @param parser A BudouX {@link Parser} to compute semantic line breaks.\n   */\n  constructor(parser: Parser, options?: HTMLProcessorOptions) {\n    this.parser_ = parser;\n    if (options !== undefined) {\n      if (options.className !== undefined) this.className = options.className;\n      if (options.separator !== undefined) this.separator = options.separator;\n    }\n  }\n\n  /**\n   * Checks if the given element has a text node in its children.\n   *\n   * @param ele An element to be checked.\n   * @return Whether the element has a child text node.\n   */\n  static hasChildTextNode(ele: HTMLElement) {\n    for (const child of ele.childNodes) {\n      if (child.nodeType === NodeType.TEXT_NODE) return true;\n    }\n    return false;\n  }\n\n  /**\n   * Applies markups for semantic line breaks to the given HTML element.\n   *\n   * It breaks descendant nodes into paragraphs,\n   * and applies the BudouX to each paragraph.\n   * @param element The input element.\n   */\n  applyToElement(element: HTMLElement) {\n    for (const block of this.getBlocks(element)) {\n      assert(!block.isEmpty());\n      this.applyToParagraph(block);\n    }\n  }\n\n  /**\n   * Find paragraphs from a given HTML element.\n   * @param element The root element to find paragraphs.\n   * @param parent The parent {@link Paragraph} if any.\n   * @return A list of {@link Paragraph}s.\n   */\n  *getBlocks(\n    element: HTMLElement,\n    parent?: Paragraph\n  ): IterableIterator<Paragraph> {\n    assert(element.nodeType === NodeType.ELEMENT_NODE);\n\n    // Skip if it was once applied to this element.\n    if (this.className && element.classList.contains(this.className)) return;\n\n    const action = actionForElement(element);\n    if (action === DomAction.Skip) return;\n    if (action === DomAction.Break) {\n      if (parent && !parent.isEmpty()) {\n        parent.setHasBreakOpportunityAfter();\n        yield parent;\n        parent.nodes = [];\n      }\n      assert(!element.firstChild);\n      return;\n    }\n    if (action === DomAction.BreakOpportunity) {\n      if (parent) parent.setHasBreakOpportunityAfter();\n      return;\n    }\n\n    // Determine if this element creates a new inline formatting context, or if\n    // this element belongs to the parent inline formatting context.\n    assert(\n      action === DomAction.Block ||\n        action === DomAction.Inline ||\n        action === DomAction.NoBreak\n    );\n    const isNewBlock = !parent || action === DomAction.Block;\n    const block = isNewBlock ? new Paragraph(element) : parent;\n\n    // Collect all text nodes in this inline formatting context, while searching\n    // descendant elements recursively.\n    for (const child of element.childNodes) {\n      switch (child.nodeType) {\n        case NodeType.ELEMENT_NODE:\n          for (const childBlock of this.getBlocks(child as HTMLElement, block))\n            yield childBlock;\n          break;\n        case NodeType.TEXT_NODE:\n          if (action === DomAction.NoBreak) {\n            const text = child.nodeValue;\n            if (text) {\n              block.nodes.push(new NodeOrText(text));\n            }\n            break;\n          }\n          block.nodes.push(new NodeOrText(child as Text));\n          break;\n      }\n    }\n\n    // Apply if this is an inline formatting context.\n    if (isNewBlock && !block.isEmpty()) yield block;\n  }\n\n  /**\n   * Apply the BudouX to the given {@link Paragraph}.\n   * @param paragraph The {@link Paragraph} to apply.\n   */\n  applyToParagraph(paragraph: Paragraph): void {\n    assert(paragraph.nodes.length > 0);\n    if (!paragraph.nodes.some(node => node.canSplit)) return;\n    const text = paragraph.text;\n    // No changes if whitespace-only.\n    if (/^\\s*$/.test(text)) return;\n\n    // Compute the phrase boundaries.\n    const boundaries = this.parser_.parseBoundaries(text);\n    // No changes if single phrase.\n    if (boundaries.length <= 0) return;\n    // The boundaries should be between 1 and `text.length - 1` in the\n    // ascending order.\n    assert(boundaries[0] > 0);\n    assert(boundaries.every((x, i) => i === 0 || x > boundaries[i - 1]));\n    assert(boundaries[boundaries.length - 1] < text.length);\n\n    const adjustedBoundaries = paragraph.excludeForcedOpportunities(boundaries);\n\n    // Add a sentinel to help iterating.\n    adjustedBoundaries.push(text.length + 1);\n\n    this.splitNodes(paragraph.nodes, adjustedBoundaries);\n    this.applyBlockStyle(paragraph.element);\n  }\n\n  /**\n   * Split {@link NodeOrText} at the specified boundaries.\n   * @param nodes A list of {@link NodeOrText}.\n   * @param boundaries A list of indices of the text to split at.\n   */\n  splitNodes(nodes: NodeOrText[], boundaries: number[]): void {\n    assert(boundaries.length > 0);\n    assert(boundaries.every((x, i) => i === 0 || x > boundaries[i - 1]));\n    const textLen = nodes.reduce((sum, node) => sum + node.length, 0);\n    // The last boundary must be a sentinel.\n    assert(boundaries[boundaries.length - 1] > textLen);\n\n    // Distribute `boundaries` to `node.chunks`.\n    let boundary_index = 0;\n    let boundary = boundaries[0];\n    assert(boundary > 0);\n    let nodeStart = 0; // the start index of the `nodeText` in the whole text.\n    let lastNode: NodeOrText | null = null;\n    for (const node of nodes) {\n      assert(boundary >= nodeStart);\n      assert(node.chunks.length === 0);\n      const nodeText = node.text;\n      if (!nodeText) continue;\n      const nodeLength = nodeText.length;\n      const nodeEnd = nodeStart + nodeLength;\n      assert(!lastNode || lastNode.canSplit);\n      if (!node.canSplit) {\n        // If there's a boundary between nodes and `lastNode.canSplit`, add a\n        // boundary to the end of the `lastNode`.\n        if (lastNode && boundary === nodeStart) {\n          if (lastNode.chunks.length === 0)\n            lastNode.chunks.push(lastNode.text ?? '');\n          lastNode.chunks.push('');\n        }\n        while (boundary < nodeEnd) {\n          boundary = boundaries[++boundary_index];\n        }\n        lastNode = null;\n        nodeStart = nodeEnd;\n        continue;\n      }\n\n      // Check if the next boundary is in this `node`.\n      lastNode = node;\n      if (boundary >= nodeEnd) {\n        nodeStart = nodeEnd;\n        continue;\n      }\n\n      // Compute the boundary indices in the `node`.\n      const chunks = node.chunks;\n      let chunkStartInNode = 0;\n      while (boundary < nodeEnd) {\n        const boundaryInNode = boundary - nodeStart;\n        assert(boundaryInNode >= chunkStartInNode);\n        chunks.push(nodeText.slice(chunkStartInNode, boundaryInNode));\n        chunkStartInNode = boundaryInNode;\n        boundary = boundaries[++boundary_index];\n      }\n      // Add the rest of the `nodeText`.\n      assert(chunkStartInNode < nodeLength);\n      chunks.push(nodeText.slice(chunkStartInNode));\n\n      nodeStart = nodeEnd;\n    }\n    // Check if all nodes and boundaries are consumed.\n    assert(nodeStart === textLen);\n    assert(boundary_index < boundaries.length);\n    assert(boundaries[boundary_index] >= textLen);\n\n    // `node.chunks` are finalized. Split them.\n    for (const node of nodes) {\n      node.split(this.separator);\n    }\n  }\n\n  /**\n   * Applies the block style to the given element.\n   * @param element The element to apply the block style.\n   */\n  applyBlockStyle(element: HTMLElement): void {\n    if (this.className) {\n      element.classList.add(this.className);\n      return;\n    }\n    applyWrapStyle(element);\n  }\n}\n\n/**\n * BudouX {@link Parser} with HTML processing support.\n */\nexport class HTMLProcessingParser extends Parser {\n  htmlProcessor: HTMLProcessor;\n\n  constructor(\n    model: {[key: string]: {[key: string]: number}},\n    htmlProcessorOptions: HTMLProcessorOptions = {\n      separator: ZWSP,\n    }\n  ) {\n    super(model);\n    this.htmlProcessor = new HTMLProcessor(this, htmlProcessorOptions);\n  }\n\n  /**\n   * Applies markups for semantic line breaks to the given HTML element.\n   * @param parentElement The input element.\n   */\n  applyToElement(parentElement: HTMLElement) {\n    this.htmlProcessor.applyToElement(parentElement);\n  }\n\n  /**\n   * Translates the given HTML string to another HTML string with markups\n   * for semantic line breaks.\n   * @param html An input html string.\n   * @return The translated HTML string.\n   */\n  translateHTMLString(html: string) {\n    if (html === '') return html;\n    const doc = parseFromString(html);\n    if (HTMLProcessor.hasChildTextNode(doc.body)) {\n      const wrapper = doc.createElement('span') as unknown as HTMLElement;\n      wrapper.append(...doc.body.childNodes);\n      doc.body.append(wrapper);\n    }\n    this.applyToElement(doc.body.childNodes[0] as HTMLElement);\n    return doc.body.innerHTML;\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {model as jaModel} from './data/models/ja.js';\nimport {model as zhHansModel} from './data/models/zh-hans.js';\nimport {model as zhHantModel} from './data/models/zh-hant.js';\nimport {model as thModel} from './data/models/th.js';\nimport {HTMLProcessingParser} from './html_processor.js';\n\nexport {Parser} from './parser.js';\nexport {HTMLProcessor, HTMLProcessingParser} from './html_processor.js';\nexport {jaModel, zhHansModel, zhHantModel};\n\n/**\n * Loads a parser equipped with the default Japanese model.\n * @return A parser with the default Japanese model.\n */\nexport const loadDefaultJapaneseParser = () => {\n  return new HTMLProcessingParser(jaModel);\n};\n\n/**\n * Loads a parser equipped with the default Simplified Chinese model.\n * @return A parser with the default Simplified Chinese model.\n */\nexport const loadDefaultSimplifiedChineseParser = () => {\n  return new HTMLProcessingParser(zhHansModel);\n};\n\n/**\n * Loads a parser equipped with the default Traditional Chinese model.\n * @return A parser with the default Traditional Chinese model.\n */\nexport const loadDefaultTraditionalChineseParser = () => {\n  return new HTMLProcessingParser(zhHantModel);\n};\n\n/**\n * Loads a parser equipped with the default Thai model.\n * @returns A parser with the default Thai model.\n */\nexport const loadDefaultThaiParser = () => {\n  return new HTMLProcessingParser(thModel);\n};\n/**\n * Loads available default parsers.\n * @return A map between available lang codes and their default parsers.\n */\nexport const loadDefaultParsers = () => {\n  return new Map([\n    ['ja', loadDefaultJapaneseParser()],\n    ['zh-hans', loadDefaultSimplifiedChineseParser()],\n    ['zh-hant', loadDefaultTraditionalChineseParser()],\n    ['th', loadDefaultThaiParser()],\n  ]);\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {applyWrapStyle, type HTMLProcessingParser} from '../html_processor.js';\n\nconst MUTATION_OBSERVER_OPTIONS = {\n  attributes: false,\n  characterData: true,\n  childList: true,\n  subtree: true,\n};\n\n/**\n * Base BudouX Web component.\n */\nexport abstract class BudouXBaseElement extends HTMLElement {\n  abstract parser: HTMLProcessingParser;\n  observer: MutationObserver;\n\n  /**\n   * Base BudouX Web component constructor.\n   */\n  constructor() {\n    super();\n\n    this.observer = new MutationObserver(this.sync.bind(this));\n    this.observer.observe(this, MUTATION_OBSERVER_OPTIONS);\n  }\n\n  connectedCallback() {\n    applyWrapStyle(this);\n    this.sync();\n  }\n\n  attributeChangedCallback() {\n    this.sync();\n  }\n\n  sync() {\n    this.observer.disconnect();\n    this.parser.applyToElement(this);\n    this.observer.observe(this, MUTATION_OBSERVER_OPTIONS);\n  }\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {type HTMLProcessingParser, loadDefaultThaiParser} from '../index.js';\nimport {BudouXBaseElement} from './budoux-base.js';\n\n/**\n * BudouX Thai Web component.\n */\nexport class BudouXThaiElement extends BudouXBaseElement {\n  parser: HTMLProcessingParser;\n\n  /**\n   * BudouX Thai Web component constructor.\n   */\n  constructor() {\n    super();\n    this.parser = loadDefaultThaiParser();\n  }\n}\n\ncustomElements.define('budoux-th', BudouXThaiElement);\n"],
  "mappings": "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AI,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,MAAM,aAAK,MAAM,aAAK,IAAI,UAAK,MAAM,eAAK,KAAK,KAAK,KAAK,eAAK,IAAI,KAAK,KAAK,eAAK,IAAI,KAAK,KAAK,eAAK,IAAI,UAAK,KAAK,aAAK,MAAM,eAAK,KAAK,aAAK,IAAI,eAAK,KAAK,eAAK,KAAK,aAAK,IAAI,aAAK,IAAI,KAAK,KAAK,aAAK,MAAM,aAAK,IAAI,aAAK,IAAI,eAAK,IAAI,KAAK,MAAM,aAAK,IAAI,aAAK,IAAI,eAAK,KAAK,aAAK,KAAK,aAAK,KAAK,eAAK,IAAI,aAAK,KAAK,aAAK,KAAK,eAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,UAAK,IAAI,aAAK,KAAK,aAAK,KAAK,KAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,UAAK,IAAI,aAAK,KAAK,aAAK,IAAI,eAAK,IAAI,eAAK,IAAI,aAAK,MAAM,KAAK,MAAM,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,MAAM,eAAK,IAAI,eAAK,IAAI,aAAK,IAAI,KAAK,IAAI,GAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,KAAK,KAAK,GAAK,MAAM,KAAK,KAAK,eAAK,KAAK,KAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,MAAM,eAAK,KAAK,aAAK,IAAI,eAAK,IAAI,UAAK,KAAK,eAAK,IAAI,aAAK,IAAI,eAAK,IAAI,aAAK,KAAK,aAAK,IAAI,UAAK,KAAK,aAAK,KAAK,aAAK,KAAK,KAAK,KAAK,aAAK,IAAI,eAAK,IAAI,aAAK,IAAI,eAAK,KAAK,aAAK,IAAI,eAAK,KAAK,KAAK,IAAI,aAAK,IAAI,aAAK,MAAM,aAAK,KAAK,eAAK,GAAG,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,KAAK,KAAK,eAAK,IAAI,eAAK,IAAI,eAAK,KAAK,eAAK,KAAK,eAAK,KAAK,KAAK,KAAK,aAAK,KAAK,eAAK,IAAI,aAAK,IAAI,aAAK,IAAI,GAAK,IAAI,GAAK,IAAI,KAAK,KAAK,GAAK,IAAI,GAAK,IAAI,eAAK,GAAG,eAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,KAAK,KAAK,aAAK,IAAI,aAAK,KAAK,KAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,KAAK,IAAI,KAAK,IAAI,aAAK,GAAG,aAAK,IAAI,GAAK,IAAI,aAAK,KAAK,KAAK,IAAI,aAAK,KAAK,eAAK,KAAK,eAAK,IAAI,aAAK,KAAK,eAAK,GAAG,KAAK,KAAK,aAAK,IAAI,aAAK,KAAK,GAAK,IAAI,GAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,KAAK,KAAK,aAAK,KAAK,aAAK,GAAG,UAAK,GAAG,GAAK,IAAI,aAAK,IAAI,aAAK,GAAG,aAAK,KAAK,aAAK,GAAG,aAAK,IAAI,aAAK,IAAI,eAAK,IAAI,KAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,GAAG,aAAK,IAAI,eAAK,IAAI,aAAK,GAAG,aAAK,IAAI,aAAK,GAAG,aAAK,KAAK,GAAK,IAAI,aAAK,GAAG,eAAK,GAAG,KAAK,GAAG,eAAK,CAAC,EAAE,IAAM,CAAC,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,MAAM,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,MAAM,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,MAAM,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,UAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,MAAM,aAAK,IAAI,UAAK,MAAM,KAAK,KAAK,aAAK,MAAM,aAAK,KAAK,UAAK,MAAM,UAAK,KAAK,aAAK,IAAI,aAAK,KAAK,UAAK,KAAK,aAAK,MAAM,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,UAAK,KAAK,aAAK,KAAK,aAAK,GAAG,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,UAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,KAAK,KAAK,aAAK,MAAM,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,KAAK,KAAK,aAAK,GAAG,aAAK,KAAK,UAAK,KAAK,aAAK,KAAK,KAAK,KAAK,aAAK,MAAM,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,KAAK,IAAI,aAAK,MAAM,aAAK,KAAK,aAAK,IAAI,aAAK,MAAM,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,MAAM,aAAK,GAAG,KAAK,KAAK,aAAK,KAAK,UAAK,KAAK,aAAK,KAAK,UAAK,IAAI,aAAK,KAAK,UAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,KAAK,KAAK,aAAK,KAAK,aAAK,KAAK,KAAK,MAAM,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,KAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,MAAM,KAAK,KAAK,aAAK,IAAI,aAAK,MAAM,aAAK,KAAK,aAAK,KAAK,GAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,KAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,KAAK,MAAM,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,KAAK,KAAK,aAAK,IAAI,aAAK,GAAG,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,GAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,UAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,KAAK,KAAK,aAAK,KAAK,UAAK,KAAK,UAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,KAAK,IAAI,KAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,KAAK,MAAM,aAAK,KAAK,aAAK,IAAI,aAAK,MAAM,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,UAAK,MAAM,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,KAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,UAAK,IAAI,aAAK,KAAK,aAAK,IAAI,UAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,UAAK,IAAI,KAAK,KAAK,aAAK,KAAK,GAAK,KAAK,KAAK,KAAK,GAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,UAAK,IAAI,aAAK,IAAI,GAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,UAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,GAAG,KAAK,KAAK,aAAK,IAAI,KAAK,IAAI,KAAK,KAAK,aAAK,GAAG,GAAK,KAAK,aAAK,GAAG,UAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,GAAK,IAAI,QAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,GAAG,aAAK,KAAK,aAAK,GAAG,KAAK,IAAI,UAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,KAAK,IAAI,aAAK,KAAK,KAAK,IAAI,UAAK,GAAG,aAAK,GAAG,aAAK,IAAI,KAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,GAAG,KAAK,IAAI,aAAK,EAAE,aAAK,EAAE,aAAK,GAAG,KAAK,IAAI,aAAK,GAAG,KAAK,IAAI,KAAK,GAAG,aAAK,IAAI,aAAK,IAAI,aAAK,GAAG,aAAK,EAAE,aAAK,IAAI,aAAK,GAAG,KAAK,GAAG,KAAK,GAAG,aAAK,EAAE,aAAK,EAAE,EAAE,IAAM,CAAC,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,MAAM,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,gBAAM,MAAM,mBAAM,IAAI,qBAAM,KAAK,mBAAM,IAAI,qBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,qBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,qBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,MAAM,mBAAM,KAAK,mBAAM,KAAK,mBAAM,MAAM,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,IAAM,KAAK,MAAM,KAAK,gBAAM,MAAM,mBAAM,MAAM,mBAAM,KAAK,mBAAM,IAAI,qBAAM,KAAK,mBAAM,MAAM,qBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,mBAAM,MAAM,mBAAM,IAAI,mBAAM,KAAK,mBAAM,MAAM,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,WAAM,MAAM,mBAAM,KAAK,mBAAM,MAAM,qBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,qBAAM,KAAK,qBAAM,IAAI,gBAAM,KAAK,mBAAM,GAAG,qBAAM,KAAK,mBAAM,KAAK,qBAAM,KAAK,mBAAM,MAAM,qBAAM,KAAK,gBAAM,KAAK,mBAAM,IAAI,qBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAM,mBAAM,MAAM,mBAAM,KAAK,mBAAM,KAAK,mBAAM,MAAM,mBAAM,MAAM,mBAAM,KAAK,qBAAM,IAAI,mBAAM,IAAI,mBAAM,MAAM,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,qBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,qBAAM,KAAK,gBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,mBAAM,MAAM,qBAAM,IAAI,mBAAM,IAAI,qBAAM,IAAI,mBAAM,KAAK,qBAAM,MAAM,mBAAM,KAAK,gBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,MAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,qBAAM,IAAI,gBAAM,MAAM,qBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,qBAAM,IAAI,qBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,gBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,qBAAM,IAAI,gBAAM,MAAM,mBAAM,MAAM,mBAAM,GAAG,MAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,qBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,MAAM,mBAAM,KAAK,qBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,MAAM,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,gBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,qBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,gBAAM,MAAM,mBAAM,IAAI,mBAAM,IAAI,qBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,qBAAM,GAAG,mBAAM,IAAI,mBAAM,IAAI,MAAM,KAAK,mBAAM,KAAK,qBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,gBAAM,IAAI,qBAAM,IAAI,mBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,IAAI,qBAAM,IAAI,MAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,qBAAM,IAAI,mBAAM,IAAI,MAAM,IAAI,gBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,IAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,qBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,qBAAM,IAAI,mBAAM,IAAI,gBAAM,GAAG,qBAAM,IAAI,WAAM,KAAK,gBAAM,KAAK,mBAAM,IAAI,gBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,IAAM,GAAG,mBAAM,KAAK,gBAAM,KAAK,mBAAM,IAAI,gBAAM,IAAI,MAAM,KAAK,mBAAM,IAAI,qBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,gBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,mBAAM,IAAI,gBAAM,KAAK,gBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,GAAG,mBAAM,IAAI,mBAAM,IAAI,gBAAM,KAAK,mBAAM,KAAK,mBAAM,GAAG,mBAAM,KAAK,mBAAM,IAAI,gBAAM,IAAI,qBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,qBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,qBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,GAAG,mBAAM,KAAK,mBAAM,IAAI,qBAAM,IAAI,mBAAM,IAAI,WAAM,IAAI,mBAAM,IAAI,IAAM,IAAI,mBAAM,KAAK,qBAAM,GAAG,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,GAAG,mBAAM,GAAG,gBAAM,KAAK,qBAAM,GAAG,mBAAM,IAAI,mBAAM,GAAG,mBAAM,IAAI,mBAAM,GAAG,mBAAM,IAAI,mBAAM,IAAI,qBAAM,GAAG,mBAAM,GAAG,mBAAM,GAAG,mBAAM,GAAG,mBAAM,GAAG,mBAAM,IAAI,mBAAM,IAAI,MAAM,IAAI,mBAAM,GAAG,mBAAM,GAAG,mBAAM,GAAG,mBAAM,GAAG,IAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,EAAE,IAAM,CAAC,EAAE,IAAM,CAAC,eAAK,MAAM,aAAK,MAAM,aAAK,MAAM,aAAK,MAAM,GAAK,MAAM,aAAK,KAAK,aAAK,MAAM,eAAK,MAAM,aAAK,MAAM,aAAK,IAAI,aAAK,KAAK,KAAK,MAAM,aAAK,KAAK,aAAK,KAAK,UAAK,MAAM,aAAK,MAAM,UAAK,MAAM,aAAK,KAAK,aAAK,MAAM,KAAK,MAAM,aAAK,KAAK,eAAK,KAAK,aAAK,KAAK,eAAK,MAAM,eAAK,MAAM,aAAK,MAAM,aAAK,KAAK,aAAK,KAAK,aAAK,MAAM,aAAK,KAAK,aAAK,MAAM,eAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,MAAM,UAAK,MAAM,aAAK,KAAK,UAAK,MAAM,aAAK,MAAM,aAAK,MAAM,aAAK,IAAI,aAAK,KAAK,eAAK,KAAK,eAAK,IAAI,UAAK,MAAM,eAAK,KAAK,aAAK,KAAK,eAAK,MAAM,aAAK,MAAM,eAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,MAAM,UAAK,KAAK,aAAK,MAAM,aAAK,IAAI,aAAK,MAAM,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,UAAK,KAAK,aAAK,KAAK,aAAK,IAAI,eAAK,KAAK,UAAK,MAAM,aAAK,MAAM,eAAK,KAAK,UAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,UAAK,KAAK,aAAK,KAAK,eAAK,GAAG,aAAK,KAAK,aAAK,IAAI,aAAK,MAAM,aAAK,KAAK,KAAK,KAAK,aAAK,MAAM,aAAK,IAAI,eAAK,KAAK,KAAK,KAAK,aAAK,KAAK,eAAK,KAAK,eAAK,KAAK,aAAK,IAAI,aAAK,MAAM,eAAK,KAAK,UAAK,MAAM,aAAK,IAAI,UAAK,IAAI,KAAK,MAAM,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,KAAK,IAAI,aAAK,MAAM,UAAK,MAAM,KAAK,MAAM,aAAK,KAAK,aAAK,KAAK,eAAK,KAAK,aAAK,KAAK,aAAK,KAAK,eAAK,MAAM,aAAK,IAAI,aAAK,KAAK,UAAK,KAAK,KAAK,MAAM,aAAK,IAAI,aAAK,IAAI,eAAK,KAAK,KAAK,KAAK,aAAK,MAAM,KAAK,KAAK,aAAK,KAAK,eAAK,KAAK,aAAK,IAAI,eAAK,KAAK,UAAK,KAAK,eAAK,KAAK,eAAK,MAAM,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,KAAK,IAAI,KAAK,IAAI,aAAK,IAAI,KAAK,MAAM,aAAK,KAAK,KAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,KAAK,KAAK,aAAK,KAAK,aAAK,KAAK,eAAK,KAAK,KAAK,MAAM,aAAK,KAAK,UAAK,KAAK,KAAK,IAAI,aAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,eAAK,KAAK,aAAK,IAAI,UAAK,IAAI,aAAK,KAAK,eAAK,IAAI,aAAK,IAAI,KAAK,IAAI,eAAK,IAAI,KAAK,IAAI,eAAK,KAAK,KAAK,IAAI,aAAK,IAAI,GAAK,MAAM,eAAK,IAAI,aAAK,IAAI,KAAK,KAAK,UAAK,IAAI,aAAK,KAAK,KAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,eAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,eAAK,IAAI,aAAK,IAAI,aAAK,KAAK,eAAK,IAAI,aAAK,IAAI,KAAK,IAAI,KAAK,KAAK,eAAK,IAAI,aAAK,KAAK,UAAK,IAAI,KAAK,KAAK,aAAK,IAAI,aAAK,KAAK,UAAK,IAAI,KAAK,IAAI,aAAK,KAAK,aAAK,IAAI,QAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,GAAG,aAAK,IAAI,eAAK,IAAI,eAAK,IAAI,aAAK,IAAI,aAAK,IAAI,QAAK,IAAI,aAAK,KAAK,KAAK,MAAM,aAAK,KAAK,UAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,UAAK,IAAI,aAAK,IAAI,eAAK,KAAK,KAAK,KAAK,eAAK,KAAK,QAAK,IAAI,aAAK,KAAK,aAAK,KAAK,KAAK,IAAI,aAAK,IAAI,eAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,QAAK,IAAI,KAAK,IAAI,UAAK,KAAK,aAAK,IAAI,QAAK,IAAI,KAAK,KAAK,eAAK,KAAK,UAAK,IAAI,aAAK,IAAI,KAAK,IAAI,aAAK,GAAG,eAAK,GAAG,KAAK,KAAK,aAAK,IAAI,aAAK,KAAK,GAAK,KAAK,aAAK,IAAI,QAAK,IAAI,KAAK,GAAG,UAAK,IAAI,aAAK,IAAI,KAAK,GAAG,QAAK,IAAI,KAAK,IAAI,eAAK,GAAG,aAAK,GAAG,aAAK,GAAG,eAAK,GAAG,KAAK,IAAI,aAAK,GAAG,aAAK,IAAI,eAAK,GAAG,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,eAAK,GAAG,UAAK,IAAI,eAAK,GAAG,aAAK,GAAG,aAAK,IAAI,aAAK,GAAG,eAAK,GAAG,aAAK,EAAE,EAAE,IAAM,CAAC,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,MAAM,mBAAM,KAAK,mBAAM,MAAM,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,MAAM,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,MAAM,mBAAM,KAAK,mBAAM,MAAM,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,MAAM,mBAAM,MAAM,mBAAM,IAAI,mBAAM,MAAM,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,MAAM,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,gBAAM,KAAK,mBAAM,MAAM,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,KAAK,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,UAAK,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,IAAM,IAAI,gBAAM,MAAM,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,MAAM,mBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,MAAM,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,MAAM,MAAM,MAAM,mBAAM,IAAI,mBAAM,MAAM,mBAAM,KAAK,mBAAM,KAAK,mBAAM,MAAM,mBAAM,KAAK,gBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,MAAM,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,IAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,gBAAM,MAAM,mBAAM,IAAI,mBAAM,MAAM,mBAAM,MAAM,mBAAM,IAAI,mBAAM,KAAK,mBAAM,MAAM,mBAAM,MAAM,mBAAM,MAAM,mBAAM,MAAM,mBAAM,KAAK,mBAAM,IAAI,gBAAM,MAAM,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,gBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,mBAAM,IAAI,MAAM,MAAM,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,gBAAM,MAAM,mBAAM,MAAM,mBAAM,MAAM,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,MAAM,MAAM,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,aAAK,IAAI,mBAAM,IAAI,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,KAAK,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,MAAM,mBAAM,KAAK,gBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,MAAM,IAAI,IAAM,KAAK,mBAAM,GAAG,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,gBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,KAAK,KAAK,aAAK,IAAI,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,gBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,aAAK,IAAI,mBAAM,GAAG,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,gBAAM,IAAI,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,mBAAM,IAAI,WAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,IAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,MAAM,IAAI,mBAAM,KAAK,mBAAM,IAAI,gBAAM,IAAI,mBAAM,IAAI,gBAAM,KAAK,mBAAM,IAAI,WAAM,KAAK,gBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,aAAK,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,mBAAM,GAAG,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,gBAAM,IAAI,mBAAM,IAAI,mBAAM,GAAG,WAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,GAAK,IAAI,mBAAM,KAAK,mBAAM,IAAI,IAAM,IAAI,mBAAM,IAAI,mBAAM,GAAG,mBAAM,GAAG,mBAAM,GAAG,mBAAM,GAAG,mBAAM,IAAI,gBAAM,IAAI,gBAAM,KAAK,mBAAM,IAAI,mBAAM,GAAG,gBAAM,IAAI,mBAAM,IAAI,mBAAM,GAAG,mBAAM,IAAI,gBAAM,IAAI,mBAAM,GAAG,IAAM,GAAG,mBAAM,IAAI,mBAAM,GAAG,IAAM,GAAG,mBAAM,GAAG,mBAAM,GAAG,mBAAM,GAAG,mBAAM,GAAG,mBAAM,IAAI,MAAM,IAAI,mBAAM,GAAG,aAAK,GAAG,mBAAM,IAAI,mBAAM,GAAG,mBAAM,GAAG,mBAAM,GAAG,mBAAM,GAAG,mBAAM,GAAG,aAAK,IAAI,aAAK,EAAE,mBAAM,CAAC,EAAE,IAAM,CAAC,mBAAM,MAAM,mBAAM,MAAM,qBAAM,MAAM,qBAAM,MAAM,qBAAM,MAAM,gBAAM,MAAM,gBAAM,KAAK,mBAAM,KAAK,gBAAM,KAAK,mBAAM,KAAK,gBAAM,MAAM,mBAAM,MAAM,mBAAM,KAAK,mBAAM,MAAM,qBAAM,MAAM,mBAAM,KAAK,mBAAM,KAAK,gBAAM,MAAM,qBAAM,KAAK,mBAAM,MAAM,mBAAM,MAAM,gBAAM,MAAM,MAAM,KAAK,gBAAM,MAAM,mBAAM,MAAM,qBAAM,MAAM,qBAAM,MAAM,qBAAM,MAAM,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,qBAAM,KAAK,MAAM,KAAK,mBAAM,MAAM,mBAAM,MAAM,gBAAM,MAAM,mBAAM,KAAK,qBAAM,KAAK,gBAAM,MAAM,qBAAM,MAAM,qBAAM,KAAK,qBAAM,MAAM,qBAAM,MAAM,gBAAM,MAAM,mBAAM,MAAM,mBAAM,MAAM,qBAAM,IAAI,mBAAM,KAAK,gBAAM,MAAM,qBAAM,MAAM,mBAAM,MAAM,mBAAM,MAAM,qBAAM,KAAK,qBAAM,MAAM,gBAAM,MAAM,gBAAM,MAAM,qBAAM,MAAM,mBAAM,MAAM,mBAAM,KAAK,MAAM,KAAK,mBAAM,MAAM,mBAAM,KAAK,qBAAM,KAAK,gBAAM,IAAI,qBAAM,MAAM,mBAAM,KAAK,qBAAM,MAAM,MAAM,MAAM,gBAAM,MAAM,gBAAM,MAAM,qBAAM,KAAK,mBAAM,IAAI,gBAAM,MAAM,qBAAM,MAAM,mBAAM,KAAK,qBAAM,KAAK,MAAM,MAAM,mBAAM,MAAM,gBAAM,KAAK,mBAAM,KAAK,qBAAM,IAAI,mBAAM,KAAK,qBAAM,KAAK,mBAAM,MAAM,qBAAM,KAAK,mBAAM,KAAK,mBAAM,MAAM,mBAAM,KAAK,mBAAM,KAAK,mBAAM,MAAM,mBAAM,KAAK,qBAAM,KAAK,qBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,gBAAM,MAAM,qBAAM,MAAM,qBAAM,KAAK,gBAAM,MAAM,qBAAM,KAAK,mBAAM,KAAK,qBAAM,IAAI,qBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,qBAAM,KAAK,mBAAM,IAAI,qBAAM,KAAK,qBAAM,KAAK,mBAAM,KAAK,gBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,MAAM,qBAAM,KAAK,mBAAM,IAAI,qBAAM,IAAI,mBAAM,IAAI,qBAAM,KAAK,mBAAM,MAAM,qBAAM,KAAK,mBAAM,KAAK,qBAAM,KAAK,gBAAM,KAAK,qBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,qBAAM,IAAI,qBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,qBAAM,IAAI,mBAAM,IAAI,qBAAM,IAAI,mBAAM,KAAK,qBAAM,KAAK,qBAAM,IAAI,qBAAM,IAAI,mBAAM,IAAI,qBAAM,IAAI,qBAAM,IAAI,MAAM,KAAK,qBAAM,KAAK,qBAAM,KAAK,qBAAM,KAAK,mBAAM,KAAK,qBAAM,IAAI,qBAAM,KAAK,mBAAM,KAAK,qBAAM,KAAK,qBAAM,KAAK,qBAAM,IAAI,qBAAM,KAAK,qBAAM,KAAK,gBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,qBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,qBAAM,KAAK,qBAAM,KAAK,qBAAM,KAAK,qBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,qBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,WAAM,KAAK,mBAAM,KAAK,qBAAM,KAAK,qBAAM,KAAK,mBAAM,KAAK,qBAAM,KAAK,qBAAM,IAAI,gBAAM,IAAI,gBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,IAAI,qBAAM,KAAK,mBAAM,IAAI,qBAAM,KAAK,mBAAM,GAAG,mBAAM,KAAK,mBAAM,IAAI,mBAAM,GAAG,gBAAM,IAAI,mBAAM,IAAI,MAAM,GAAG,qBAAM,GAAG,mBAAM,GAAG,qBAAM,IAAI,qBAAM,IAAI,MAAM,IAAI,mBAAM,IAAI,WAAM,IAAI,qBAAM,EAAE,EAAE,IAAM,CAAC,mBAAM,MAAM,mBAAM,MAAM,mBAAM,KAAK,mBAAM,MAAM,mBAAM,MAAM,mBAAM,MAAM,qBAAM,MAAM,mBAAM,KAAK,mBAAM,MAAM,mBAAM,MAAM,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,MAAM,mBAAM,MAAM,MAAM,MAAM,gBAAM,MAAM,mBAAM,MAAM,mBAAM,KAAK,mBAAM,MAAM,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,qBAAM,MAAM,gBAAM,MAAM,mBAAM,KAAK,mBAAM,KAAK,mBAAM,MAAM,mBAAM,MAAM,gBAAM,MAAM,gBAAM,MAAM,mBAAM,MAAM,mBAAM,KAAK,mBAAM,MAAM,mBAAM,MAAM,mBAAM,MAAM,qBAAM,MAAM,WAAM,MAAM,mBAAM,KAAK,qBAAM,MAAM,gBAAM,MAAM,qBAAM,MAAM,gBAAM,MAAM,gBAAM,KAAK,mBAAM,KAAK,mBAAM,MAAM,WAAM,MAAM,qBAAM,MAAM,mBAAM,MAAM,mBAAM,KAAK,mBAAM,KAAK,gBAAM,MAAM,qBAAM,MAAM,mBAAM,KAAK,mBAAM,MAAM,mBAAM,MAAM,mBAAM,MAAM,mBAAM,KAAK,gBAAM,MAAM,qBAAM,MAAM,mBAAM,KAAK,mBAAM,MAAM,qBAAM,IAAI,mBAAM,KAAK,mBAAM,IAAI,mBAAM,MAAM,mBAAM,MAAM,gBAAM,KAAK,mBAAM,KAAK,gBAAM,KAAK,mBAAM,MAAM,mBAAM,MAAM,mBAAM,KAAK,qBAAM,MAAM,gBAAM,MAAM,mBAAM,MAAM,qBAAM,MAAM,mBAAM,IAAI,mBAAM,KAAK,mBAAM,MAAM,mBAAM,KAAK,gBAAM,MAAM,mBAAM,MAAM,MAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,qBAAM,KAAK,mBAAM,KAAK,gBAAM,MAAM,gBAAM,KAAK,mBAAM,KAAK,qBAAM,KAAK,mBAAM,KAAK,mBAAM,MAAM,mBAAM,KAAK,qBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,gBAAM,KAAK,mBAAM,KAAK,gBAAM,KAAK,gBAAM,KAAK,gBAAM,KAAK,gBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,MAAM,mBAAM,KAAK,gBAAM,KAAK,mBAAM,MAAM,mBAAM,KAAK,gBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,qBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,MAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,gBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,qBAAM,KAAK,mBAAM,IAAI,gBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,IAAI,gBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,EAAE,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,gBAAM,KAAK,MAAM,KAAK,mBAAM,KAAK,gBAAM,IAAI,MAAM,KAAK,mBAAM,KAAK,mBAAM,GAAG,mBAAM,KAAK,mBAAM,KAAK,mBAAM,GAAG,SAAM,IAAI,mBAAM,GAAG,mBAAM,GAAG,mBAAM,KAAK,qBAAM,KAAK,gBAAM,GAAG,mBAAM,GAAG,mBAAM,IAAI,mBAAM,IAAI,gBAAM,IAAI,mBAAM,GAAG,mBAAM,IAAI,mBAAM,GAAG,mBAAM,GAAG,qBAAM,IAAI,mBAAM,GAAG,mBAAM,IAAI,mBAAM,EAAE,MAAM,EAAE,CAAC,ECqB1gvB,IAAMC,EAAmBC,GACvB,IAAI,OAAO,UAAS,EAAG,gBAAgBA,EAAM,WAAW,ECH3D,IAAOC,EAAP,KAAa,CASjB,YAAYC,EAA+C,CACzD,KAAK,MAAQ,IAAI,IACf,OAAO,QAAQA,CAAK,EAAE,IAAI,CAAC,CAACC,EAAGC,CAAC,IAAM,CAACD,EAAG,IAAI,IAAI,OAAO,QAAQC,CAAC,CAAC,CAAC,CAAC,CAAC,EAExE,KAAK,UACH,IACA,CAAC,GAAG,KAAK,MAAM,OAAM,CAAE,EACpB,IAAIC,GAAS,CAAC,GAAGA,EAAM,OAAM,CAAE,CAAC,EAChC,KAAI,EACJ,OAAO,CAACC,EAAMC,IAASD,EAAOC,EAAM,CAAC,CAC5C,CAQA,MAAMC,EAAgB,CACpB,GAAIA,IAAa,GAAI,MAAO,CAAA,EAC5B,IAAMC,EAAa,KAAK,gBAAgBD,CAAQ,EAC1CE,EAAS,CAAA,EACXC,EAAQ,EACZ,QAAWC,KAAYH,EACrBC,EAAO,KAAKF,EAAS,MAAMG,EAAOC,CAAQ,CAAC,EAC3CD,EAAQC,EAEV,OAAAF,EAAO,KAAKF,EAAS,MAAMG,CAAK,CAAC,EAC1BD,CACT,CAQA,gBAAgBF,EAAgB,+BAC9B,IAAME,EAAS,CAAA,EAEf,QAAS,EAAI,EAAG,EAAIF,EAAS,OAAQ,IAAK,CACxC,IAAIK,EAAQ,KAAK,UAGjBA,KAASC,EAAA,KAAK,MAAM,IAAI,KAAK,KAAC,MAAAA,IAAA,OAAA,OAAAA,EAAE,IAAIN,EAAS,UAAU,EAAI,EAAG,EAAI,CAAC,CAAC,IAAK,EACzEK,KAASE,EAAA,KAAK,MAAM,IAAI,KAAK,KAAC,MAAAA,IAAA,OAAA,OAAAA,EAAE,IAAIP,EAAS,UAAU,EAAI,EAAG,EAAI,CAAC,CAAC,IAAK,EACzEK,KAASG,EAAA,KAAK,MAAM,IAAI,KAAK,KAAC,MAAAA,IAAA,OAAA,OAAAA,EAAE,IAAIR,EAAS,UAAU,EAAI,EAAG,CAAC,CAAC,IAAK,EACrEK,KAASI,EAAA,KAAK,MAAM,IAAI,KAAK,KAAC,MAAAA,IAAA,OAAA,OAAAA,EAAE,IAAIT,EAAS,UAAU,EAAG,EAAI,CAAC,CAAC,IAAK,EACrEK,KAASK,EAAA,KAAK,MAAM,IAAI,KAAK,KAAC,MAAAA,IAAA,OAAA,OAAAA,EAAE,IAAIV,EAAS,UAAU,EAAI,EAAG,EAAI,CAAC,CAAC,IAAK,EACzEK,KAASM,EAAA,KAAK,MAAM,IAAI,KAAK,KAAC,MAAAA,IAAA,OAAA,OAAAA,EAAE,IAAIX,EAAS,UAAU,EAAI,EAAG,EAAI,CAAC,CAAC,IAAK,EACzEK,KAASO,EAAA,KAAK,MAAM,IAAI,KAAK,KAAC,MAAAA,IAAA,OAAA,OAAAA,EAAE,IAAIZ,EAAS,UAAU,EAAI,EAAG,CAAC,CAAC,IAAK,EACrEK,KAASQ,EAAA,KAAK,MAAM,IAAI,KAAK,KAAC,MAAAA,IAAA,OAAA,OAAAA,EAAE,IAAIb,EAAS,UAAU,EAAI,EAAG,EAAI,CAAC,CAAC,IAAK,EACzEK,KAASS,EAAA,KAAK,MAAM,IAAI,KAAK,KAAC,MAAAA,IAAA,OAAA,OAAAA,EAAE,IAAId,EAAS,UAAU,EAAG,EAAI,CAAC,CAAC,IAAK,EACrEK,KAASU,EAAA,KAAK,MAAM,IAAI,KAAK,KAAC,MAAAA,IAAA,OAAA,OAAAA,EAAE,IAAIf,EAAS,UAAU,EAAI,EAAG,CAAC,CAAC,IAAK,EACrEK,KAASW,EAAA,KAAK,MAAM,IAAI,KAAK,KAAC,MAAAA,IAAA,OAAA,OAAAA,EAAE,IAAIhB,EAAS,UAAU,EAAI,EAAG,EAAI,CAAC,CAAC,IAAK,EACzEK,KAASY,EAAA,KAAK,MAAM,IAAI,KAAK,KAAC,MAAAA,IAAA,OAAA,OAAAA,EAAE,IAAIjB,EAAS,UAAU,EAAI,EAAG,EAAI,CAAC,CAAC,IAAK,EACzEK,KAASa,EAAA,KAAK,MAAM,IAAI,KAAK,KAAC,MAAAA,IAAA,OAAA,OAAAA,EAAE,IAAIlB,EAAS,UAAU,EAAG,EAAI,CAAC,CAAC,IAAK,EAEjEK,EAAQ,GAAGH,EAAO,KAAK,CAAC,CAC9B,CACA,OAAOA,CACT,GCtEF,IAAMiB,EAAS,QAAQ,OAEjBC,EAAiB,KACjBC,EAAO,OAAO,aAAaD,CAAc,EAIzCE,EAAW,CACf,aAAc,EACd,UAAW,GAGPC,EAAY,CAChB,OAAQ,EACR,MAAO,EACP,KAAM,EACN,MAAO,EACP,QAAS,EACT,iBAAkB,GASdC,EAA0C,CAG9C,KAAMD,EAAU,KAChB,KAAMA,EAAU,KAChB,SAAUA,EAAU,KACpB,SAAUA,EAAU,KACpB,KAAMA,EAAU,KAChB,KAAMA,EAAU,KAChB,KAAMA,EAAU,KAChB,QAASA,EAAU,KACnB,SAAUA,EAAU,KACpB,MAAOA,EAAU,KACjB,GAAIA,EAAU,KACd,OAAQA,EAAU,KAClB,MAAOA,EAAU,KACjB,SAAUA,EAAU,KACpB,MAAOA,EAAU,KACjB,SAAUA,EAAU,KAIpB,GAAIA,EAAU,MAEd,QAASA,EAAU,KACnB,UAAWA,EAAU,KACrB,IAAKA,EAAU,KACf,IAAKA,EAAU,KAIf,GAAIA,EAAU,MACd,GAAIA,EAAU,KACd,IAAKA,EAAU,iBAIf,MAAOA,EAAU,KACjB,OAAQA,EAAU,KAClB,OAAQA,EAAU,KAClB,SAAUA,EAAU,KAIpB,KAAMA,EAAU,KAChB,KAAMA,EAAU,KAChB,OAAQA,EAAU,KAClB,KAAMA,EAAU,KAChB,IAAKA,EAAU,KAIf,KAAMA,EAAU,SAGZE,EAAuB,IAAI,IAAI,CAEnC,OACA,OAEA,UACA,aACA,SACA,SACA,MACA,SACA,aACA,SACA,OACA,SACA,SACA,UACA,OACA,IAEA,UACA,QACA,KACA,KACA,KACA,KACA,KACA,KACA,SACA,MACA,UAEA,MACA,KACA,KACA,KACA,OACA,KACA,KACA,KAEA,QACA,UACA,MACA,KACA,KACA,KAEA,WAEA,UACA,UAEA,UACD,EAOD,SAASC,EAAiBC,EAAe,CAEvC,OAAIA,IAAY,SAAiBJ,EAAU,OACvCI,IAAY,QAAgBJ,EAAU,MAGtCI,EAAQ,WAAW,MAAM,EACvBA,IAAY,YAAoBJ,EAAU,KACvCA,EAAU,OAKZA,EAAU,KACnB,CAOA,SAASK,EAAiBC,EAAgB,CACxC,IAAMC,EAAWD,EAAQ,SACnBE,EAASP,EAAWM,CAAQ,EAClC,GAAIC,IAAW,OAAW,OAAOA,EAEjC,GAAI,OAAO,WAAW,kBAAqB,WAAY,CACrD,IAAMC,EAAQ,WAAW,iBAAiBH,CAAO,EACjD,OAAQG,EAAM,WAAY,CACxB,IAAK,SACL,IAAK,MACH,OAAOT,EAAU,OACrB,CAEA,IAAMI,EAAUK,EAAM,QACtB,GAAIL,EAAS,OAAOD,EAAiBC,CAAO,CAE9C,CAIA,OAAOF,EAAqB,IAAIK,CAAQ,EACpCP,EAAU,MACVA,EAAU,MAChB,CAMO,IAAMU,EAAkBJ,GAAwB,CACrDA,EAAQ,MAAM,UAAY,WAC1BA,EAAQ,MAAM,aAAe,UAC/B,EASMK,EAAN,MAAMC,CAAU,CAKd,YAAYC,EAAyB,CAHrC,KAAA,OAAmB,CAAA,EACnB,KAAA,yBAA2B,GAGzB,KAAK,WAAaA,CACpB,CAEQ,OAAO,SAASC,EAAoB,CAC1C,OAAO,OAAOA,GAAU,QAC1B,CAEA,IAAI,UAAQ,CACV,MAAO,CAACF,EAAW,SAAS,KAAK,UAAU,CAC7C,CAEA,IAAI,MAAI,CACN,OAAOA,EAAW,SAAS,KAAK,UAAU,EACtC,KAAK,WACL,KAAK,WAAW,SACtB,CAEA,IAAI,QAAM,SACR,OAAOG,GAAAC,EAAA,KAAK,QAAI,MAAAA,IAAA,OAAA,OAAAA,EAAE,UAAM,MAAAD,IAAA,OAAAA,EAAI,CAC9B,CAMA,MAAME,EAAwB,CAC5B,IAAMC,EAAS,KAAK,OAGpB,GAFAtB,EAAOsB,EAAO,SAAW,GAAKA,EAAO,KAAK,EAAE,IAAM,KAAK,IAAI,EACvDA,EAAO,QAAU,GACjBN,EAAW,SAAS,KAAK,UAAU,EAAG,OAC1C,IAAMO,EAAO,KAAK,WAClB,GAAI,OAAOF,GAAc,SAAU,CAEjCE,EAAK,UAAYD,EAAO,KAAKD,CAAS,EACtC,MACF,CAIA,IAAMG,EAAWD,EAAK,cAClBE,EAAQ,CAAA,EACZ,QAAWC,KAASJ,EACdI,GAAOD,EAAM,KAAKD,EAAS,eAAeE,CAAK,CAAC,EAKpDD,EAAM,KAAK,IAAI,EAEjBA,EAAM,IAAG,EACTA,EAAQA,EAAM,IAAIE,GAAMA,GAAQN,EAAU,UAAU,EAAI,CAAE,EAC1DE,EAAK,YAAY,GAAGE,CAAK,CAC3B,GAYF,IAAMG,EAAN,KAAe,CAIb,YAAYC,EAAoB,CAFhC,KAAA,MAAsB,CAAA,EAGpB,KAAK,QAAUA,CACjB,CAEA,SAAO,CACL,OAAO,KAAK,MAAM,SAAW,CAC/B,CACA,IAAI,MAAI,CACN,OAAO,KAAK,MAAM,IAAIC,GAAQA,EAAK,IAAI,EAAE,KAAK,EAAE,CAClD,CAEA,IAAI,UAAQ,CACV,OAAO,KAAK,MAAM,OAAS,KAAK,MAAM,KAAK,MAAM,OAAS,CAAC,EAAI,MACjE,CACA,6BAA2B,CACzB,IAAMC,EAAW,KAAK,SAClBA,IAAUA,EAAS,yBAA2B,GACpD,CAMA,wBAAsB,CACpB,IAAMC,EAA0B,CAAA,EAC5BC,EAAM,EACV,QAAWH,KAAQ,KAAK,MAAO,CAC7B,GAAIA,EAAK,SAAU,CACjB,IAAMI,EAAOJ,EAAK,KAClB,GAAII,EACF,QAASC,EAAI,EAAGA,EAAID,EAAK,OAAQ,EAAEC,EAC7BD,EAAK,WAAWC,CAAC,IAAMC,GACzBJ,EAAc,KAAKC,EAAME,EAAI,CAAC,CAItC,CACAF,GAAOH,EAAK,OACRA,EAAK,0BACPE,EAAc,KAAKC,CAAG,CAE1B,CACA,OAAOD,CACT,CAOA,2BAA2BK,EAAoB,CAC7C,IAAMC,EAAsB,KAAK,uBAAsB,EACvD,GAAI,CAACA,EAAoB,OAAQ,OAAOD,EACxC,IAAME,EAAM,IAAI,IAAYD,CAAmB,EAC/C,OAAOD,EAAW,OAAOF,GAAK,CAACI,EAAI,IAAIJ,CAAC,CAAC,CAC3C,GA6BI,IAAOK,EAAP,KAAoB,CAUxB,YAAYC,EAAgBC,EAA8B,CAL1D,KAAA,UAA2BC,EAMzB,KAAK,QAAUF,EACXC,IAAY,SACVA,EAAQ,YAAc,SAAW,KAAK,UAAYA,EAAQ,WAC1DA,EAAQ,YAAc,SAAW,KAAK,UAAYA,EAAQ,WAElE,CAQA,OAAO,iBAAiBE,EAAgB,CACtC,QAAWC,KAASD,EAAI,WACtB,GAAIC,EAAM,WAAaC,EAAS,UAAW,MAAO,GAEpD,MAAO,EACT,CASA,eAAeC,EAAoB,CACjC,QAAWC,KAAS,KAAK,UAAUD,CAAO,EACxCE,EAAO,CAACD,EAAM,QAAO,CAAE,EACvB,KAAK,iBAAiBA,CAAK,CAE/B,CAQA,CAAC,UACCD,EACAG,EAAkB,CAKlB,GAHAD,EAAOF,EAAQ,WAAaD,EAAS,YAAY,EAG7C,KAAK,WAAaC,EAAQ,UAAU,SAAS,KAAK,SAAS,EAAG,OAElE,IAAMI,EAASC,EAAiBL,CAAO,EACvC,GAAII,IAAWE,EAAU,KAAM,OAC/B,GAAIF,IAAWE,EAAU,MAAO,CAC1BH,GAAU,CAACA,EAAO,QAAO,IAC3BA,EAAO,4BAA2B,EAClC,MAAMA,EACNA,EAAO,MAAQ,CAAA,GAEjBD,EAAO,CAACF,EAAQ,UAAU,EAC1B,MACF,CACA,GAAII,IAAWE,EAAU,iBAAkB,CACrCH,GAAQA,EAAO,4BAA2B,EAC9C,MACF,CAIAD,EACEE,IAAWE,EAAU,OACnBF,IAAWE,EAAU,QACrBF,IAAWE,EAAU,OAAO,EAEhC,IAAMC,EAAa,CAACJ,GAAUC,IAAWE,EAAU,MAC7CL,EAAQM,EAAa,IAAIC,EAAUR,CAAO,EAAIG,EAIpD,QAAWL,KAASE,EAAQ,WAC1B,OAAQF,EAAM,SAAU,CACtB,KAAKC,EAAS,aACZ,QAAWU,KAAc,KAAK,UAAUX,EAAsBG,CAAK,EACjE,MAAMQ,EACR,MACF,KAAKV,EAAS,UACZ,GAAIK,IAAWE,EAAU,QAAS,CAChC,IAAMI,EAAOZ,EAAM,UACfY,GACFT,EAAM,MAAM,KAAK,IAAIU,EAAWD,CAAI,CAAC,EAEvC,KACF,CACAT,EAAM,MAAM,KAAK,IAAIU,EAAWb,CAAa,CAAC,EAC9C,KACJ,CAIES,GAAc,CAACN,EAAM,QAAO,IAAI,MAAMA,EAC5C,CAMA,iBAAiBW,EAAoB,CAEnC,GADAV,EAAOU,EAAU,MAAM,OAAS,CAAC,EAC7B,CAACA,EAAU,MAAM,KAAKC,GAAQA,EAAK,QAAQ,EAAG,OAClD,IAAMH,EAAOE,EAAU,KAEvB,GAAI,QAAQ,KAAKF,CAAI,EAAG,OAGxB,IAAMI,EAAa,KAAK,QAAQ,gBAAgBJ,CAAI,EAEpD,GAAII,EAAW,QAAU,EAAG,OAG5BZ,EAAOY,EAAW,CAAC,EAAI,CAAC,EACxBZ,EAAOY,EAAW,MAAM,CAACC,EAAGC,IAAMA,IAAM,GAAKD,EAAID,EAAWE,EAAI,CAAC,CAAC,CAAC,EACnEd,EAAOY,EAAWA,EAAW,OAAS,CAAC,EAAIJ,EAAK,MAAM,EAEtD,IAAMO,EAAqBL,EAAU,2BAA2BE,CAAU,EAG1EG,EAAmB,KAAKP,EAAK,OAAS,CAAC,EAEvC,KAAK,WAAWE,EAAU,MAAOK,CAAkB,EACnD,KAAK,gBAAgBL,EAAU,OAAO,CACxC,CAOA,WAAWM,EAAqBJ,EAAoB,OAClDZ,EAAOY,EAAW,OAAS,CAAC,EAC5BZ,EAAOY,EAAW,MAAM,CAACC,EAAGC,IAAMA,IAAM,GAAKD,EAAID,EAAWE,EAAI,CAAC,CAAC,CAAC,EACnE,IAAMG,EAAUD,EAAM,OAAO,CAACE,EAAKP,IAASO,EAAMP,EAAK,OAAQ,CAAC,EAEhEX,EAAOY,EAAWA,EAAW,OAAS,CAAC,EAAIK,CAAO,EAGlD,IAAIE,EAAiB,EACjBC,EAAWR,EAAW,CAAC,EAC3BZ,EAAOoB,EAAW,CAAC,EACnB,IAAIC,EAAY,EACZC,EAA8B,KAClC,QAAWX,KAAQK,EAAO,CACxBhB,EAAOoB,GAAYC,CAAS,EAC5BrB,EAAOW,EAAK,OAAO,SAAW,CAAC,EAC/B,IAAMY,EAAWZ,EAAK,KACtB,GAAI,CAACY,EAAU,SACf,IAAMC,EAAaD,EAAS,OACtBE,EAAUJ,EAAYG,EAE5B,GADAxB,EAAO,CAACsB,GAAYA,EAAS,QAAQ,EACjC,CAACX,EAAK,SAAU,CAQlB,IALIW,GAAYF,IAAaC,IACvBC,EAAS,OAAO,SAAW,GAC7BA,EAAS,OAAO,MAAKI,EAAAJ,EAAS,QAAI,MAAAI,IAAA,OAAAA,EAAI,EAAE,EAC1CJ,EAAS,OAAO,KAAK,EAAE,GAElBF,EAAWK,GAChBL,EAAWR,EAAW,EAAEO,CAAc,EAExCG,EAAW,KACXD,EAAYI,EACZ,QACF,CAIA,GADAH,EAAWX,EACPS,GAAYK,EAAS,CACvBJ,EAAYI,EACZ,QACF,CAGA,IAAME,EAAShB,EAAK,OAChBiB,EAAmB,EACvB,KAAOR,EAAWK,GAAS,CACzB,IAAMI,EAAiBT,EAAWC,EAClCrB,EAAO6B,GAAkBD,CAAgB,EACzCD,EAAO,KAAKJ,EAAS,MAAMK,EAAkBC,CAAc,CAAC,EAC5DD,EAAmBC,EACnBT,EAAWR,EAAW,EAAEO,CAAc,CACxC,CAEAnB,EAAO4B,EAAmBJ,CAAU,EACpCG,EAAO,KAAKJ,EAAS,MAAMK,CAAgB,CAAC,EAE5CP,EAAYI,CACd,CAEAzB,EAAOqB,IAAcJ,CAAO,EAC5BjB,EAAOmB,EAAiBP,EAAW,MAAM,EACzCZ,EAAOY,EAAWO,CAAc,GAAKF,CAAO,EAG5C,QAAWN,KAAQK,EACjBL,EAAK,MAAM,KAAK,SAAS,CAE7B,CAMA,gBAAgBb,EAAoB,CAClC,GAAI,KAAK,UAAW,CAClBA,EAAQ,UAAU,IAAI,KAAK,SAAS,EACpC,MACF,CACAgC,EAAehC,CAAO,CACxB,GAMWiC,EAAP,cAAoCC,CAAM,CAG9C,YACEC,EACAC,EAA6C,CAC3C,UAAWxC,GACZ,CAED,MAAMuC,CAAK,EACX,KAAK,cAAgB,IAAI1C,EAAc,KAAM2C,CAAoB,CACnE,CAMA,eAAeC,EAA0B,CACvC,KAAK,cAAc,eAAeA,CAAa,CACjD,CAQA,oBAAoBC,EAAY,CAC9B,GAAIA,IAAS,GAAI,OAAOA,EACxB,IAAMC,EAAMC,EAAgBF,CAAI,EAChC,GAAI7C,EAAc,iBAAiB8C,EAAI,IAAI,EAAG,CAC5C,IAAME,EAAUF,EAAI,cAAc,MAAM,EACxCE,EAAQ,OAAO,GAAGF,EAAI,KAAK,UAAU,EACrCA,EAAI,KAAK,OAAOE,CAAO,CACzB,CACA,YAAK,eAAeF,EAAI,KAAK,WAAW,CAAC,CAAgB,EAClDA,EAAI,KAAK,SAClB,GCtlBK,IAAMG,EAAwB,IAC5B,IAAIC,EAAqBC,CAAO,ECrCzC,IAAMC,EAA4B,CAChC,WAAY,GACZ,cAAe,GACf,UAAW,GACX,QAAS,IAMWC,EAAhB,cAA0C,WAAW,CAOzD,aAAA,CACE,MAAK,EAEL,KAAK,SAAW,IAAI,iBAAiB,KAAK,KAAK,KAAK,IAAI,CAAC,EACzD,KAAK,SAAS,QAAQ,KAAMD,CAAyB,CACvD,CAEA,mBAAiB,CACfE,EAAe,IAAI,EACnB,KAAK,KAAI,CACX,CAEA,0BAAwB,CACtB,KAAK,KAAI,CACX,CAEA,MAAI,CACF,KAAK,SAAS,WAAU,EACxB,KAAK,OAAO,eAAe,IAAI,EAC/B,KAAK,SAAS,QAAQ,KAAMF,CAAyB,CACvD,GCjCI,IAAOG,EAAP,cAAiCC,CAAiB,CAMtD,aAAA,CACE,MAAK,EACL,KAAK,OAASC,EAAqB,CACrC,GAGF,eAAe,OAAO,YAAaF,CAAiB",
  "names": ["model", "parseFromString", "html", "Parser", "model", "k", "v", "group", "prev", "curr", "sentence", "boundaries", "result", "start", "boundary", "score", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_j", "_k", "_l", "_m", "_o", "assert", "ZWSP_CODEPOINT", "ZWSP", "NodeType", "DomAction", "domActions", "defaultBlockElements", "actionForDisplay", "display", "actionForElement", "element", "nodeName", "action", "style", "applyWrapStyle", "NodeOrText", "_NodeOrText", "nodeOrText", "value", "_b", "_a", "separator", "chunks", "node", "document", "nodes", "chunk", "n", "Paragraph", "element", "node", "lastNode", "opportunities", "len", "text", "i", "ZWSP_CODEPOINT", "boundaries", "forcedOpportunities", "set", "HTMLProcessor", "parser", "options", "ZWSP", "ele", "child", "NodeType", "element", "block", "assert", "parent", "action", "actionForElement", "DomAction", "isNewBlock", "Paragraph", "childBlock", "text", "NodeOrText", "paragraph", "node", "boundaries", "x", "i", "adjustedBoundaries", "nodes", "textLen", "sum", "boundary_index", "boundary", "nodeStart", "lastNode", "nodeText", "nodeLength", "nodeEnd", "_a", "chunks", "chunkStartInNode", "boundaryInNode", "applyWrapStyle", "HTMLProcessingParser", "Parser", "model", "htmlProcessorOptions", "parentElement", "html", "doc", "parseFromString", "wrapper", "loadDefaultThaiParser", "HTMLProcessingParser", "model", "MUTATION_OBSERVER_OPTIONS", "BudouXBaseElement", "applyWrapStyle", "BudouXThaiElement", "BudouXBaseElement", "loadDefaultThaiParser"]
}
