{
  "version": 3,
  "sources": ["../../src/data/models/ja.ts", "../../src/dom-browser.ts", "../../src/parser.ts", "../../src/html_processor.ts", "../../src/index.ts", "../../src/tests/testutils-browser.ts", "../../src/tests/test_html_processor.ts", "../../src/tests/test_parser.ts", "../../src/webcomponents/budoux-base.ts", "../../src/webcomponents/budoux-ja.ts", "../../src/tests/test_webcomponents.ts"],
  "sourcesContent": ["export const model: {[key:string]: {[key:string]: number}} = {\"UW3\":{\"\u3002\":6699,\"\u306B\":3897,\"\u3001\":4784,\"\u306E\":3706,\"\u304C\":4162,\"\u3092\":5769,\"\u306F\":4221,\"\u3068\":2900,\"\u308B\":2971,\"\u304F\":2902,\"\u3082\":3155,\"\u3046\":2242,\"\u3066\":2447,\"\u3067\":3372,\"\u305F\":2217,\"\u3044\":1855,\"\u306A\":2357,\"\u3063\":-1853,\"\u65B9\":2814,\"\u3089\":1353,\"\u3093\":967,\"\u3070\":1790,\"\uFF3D\":2166,\"\u304B\":1899,\"\uFF0C\":3358,\"\u308A\":1013,\"\uFF01\":3252,\"\u30FC\":-102,\"\u3084\":2149,\"\uFF1F\":3703,\"\uFF0E\":2093,\"\u30FB\":1074,\"\u2026\":2428,\"\u90E8\":1732,\"\u3069\":992,\"\u3054\":-2327,\"\uFF09\":2573,\"\u30C3\":-2137,\"\u2606\":2675,\"\u304A\":-1495,\"\u4E0A\":428,\"\u4EE5\":-1870,\"\u3064\":1078,\"\u300D\":1608,\"\u266A\":2714,\"\u96FB\":-1669,\"\u30AF\":335,\"\u3060\":866,\"\u3078\":2073,\"\u308D\":1142,\"\u7B11\":2335,\"\u305A\":1456,\"\u9762\":475,\"\u3073\":514,\"\u3042\":1179,\"\u4ECA\":1080,\"\u3050\":2053,\"\u5206\":1111,\"\u611F\":1389,\"\u5927\":-1134,\"\u4EAC\":-1396,\"\u4E2D\":998,\"\u4EBA\":486,\"\u5834\":-794,\"\u30A4\":-568,\"\u3059\":938,\"\u3055\":-599,\"\u307E\":-370,\"\u5229\":-681,\"\u9593\":752,\"\uFF10\":-870,\"\u3041\":1322,\"\u30D5\":-1285,\"\u30F3\":-284,\"\u300C\":-1434,\"\u5F53\":-337,\"\u304D\":530,\"\u65E5\":713,\"\u30B9\":-901,\"\u3083\":1112,\"\u5F8C\":1224,\"\u3005\":1435,\"\u30B7\":-1196,\"\u5EA6\":982,\"\u89B3\":-976,\"\u98DF\":-517,\"\u884C\":-725,\"\u30C9\":-995,\"\u30EA\":-636,\"\u3048\":728,\"\u7A7A\":902,\"\u591C\":1480,\"\u30A2\":-700,\"\u300F\":1404,\"\uFF11\":-550,\"\u4F53\":1000,\"\u79CB\":1464,\"\u5165\":-819,\"\u30D7\":-718,\"\u6614\":1287,\"\uFF3B\":-960,\"\u984C\":1113,\"\u80FD\":-710,\"\u7686\":1294,\"\u3080\":920,\"\u5B66\":-552,\"\u614B\":-749,\"\u6708\":584,\"\u4FC2\":701,\"\u5909\":328,\"\u8D85\":976,\"\u3076\":672,\"\u7136\":515,\"\u301C\":489,\"\u308C\":295,\"\u7531\":680,\"\u6BB5\":13,\"\u975E\":768,\"\u5149\":-218,\"\u610F\":-477,\"\u305E\":825,\"\u5E74\":344,\"\u3079\":-711,\"\u6A5F\":-463,\"\u8A00\":-419,\"\u3061\":363,\"\u6C17\":130,\"\u307F\":275,\"\uFF4F\":-520,\"\uFF1E\":588,\"\u3057\":181,\"\u3051\":159,\"\u79FB\":-635,\"\u898B\":160,\"\u30BA\":304,\"\u81EA\":-352,\"\u679C\":767,\"\u756A\":252,\"\u8272\":469,\"\u3000\":257,\"\u3071\":454,\"\u51FA\":-160,\"\u5C4B\":338,\"\u30AB\":-102,\"\u30E1\":-136,\"\u6307\":-240,\"\u5E97\":203,\"\u4E00\":-50,\"\u5225\":285,\"\u982D\":486,\"\u671D\":270,\"\u60F3\":398,\"\u5473\":101,\"\u751F\":-160,\"\u8A9E\":159,\"\u201D\":215,\"\u7740\":-149,\"\u6240\":189,\"\uFF1A\":94,\"\u795E\":-111,\"\u5FDC\":149,\"\u7A0B\":145,\"\u4E0D\":-93,\"\u6599\":-76,\"\u5BFA\":50,\"\u6C34\":54,\"\u30EC\":-54,\"\u30D1\":-29,\"\u30B5\":33,\"\u30B0\":12,\"\u6709\":-16},\"UW4\":{\"\u3002\":-7440,\"\u306E\":-4018,\"\u304C\":-3577,\"\u306B\":-4299,\"\u3066\":-3839,\"\u308B\":-5462,\"\u3001\":-7452,\"\u306F\":-3332,\"\u3063\":-4313,\"\u3067\":-3120,\"\u3092\":-4861,\"\u3046\":-2446,\"\u3068\":-2917,\"\u308A\":-4081,\"\u307E\":-1296,\"\u305F\":-1675,\"\u3042\":501,\"\u308C\":-4326,\"\u306A\":-1928,\"\u305D\":456,\"\u304F\":-2884,\"\u304B\":-2662,\"\u3089\":-4391,\"\u3054\":591,\"\u3057\":-1725,\"\u3053\":-517,\"\u3060\":-2037,\"\u304D\":-2074,\"\u3044\":-1531,\"\u3093\":-3821,\"\u30FC\":-2899,\"\u3082\":-2746,\"\u307F\":-1111,\"\u98DF\":652,\"\u884C\":411,\"\u601D\":1386,\"\u3059\":-1159,\"\u7A7A\":2526,\"\u5927\":788,\"\u300D\":-5393,\"\u3058\":-2352,\"\u3084\":-1257,\"\u3051\":-3441,\"\u3081\":-1867,\"\u3055\":-1716,\"\u3088\":-643,\"\u300C\":2301,\"\u8868\":1003,\"\u65E5\":695,\"\u5E83\":1811,\"\u5834\":333,\"\u4E00\":576,\"\u6642\":564,\"\u3061\":-1762,\"\u51B7\":2351,\"\u4EAC\":614,\"\uFF0C\":-4205,\"\u308F\":-1624,\"\u4EBA\":512,\"\u79C1\":1957,\"\uFF01\":-4469,\"\u3048\":-1844,\"\u30C3\":-2189,\"\u5F53\":384,\"\u30FB\":-677,\"\u30F3\":-2078,\"\uFF11\":710,\"\u65B9\":-816,\"\u3079\":-2964,\"\u624B\":270,\"\u6765\":430,\"\u308D\":-2793,\"\u305B\":-1498,\"\u30EB\":-1178,\"\u3070\":-2432,\"\u3064\":-1195,\"\u4F7F\":1131,\"\uFF08\":2399,\"\u6301\":180,\"\u2026\":-2208,\"\u3086\":-2265,\"\uFF1F\":-3412,\"\uFF09\":-4207,\"\u3076\":-2267,\"\u4F55\":1291,\"\u5F7C\":1247,\"\u3073\":-1619,\"\u7B11\":-3444,\"\u672C\":-1249,\"\u3069\":-697,\"\uFF3B\":1760,\"\uFF0E\":-2874,\"\u8A00\":227,\"\u304A\":820,\"\u305A\":-1966,\"\u30A4\":-507,\"\u4ECA\":1002,\"\u3083\":-2441,\"\u898B\":386,\"\u81EA\":792,\"\uFF12\":533,\"\u6700\":1072,\"\u7528\":-716,\"\u5E2F\":-1138,\"\u9593\":-393,\"\u643A\":441,\"\u591A\":1062,\"\u30EA\":-707,\"\u80FD\":-1270,\"\u300F\":-3209,\"\uFF3D\":-1427,\"\u6C17\":235,\"\u5165\":412,\"\u6709\":744,\"\u306D\":-1659,\"\u767D\":451,\"\u3041\":-1501,\"\u304E\":-1428,\"\u4E2D\":34,\"\u3072\":1076,\"\u904A\":1409,\"\u201D\":-817,\"\u98A8\":673,\"\u30B3\":344,\"\u3087\":-1527,\"\u6C34\":286,\"\u60C5\":-375,\"\uFF10\":-374,\"\u3080\":-1261,\"\u5408\":-948,\"\u516C\":724,\"\u307C\":-949,\"\u266A\":-1513,\"\u5C0F\":736,\"\u50D5\":856,\"\u2606\":-1296,\"\u301C\":-1156,\"\u30C9\":-76,\"\u697D\":308,\"\u5168\":475,\"\u66F8\":411,\"\u30B9\":-218,\"\u4E8C\":481,\"\u614B\":-582,\"\u5C11\":436,\"\u4E0D\":505,\"\u8FD4\":-347,\"\u5B9A\":-356,\"\u305C\":-907,\"\u9AD8\":229,\"\u7279\":623,\"\u796D\":413,\"\u4ED6\":368,\"\u3065\":-776,\"\u76EE\":117,\"\u305E\":-935,\"\u8A71\":316,\"\u5B50\":-233,\"\u3050\":-840,\"\u5E74\":-625,\"\uFF13\":22,\"\u9053\":181,\"\u7684\":-500,\"\uFF4F\":-489,\"\u5B9F\":368,\"\u8CB7\":366,\"\u7121\":192,\"\u8857\":443,\"\u6771\":470,\"\u7269\":-204,\"\u30E5\":-434,\"\u307B\":-176,\"\u8FBC\":-568,\"\u7518\":383,\"\u30BF\":-212,\"\u63DB\":-278,\"\u73FE\":191,\"\u65B0\":150,\"\u590F\":403,\"\u30D5\":-157,\"\u30C8\":-148,\"\u3052\":-455,\"\u3056\":-327,\"\u30C7\":174,\"\u5238\":-471,\"\u611F\":28,\"\u79CB\":307,\"\u96E3\":179,\"\u5916\":153,\"\u3078\":-247,\"\u30E7\":-156,\"\u6D41\":254,\"\u821E\":138,\"\u30B5\":75,\"\u524D\":-75,\"\u5E97\":101,\"\u62BC\":264,\"\u958B\":61,\"\u3000\":-148,\"\uFF3E\":-256,\"\u5EA6\":-125,\"\uFF15\":52,\"\u3005\":-142,\"\u5199\":159,\"\u56DE\":-154,\"\u30E9\":-56,\"\u95A2\":-145,\"\u5B89\":63,\"\u76F8\":54,\"\u53C2\":45,\"\u767E\":45,\"\u53D6\":-45,\"\u30E0\":-41,\"\u5C4B\":-8,\"\u901A\":-8,\"\u52DD\":4,\"\u7F8E\":4},\"UW5\":{\"\u3002\":-2177,\"\u3067\":-955,\"\u3059\":-681,\"\u3001\":-1011,\"\u306A\":-608,\"\u307E\":-353,\"\u3066\":169,\"\u3063\":964,\"\u308B\":175,\"\u306F\":-874,\"\u304D\":1177,\"\u3057\":-394,\"\u304A\":345,\"\u3092\":-674,\"\u304F\":287,\"\u3053\":500,\"\u3058\":886,\"\u306B\":-612,\"\u305D\":-421,\"\u80FD\":219,\"\u308F\":710,\"\u3079\":1871,\"\u3048\":637,\"\u3093\":1001,\"\u3042\":-271,\"\u305F\":198,\"\u307F\":293,\"\u3044\":345,\"\u30FB\":-1082,\"\u3068\":-617,\"\u3088\":-587,\"\u306E\":-641,\"\u308D\":-360,\"\u4E0A\":-1087,\"\u304B\":210,\"\u3060\":-338,\"\u3081\":851,\"\u5E2F\":303,\"\u308C\":495,\"\u3056\":1494,\"\u3089\":222,\"\u305A\":1173,\"\u3055\":-327,\"\u3064\":1091,\"\u30EB\":-472,\"\u9762\":776,\"\u300D\":-1068,\"\u96FB\":-285,\"\u307C\":1415,\"\u65E5\":342,\"\u304C\":-272,\"\u3073\":826,\"\u305B\":-303,\"\u601D\":-891,\"\u3061\":572,\"\u51B7\":1123,\"\u308A\":409,\"\u5E74\":876,\"\u4F7F\":-1390,\"\u5229\":365,\"\u8449\":791,\"\uFF01\":-384,\"\uFF3D\":-470,\"\u5408\":255,\"\u3076\":15,\"\u5238\":-1133,\"\u610F\":708,\"\u3050\":159,\"\u30D0\":-254,\"\u3082\":-93,\"\u3046\":325,\"\u5165\":-341,\"\u79FB\":-571,\"\u30C8\":-313,\"\u4F53\":-1085,\"\u5F53\":401,\"\u3005\":505,\"\u5206\":173,\"\u30A4\":171,\"\u898B\":-272,\"\u6765\":-122,\"\u6599\":579,\"\u5BFA\":-461,\"\u304E\":348,\"\u624B\":179,\"\u7D9A\":-872,\"\u3080\":458,\"\u901A\":-209,\"\uFF0E\":-184,\"\u30BF\":244,\"\u884C\":-180,\"\uFF1F\":-192,\"\u6C34\":-154,\"\u5148\":-562,\"\u90FD\":40,\"\u4E00\":-151,\"\u3069\":-41,\"\u3070\":209,\"\u30A2\":-123,\"\u5B66\":49,\"\u6700\":-116,\"\u964D\":104,\"\uFF4F\":95,\"\u3078\":-146,\"\u4F55\":-176,\"\u52B9\":111,\"\u30F3\":-30,\"\u3087\":90,\"\u30FC\":4,\"\u3000\":-135,\"\uFF08\":-67,\"\u7A2E\":42,\"\uFF17\":-101,\"\u7684\":-54,\"\u6210\":46,\"\u30E9\":29,\"\uFF2E\":104,\"\uFF11\":-29,\"\u6709\":-37,\"\u4E2D\":8,\"\u5834\":4},\"UW2\":{\"\u3002\":-1401,\"\u3001\":-1370,\"\u3092\":-2403,\"\u306B\":-1207,\"\u304C\":-653,\"\u306F\":-1010,\"\u304B\":18,\"\u308C\":5,\"\u3063\":269,\"\u4EE5\":2215,\"\u3066\":-985,\"\u3046\":-489,\"\u5168\":1762,\"\u306E\":-695,\"\u305D\":-534,\"\u3067\":-810,\"\u3060\":523,\"\u3086\":1668,\"\u3055\":922,\"\u304F\":-812,\"\u3081\":81,\"\u3068\":-751,\"\u3082\":-813,\"\u3042\":-233,\"\u4E00\":1197,\"\u3057\":-49,\"\u3093\":344,\"\u304A\":-711,\"\u98DF\":981,\"\u3054\":-682,\"\u304D\":-556,\"\u6BCE\":1671,\"\u7D50\":1952,\"\u5F7C\":754,\"\u5C11\":676,\"\u6700\":445,\"\u307B\":1001,\"\u308F\":-118,\"\u821E\":2257,\"\u4E0A\":-421,\"\u3088\":577,\"\u540C\":567,\"\u308A\":-479,\"\u6A5F\":1341,\"\u4EBA\":201,\"\u610F\":531,\"\u306A\":-492,\"\u300C\":-482,\"\u3070\":-464,\"\u95A2\":745,\"\u4EAC\":-377,\"\u672C\":694,\"\u3044\":-79,\"\u5927\":266,\"\u76EE\":-1004,\"\u591A\":387,\"\u7740\":-477,\"\u3064\":-423,\"\u30B1\":-246,\"\u632F\":-1313,\"\u3083\":283,\"\u984C\":848,\"\u624B\":663,\"\u3072\":-1353,\"\u5BB9\":956,\"\u6C34\":335,\"\u6211\":-1421,\"\u308B\":-207,\"\u88CF\":-1437,\"\u30FC\":274,\"\u305C\":567,\"\u3071\":396,\"\u540D\":341,\"\u30D5\":-264,\"\u5BFA\":-551,\"\u8449\":787,\"\u307E\":-173,\"\u5915\":826,\"\u3076\":435,\"\u7D76\":1181,\"\u9AD8\":498,\"\u4ECA\":276,\"\u53CB\":494,\"\u3089\":-91,\"\u30F3\":167,\"\u305F\":-109,\"\u307F\":-123,\"\u6599\":70,\"\u30A4\":-122,\"\u96FB\":315,\"\u51B7\":-664,\"\u6253\":557,\"\u30E1\":-47,\"\u4E16\":-793,\"\u30D1\":289,\"\u5973\":-487,\"\uFF52\":990,\"\u30D7\":-195,\"\u53D6\":-360,\"\uFF3E\":149,\"\u5834\":190,\"\u3053\":161,\"\uFF0C\":-306,\"\u843D\":-499,\"\u9078\":313,\"\u77E5\":-361,\"\u6975\":748,\"\u5165\":-160,\"\u826F\":183,\"\u30E9\":-210,\"\u30B9\":54,\"\u904A\":-310,\"\u7528\":-161,\"\u5F0F\":93,\"\u3005\":80,\"\u8ECA\":124,\"\u7ACB\":-292,\"\u4E0B\":154,\"\u30EB\":31,\"\u7518\":227,\"\u5B9F\":97,\"\u91CD\":159,\"\u4E57\":-115,\"\u5F53\":94,\"\uFF1A\":106,\"\uFF3D\":-50,\"\uFF28\":-84,\"\u7684\":42,\"\u76F8\":75,\"\u4E09\":58,\"\u3051\":16,\"\u683C\":130,\"\u6B63\":100,\"\uFF3B\":-16,\"\u65E5\":-25,\"\u516C\":-33,\"\uFF14\":20,\"\u30A3\":-12,\"\u308D\":-4},\"UW6\":{\"\u304C\":320,\"\u3002\":-307,\"\u3066\":-16,\"\u3067\":219,\"\u306F\":307,\"\u3057\":581,\"\u5165\":621,\"\u3069\":828,\"\u3042\":-496,\"\u7A7A\":1589,\"\u306A\":218,\"\u3059\":-90,\"\u3060\":95,\"\u3081\":1415,\"\u5238\":1711,\"\u3055\":555,\"\u3054\":-283,\"\u306E\":85,\"\u6027\":2064,\"\u3046\":35,\"\u3084\":819,\"\u308A\":578,\"\u5834\":-864,\"\u306B\":245,\"\u3064\":506,\"\u308D\":352,\"\u304D\":-17,\"\u3063\":301,\"\u308B\":71,\"\u304B\":231,\"\u3044\":365,\"\u3089\":65,\"\u305D\":-101,\"\u3070\":527,\"\u3051\":-213,\"\u30FC\":-66,\"\u3093\":324,\"\u5F7C\":-1272,\"\u30AF\":-346,\"\u30EB\":207,\"\uFF10\":626,\"\u304F\":240,\"\u3001\":180,\"\u98DF\":-284,\"\u904A\":-906,\"\u5BFA\":611,\"\u30FB\":-639,\"\uFF1A\":1217,\"\u8A00\":-361,\"\u3086\":755,\"\u614B\":221,\"\u8FBC\":679,\"\u3092\":85,\"\u7684\":479,\"\u53EF\":567,\"\u30BF\":380,\"\u6C17\":415,\"\u601D\":-111,\"\u3071\":813,\"\u307E\":170,\"\u30E1\":239,\"\u304A\":-18,\"\u30D4\":780,\"\u30AB\":292,\"\u9001\":-896,\"\u6765\":-261,\"\u904E\":846,\"\u30A4\":-244,\"\u52B9\":-725,\"\u30B7\":-130,\"\u30B1\":-388,\"\u305A\":-403,\"\u3076\":-248,\"\u713C\":643,\"\u308C\":119,\"\u5E83\":-150,\"\u6A5F\":216,\"\u308F\":60,\"\u30F3\":-64,\"\u65B9\":-235,\"\uFF11\":33,\"\u3053\":41,\"\u5E97\":164,\"\u5370\":360,\"\u3073\":129,\"\u56DE\":-94,\"\u304E\":280,\"\u4E0D\":204,\"\u3082\":-18,\"\u81EA\":123,\"\u3080\":168,\"\u30D1\":-112,\"\u5468\":275,\"\u51FA\":68,\"\u53C2\":114,\"\u795E\":33,\"\u7740\":-20,\"\u9593\":-4,\"\u7DF4\":8,\"\u3083\":-4},\"UW1\":{\"\u306F\":-273,\"\u3046\":275,\"\u307E\":128,\"\u304A\":922,\"\u3054\":890,\"\u3068\":165,\"\u304C\":-385,\"\u308B\":-34,\"\u305B\":210,\"\u3044\":-91,\"\u3093\":289,\"\u3042\":-230,\"\u3067\":-127,\"\u5B66\":209,\"\u308A\":-102,\"\u6D6E\":1464,\"\u306B\":-344,\"\u7518\":-1424,\"\u3064\":241,\"\u30D0\":511,\"\u306A\":-220,\"\u3066\":60,\"\u6C34\":1969,\"\u3001\":-26,\"\u96FB\":127,\"\u5F53\":-1038,\"\u3075\":1899,\"\u3089\":72,\"\u308C\":-44,\"\u643A\":-86,\"\u3092\":-176,\"\u305D\":137,\"\u3063\":194,\"\u308D\":303,\"\uFF3B\":-601,\"\u30FC\":113,\"\u304B\":-110,\"\u9593\":572,\"\u3061\":285,\"\u3086\":-428,\"\u3057\":-30,\"\u5916\":301,\"\u30D5\":-155,\"\u3082\":-96,\"\uFF10\":275,\"\u7A7A\":-524,\"\u30B9\":-251,\"\u304F\":134,\"\u81EA\":412,\"\u3059\":151,\"\u7528\":599,\"\u3055\":-164,\"\u30C1\":183,\"\u30B1\":-196,\"\u5165\":266,\"\u30C4\":134,\"\u56F0\":574,\"\u5229\":-371,\"\u751F\":254,\"\u6A5F\":318,\"\u5B89\":-400,\"\u753B\":-53,\"\u5EAD\":619,\"\u30A4\":211,\"\uFF13\":-258,\"\u30E1\":96,\"\u9762\":-306,\"\u4F55\":173,\"\u3053\":64,\"\u554F\":588,\"\u65B9\":124,\"\u767D\":-248,\"\u3058\":-49,\"\u793E\":225,\"\u69D8\":365,\"\u7530\":137,\"\u56FD\":-382,\"\u8FBC\":42,\"\u306E\":-31,\"\u9AD8\":170,\"\u3002\":-17,\"\u30C3\":117,\"\u3060\":63,\"\u65B0\":178,\"\uFF0E\":-72,\"\u30E9\":92,\"\u4F7F\":-79,\"\u898B\":76,\"\uFF1F\":113,\"\u632F\":209,\"\uFF01\":65,\"\u64AE\":-182,\"\u5238\":79,\"\u3056\":120,\"\u5468\":137,\"\u9577\":144,\"\u3084\":-42,\"\u5C71\":114,\"\u30D1\":63,\"\u597D\":50,\"\u30DA\":126,\"\u7740\":-16,\"\u3081\":-12,\"\u307F\":-8,\"\u500B\":-79,\"\u4E0A\":12,\"\u3048\":-8,\"\u9023\":-29,\"\u30DC\":16},\"BW2\":{\"\u305F\u3068\":1475,\"\u3068\u304A\":-3875,\"\u3068\u3044\":274,\"\u3046\u3084\":-2003,\"\u306A\u3044\":-2999,\"\u306E\u307F\":-2622,\"\u3066\u3044\":-1296,\"\u3067\u3042\":-3302,\"\u306E\u3088\":-838,\"\u3067\u3059\":-3035,\"\u305F\u307E\":-2116,\"\u3044\u305F\":-1737,\"\u306E\u6A5F\":-2082,\"\u306E\u3067\":-921,\"\u3067\u304D\":-2119,\"\u306B\u306F\":-1012,\"\u306B\u3082\":-1213,\"\u306F\u3058\":-2465,\"\u3001\u305D\":-1810,\"\u304C\u3068\":-1022,\"\u304F\u306A\":-1771,\"\u3067\u3082\":-1689,\"\u306F\u306A\":-331,\"\u306E\u306F\":-1100,\"\u308B\u3068\":-643,\"\u3066\u304A\":-2518,\"\u306A\u3069\":-1807,\"\u5E2F\u96FB\":-1351,\"\u3067\u3057\":-1856,\"\u3001\u3068\":-558,\"\u307E\u305F\":-2737,\"\u305F\u3060\":-2687,\"\u304F\u3057\":-1520,\"\u308B\u3088\":-944,\"\u3044\u3082\":709,\"\u3082\u3042\":-935,\"\u308A\u3082\":-1014,\"\u3066\u3042\":-2039,\"\u305F\u3044\":-1183,\"\u3066\u307F\":-1524,\"\u305D\u3053\":-652,\"\u3082\u3057\":-490,\"\u3066\u304F\":-1248,\"\u3069\u3082\":-675,\"\u3046\u3069\":-1684,\"\u306E\u524D\":-820,\"\u306E\u3060\":-873,\"\u306A\u304F\":-956,\"\u306B\u306A\":-362,\"\u4EBA\u304C\":1674,\"\u3093\u3069\":-722,\"\u3082\u306E\":-753,\"\u3044\u307E\":-421,\"\u3068\u601D\":545,\"\u308C\u305F\":-890,\"\u306F\u3044\":-770,\"\u3059\u3054\":-1196,\"\u304F\u3060\":-1043,\"\u30FB\u30FB\":-1221,\"\u3066\u304D\":-1069,\"\u304C\u3063\":-1494,\"\u306F\u3042\":-1185,\"\u3067\u306F\":-1027,\"\u3044\u3064\":-659,\"\u3068\u306A\":159,\"\u6642\u9593\":-681,\"\u304C\u3057\":280,\"\u306B\u3057\":-458,\"\u3046\u307E\":-1227,\"\u305F\u3061\":-851,\"\u306E\u304A\":458,\"\u3070\u3044\":-968,\"\u3001\u306A\":-145,\"\u305F\u6642\":421,\"\u306E\u3082\":-489,\"\u3068\u304B\":-782,\"\u3089\u306A\":-64,\"\u306A\u304B\":-299,\"\u306E\u304B\":-278,\"\u3067\u306A\":-1003,\"\u305F\u3082\":318,\"\u3068\u3053\":-337,\"\u3082\u306A\":-157,\"\u3057\u305F\":-402,\"\u3082\u3064\":-433,\"\u3044\u3044\":-357,\"\u30FC\u30C9\":-523,\"\u3068\u304D\":-230,\"\u3082\u3061\":-157,\"\u305F\u3088\":-393,\"\u306F\u3067\":41,\"\u3068\u3082\":-359,\"\u3044\u3057\":-401,\"\u3044\u3088\":-494,\"\u306F\u305A\":-333,\"\u3084\u3059\":-524,\"\u3068\u540C\":-442,\"\u3088\u3046\":-175,\"\u3044\u306A\":-144,\"\u30FC\u306A\":476,\"\u308B\u306E\":-197,\"\u3057\u3044\":-297,\"\u3001\uFF11\":-643,\"\u3066\u3082\":-151,\"\u308A\u306A\":191,\"\u304C\u3088\":195,\"\u306E\uFF11\":-539,\"\u3046\u304B\":-137,\"\u3001\u6E05\":-374,\"\u4ECA\u65E5\":-360,\"\u3068\u3059\":-127,\"\u3064\u306E\":186,\"\uFF3D\u4EAC\":-152,\"\u3046\u3044\":-93,\"\u306E\u304C\":-101,\"\u3044\u4EBA\":80,\"\u3051\u3069\":-126,\"\u30FC\u3067\":83,\"\u304C\u3061\":62,\"\u306E\u65B9\":96,\"\u3089\u3044\":-54,\"\u3067\u3044\":-33,\"\u3066\u305F\":-37,\"\u3069\u3053\":-20},\"BW1\":{\"\u306E\u307F\":3058,\"\u4EE5\u4E0A\":1223,\"\u307E\u307E\":2830,\"\u304B\u3089\":1723,\"\u305F\u307E\":2162,\"\u308C\u305F\":1494,\"\u767D\u3044\":3534,\"\u3061\u304C\":-2703,\"\u3081\u3066\":969,\"\u306A\u3044\":1045,\"\u305D\u306E\":-1066,\"\u3067\u306F\":-518,\"\u3063\u305F\":166,\"\u305F\u3068\":-948,\"\u3053\u3068\":-1455,\"\u304F\u308C\":922,\"\u3068\u304B\":1688,\"\u308B\u306E\":-1593,\"\u3046\u306A\":513,\"\u305F\u306E\":-1543,\"\u306E\u306F\":1277,\"\u3088\u308A\":1376,\"\u3067\u3082\":667,\"\u3068\u304C\":-1393,\"\u3057\u3044\":917,\"\u304B\u3082\":-1290,\"\u30C3\u30AF\":631,\"\u3088\u3046\":-1620,\"\u3093\u306A\":471,\"\u3068\u3046\":1085,\"\u3002\u30FB\":2456,\"\u305F\u3089\":949,\"\u6C17\u306B\":-70,\"\u3066\u3082\":623,\"\u5229\u7528\":1018,\"\u6700\u8FD1\":1515,\"\u304C\u3068\":-1545,\"\u3053\u306E\":-1039,\"\u306B\u3082\":816,\"\u3082\u3064\":1694,\"\u304C\u3001\":1178,\"\u308C\u3066\":-1090,\"\u308A\u304C\":-96,\"\u308A\u3068\":1198,\"\u3093\u3067\":-325,\"\u307E\u3060\":1343,\"\u306B\u306F\":588,\"\u3082\u3046\":1414,\"\u5C11\u3057\":1375,\"\u3068\u304D\":1349,\"\u3053\u305D\":1413,\"\u308A\u3082\":1231,\"\u308C\u3070\":936,\"\u3051\u3069\":1014,\"\u540C\u3058\":1427,\"\u308B\u3068\":202,\"\u305F\uFF0E\":1736,\"\u307E\u308A\":1018,\"\u3044\u3046\":138,\"\u306F\u3001\":436,\"\u3068\u3044\":-725,\"\u3044\u3001\":-329,\"\u306A\u3089\":1251,\"\u601D\u3044\":-1273,\"\u3066\u3001\":702,\"\u3042\u308B\":141,\"\u3063\u3066\":-196,\"\u3067\u3001\":572,\"\u306A\u305C\":1571,\"\u308A\u306B\":356,\"\u308A\u306E\":-399,\"\u307E\u308B\":-429,\"\u308C\u308B\":350,\"\u305F\u3044\":242,\"\u305D\u308C\":293,\"\u3082\u3057\":1050,\"\u306E\u9593\":1155,\"\u306A\u3069\":1137,\"\u3044\u306E\":-369,\"\u3046\u3084\":-1096,\"\u3060\u3051\":391,\"\u3066\u3044\":-522,\"\u3068\u3067\":941,\"\u304F\u3066\":680,\"\u3093\u3060\":515,\"\u30B1\u30FC\":-781,\"\u3044\u3067\":-844,\"\u666E\u6BB5\":655,\"\u306E\u3082\":725,\"\u601D\u3046\":57,\"\u3048\u3070\":791,\"\u304D\u306A\":687,\"\u306B\u611F\":-579,\"\u3044\u305F\":310,\"\u3001\u3068\":310,\"\u3082\u306E\":-538,\"\u305F\u3060\":398,\"\u306E\u304C\":482,\"\u3066\u308B\":372,\"\u5927\u5909\":401,\"\u306E\u5F8C\":753,\"\u308B\u4EBA\":626,\"\u3057\u304B\":96,\"\u3067\u304D\":-364,\"\u308B\u3067\":252,\"\u307E\u3041\":444,\"\u4F7F\u3044\":-715,\"\u3053\u3046\":-591,\"\u304B\u306A\":-137,\"\u8CB7\u3044\":-698,\"\uFF01\uFF01\":322,\"\u3081\u308B\":-429,\"\u306B\u3001\":564,\"\uFF10\u5186\":304,\"\u3001\u4ECA\":302,\"\u30FC\u30B8\":789,\"\u3059\u308B\":-159,\"\u53CB\u9054\":625,\"\u30AF\u30EB\":437,\"\u308B\u306B\":-442,\"\u3084\u3089\":416,\"\u3002\u3042\":-619,\"\u304D\u308A\":449,\"\u3068\u3001\":245,\"\u306E\u4E0A\":589,\"\u305F\u3081\":524,\"\u307E\u3067\":160,\"\u304B\u3001\":-255,\"\u3046\u3061\":218,\"\u306A\u304F\":149,\"\u6765\u3066\":386,\"\u304D\u305F\":236,\"\u3079\u304D\":424,\"\u3058\u3066\":254,\"\u3071\u308A\":342,\"\u3093\u3069\":-303,\"\u30FB\u30FB\":237,\"\u3060\u306A\":-302,\"\u308D\u3046\":-315,\"\u73FE\u5728\":281,\"\u3002\uFF13\":274,\"\u304A\u5E97\":199,\"\u3066\u305F\":147,\"\u3059\u3089\":190,\"\u3044\u3082\":-216,\"\u306B\u304B\":180,\"\u3044\u306A\":-98,\"\u6C17\u304C\":115,\"\u305F\u308A\":102,\"\u308F\u3089\":-71,\"\u5B9F\u969B\":83,\"\u3068\u306B\":-20,\"\u3082\u3001\":29,\"\u304F\u3055\":-24,\"\u56FD\u4EBA\":24,\"\u3046\u304B\":12,\"\u306F\uFF11\":37,\"\u3068\u306F\":-4},\"BW3\":{\"\u3046\u307E\":4971,\"\u3082\u306E\":3479,\"\u3042\u308A\":1053,\"\u3044\u305F\":712,\"\u3088\u3046\":-404,\"\u3044\u3046\":719,\"\u4E0A\u304C\":1571,\"\u307E\u3059\":-943,\"\u306F\u3058\":3173,\"\u3068\u3046\":-693,\"\u305F\u307E\":1383,\"\u3061\u304C\":1979,\"\u3044\u3044\":1237,\"\u304A\u308A\":-2875,\"\u306E\u307F\":3096,\"\u53EF\u80FD\":402,\"\u3061\u3083\":-1016,\"\u3053\u3068\":899,\"\u305D\u3053\":647,\"\u3067\u3082\":1643,\"\u305D\u306E\":1844,\"\u306A\u3063\":-512,\"\u3068\u3044\":-1257,\"\u3042\u308B\":-339,\"\u3053\u306E\":1656,\"\u3068\u304D\":1917,\"\u305D\u3046\":-1050,\"\u624B\u306B\":1242,\"\u304B\u3089\":-1223,\"\u6301\u3063\":1098,\"\u3067\u304D\":980,\"\u304B\u3051\":2909,\"\u3068\u3066\":2245,\"\u306A\u308B\":481,\"\u306F\u3057\":3011,\"\u3061\u3087\":1986,\"\u3057\u3066\":278,\"\u3068\u304A\":678,\"\u3082\u3089\":2538,\"\u30E1\u30FC\":364,\"\u3053\u308D\":-190,\"\u305D\u3057\":-184,\"\u304B\u304B\":1752,\"\u3082\u3046\":2306,\"\u3069\u3093\":-397,\"\u30FB\u30FB\":-1499,\"\u3088\u308A\":-1463,\"\u3057\u307E\":-93,\"\u3068\u3082\":1038,\"\u3081\u3066\":-1778,\"\u3082\u3093\":1078,\"\u3044\u308D\":832,\"\u307E\u3041\":1442,\"\u3060\u3051\":-941,\"\u3057\u305F\":813,\"\u3055\u3093\":-1566,\"\u3046\u3061\":444,\"\u304D\u3063\":727,\"\u3088\u304F\":1082,\"\u3059\u3054\":897,\"\u4EE5\u4E0A\":-807,\"\u306A\u3044\":287,\"\u305F\u3081\":686,\"\u3053\u308C\":1075,\"\u3069\u3046\":296,\"\u306F\u307E\":1041,\"\u3059\u3002\":-152,\"\u3068\u3063\":917,\"\u6765\u305F\":408,\"\u3057\u3083\":1283,\"\u304B\u3063\":-802,\"\u305F\u3060\":1198,\"\u3057\u3044\":-519,\"\u3059\u3050\":1094,\"\u3082\u3068\":1264,\"\u3084\u3063\":422,\"\u304B\u3082\":-670,\"\u3081\u308B\":-1304,\"\u96FB\u8ECA\":121,\"\u307E\u3057\":-670,\"\u3044\u304B\":480,\"\u30D1\u30BD\":589,\"\u308F\u304B\":691,\"\u306A\u304F\":348,\"\u3044\u308B\":556,\"\u3068\u3053\":742,\"\u4E2D\u3067\":414,\"\u3055\u3044\":-672,\"\u307F\u305F\":-739,\"\u304B\u3064\":821,\"\u3044\u3066\":-372,\"\u306A\u304B\":198,\"\u306A\u3089\":-160,\"\u3060\u3044\":680,\"\u3042\u3063\":-93,\"\u3082\u3063\":626,\"\u307E\u305F\":-479,\"\u3044\u3084\":732,\"\u8003\u3048\":429,\"\u3046\u304B\":-268,\"\u3082\u3064\":666,\"\u307E\u3060\":296,\"\u304D\u307E\":-514,\"\u307E\u3067\":-677,\"\u304A\u8336\":627,\"\u3053\u305D\":-520,\"\u3068\u308A\":539,\"\u3044\u3089\":621,\"\u3067\u3059\":-239,\"\u307E\u308A\":-596,\"\u51FA\u6765\":-428,\"\u3064\u306A\":437,\"\u307B\u3057\":-350,\"\u305F\u3044\":-238,\"\u3053\u3053\":552,\"\u306F\u3044\":272,\"\u884C\u304D\":-218,\"\u697D\u3057\":128,\"\u3057\u3001\":-136,\"\u3081\u3063\":260,\"\u3093\u306F\":438,\"\u51FA\u3066\":128,\"\u3044\u307E\":85,\"\u3064\u3051\":251,\"\u307F\u304C\":-374,\"\u307E\u305A\":233,\"\u3060\u308D\":-357,\"\u30EB\u30FC\":249,\"\u304C\u3061\":-345,\"\u6599\u7406\":8,\"\u796D\u308A\":214,\"\u4F7F\u3063\":109,\"\u3068\u601D\":-161,\"\u307C\u304F\":329,\"\u30A4\u30F3\":203,\"\u9006\u306B\":246,\"\u3067\u3001\":119,\"\u3069\u3053\":46,\"\u305A\u3063\":121,\"\u3064\u3044\":62,\"\u307E\u305B\":-58,\"\u3042\u306E\":71,\"\u904E\u304E\":-95,\"\u59CB\u3081\":-28,\"\u307E\u3063\":-24,\"\u7A0B\u5EA6\":-24,\"\u66F8\u3044\":12},\"TW3\":{\"\u3068\u3044\u3046\":970,\"\u3082\u306A\u304F\":-1899,\"\u3068\u3053\u308D\":-1724,\"\u3068\u3057\u3066\":655,\"\u3001\u3042\u308B\":-2756,\"\u3066\u3044\u308B\":-1375,\"\u306F\u306A\u3044\":-473,\"\u306E\u307E\u307E\":-961,\"\u3059\u3053\u3068\":710,\"\u3066\u3057\u307E\":-1361,\"\u3089\u306A\u3044\":-1075,\"\u306F\u305D\u308C\":-1539,\"\u3066\u3044\u304F\":-289,\"\u3068\u3057\u305F\":-1169,\"\u3068\u8A00\u3063\":-1166,\"\u3066\u3044\u3046\":769,\"\u3067\u3042\u308B\":-749,\"\u3001\u306A\u3093\":-293,\"\u308B\u3053\u3068\":-49,\"\u3067\u3042\u3063\":-812,\"\u3068\u306A\u3063\":229,\"\u306A\u3093\u3067\":574,\"\u3044\u3068\u3053\":75,\"\u3082\u3044\u3044\":-408,\"\u3082\u3042\u308A\":-183,\"\u3067\u3042\u308A\":-535,\"\u3046\u3044\u3046\":-120,\"\u3070\u3044\u3044\":-137,\"\u306B\u3057\u3066\":-37,\"\u3066\u3044\u305F\":-66,\"\u308B\u3068\u304D\":108,\"\u3067\u3057\u305F\":-54,\"\u3046\u3053\u3068\":-4},\"TW4\":{\"\u3068\u3053\u308D\":2195,\"\u3088\u3046\u306B\":-1673,\"\u304F\u3089\u3044\":1598,\"\u3057\u305F\u3002\":-1569,\"\u3042\u308A\u307E\":-1767,\"\u304B\u306A\u308A\":2848,\"\u3067\u304D\u305F\":2069,\"\u307E\u3059\u3002\":-1366,\"\u3088\u3046\u306A\":-2232,\"\u3053\u3068\u304C\":-824,\"\u3044\u305F\u3002\":1066,\"\u3060\u304B\u3089\":1092,\"\u3046\u3069\u3093\":1258,\"\u305D\u3046\u3067\":-925,\"\u3053\u3068\u306B\":-856,\"\u3082\u3061\u308D\":1697,\"\u3057\u304B\u3057\":1383,\"\u3053\u3068\u3067\":380,\"\u306A\u3044\u3002\":191,\"\u3053\u3068\u3082\":-588,\"\u3042\u308A\u3001\":-595,\"\u3061\u306A\u307F\":1130,\"\u3060\u3063\u305F\":-1150,\"\u3059\u308B\u3068\":406,\"\u3053\u3068\u3002\":683,\"\u3067\u3082\u3001\":628,\"\u3044\u308D\u3044\":590,\"\u3044\u304B\u306A\":651,\"\u30E1\u30FC\u30EB\":256,\"\u3088\u3046\u3067\":-896,\"\u306A\u304B\u306A\":669,\"\u306A\u304F\u306A\":253,\"\u3057\u306A\u3044\":438,\"\u30BD\u30D5\u30C8\":512,\"\u3053\u3068\u3092\":255,\"\u308F\u3051\u3067\":-234,\"\u307E\u3063\u3066\":-824,\"\u306A\u3093\u3068\":481,\"\u3059\u3054\u3044\":314,\"\u3057\u3066\u304D\":278,\"\u3044\u3048\u3070\":397,\"\u3089\u3057\u3044\":424,\"\u3057\u304B\u3082\":494,\"\u3053\u3068\u306F\":-232,\"\u3042\u305F\u308A\":-390,\"\u98DF\u3079\u3066\":140,\"\u3057\u3066\u3082\":-174,\"\u3067\u304D\u307E\":52,\"\u306A\u3093\u304B\":116,\"\u306A\u3093\u3066\":-102,\"\u3044\u304F\u3089\":170,\"\u89B3\u5149\u5BA2\":-75,\"\u3044\u3044\u3068\":-63,\"\u3044\u308B\u3002\":37,\"\u3061\u3087\u3063\":20,\"\u305D\u3046\u3044\":16},\"TW2\":{\"\u6C17\u306B\u5165\":-4086,\"\u3067\u306F\u306A\":-1086,\"\u3068\u304C\u3042\":-1130,\"\u304B\u3082\u3057\":-463,\"\u3093\u3067\u3044\":-2306,\"\u305D\u3082\u305D\":-1441,\"\u3046\u306B\u306A\":-803,\"\u3057\u3066\u3044\":-406,\"\u3067\u3082\u3042\":-936,\"\u3063\u305F\u3053\":-267,\"\u3057\u304B\u306A\":440,\"\u3068\u3082\u3042\":-757,\"\u304B\u3089\u306A\":-477,\"\u3048\u308B\u3053\":-436,\"\u3067\u3082\u306A\":-207,\"\u3068\u306F\u3044\":-59,\"\u3048\u3066\u3044\":50,\"\u3057\u3066\u304A\":-37},\"TW1\":{\"\u3068\u3044\u3046\":545,\"\u3066\u3044\u304F\":1686,\"\u3088\u3046\u306A\":1298,\"\u30FB\u30FB\u30FB\":1104,\"\u6301\u3063\u3066\":-1851,\"\u3057\u304B\u3057\":2079,\"\u3066\u304F\u308C\":1444,\"\u306E\u307E\u307E\":1162,\"\u304B\u306A\u308A\":2083,\"\u3084\u306F\u308A\":1728,\"\u306A\u304C\u3089\":1223,\"\u3087\u3046\u3069\":1174,\"\u3082\u306A\u304F\":947,\"\u601D\u3063\u305F\":811,\"\u3068\u3093\u3069\":1250,\"\u3001\u305D\u308C\":412,\"\u306A\u3044\u3001\":-1039,\"\u306A\u3093\u3068\":-691,\"\u3092\u5229\u7528\":-1017,\"\u304C\u3063\u3066\":-418,\"\u3072\u3068\u3064\":732,\"\u3068\u601D\u3046\":251,\"\u307E\u3057\u305F\":-268,\"\u3067\u3042\u308B\":267,\"\u304B\u306A\u304B\":698,\"\u305D\u3057\u3066\":556,\"\u3063\u304B\u308A\":599,\"\u3002\u305F\u3060\":676,\"\u30EA\u30FC\u30B0\":309,\"\u304D\u306A\u3044\":141,\"\u306F\u305D\u306E\":-68,\"\u3061\u308D\u3093\":196,\"\u304F\u3055\u3093\":225,\"\u308B\u3053\u3068\":-271,\"\u3060\u3063\u3066\":164,\"\u306A\u3063\u3066\":-86,\"\u3059\u3054\u304F\":163,\"\u308D\u3044\u308D\":54,\"\u3002\u305D\u306E\":16,\"\u304F\u3089\u3044\":4}}", "/**\n * @license\n * Copyright 2021 Google LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Parses an html string and returns a parsed html document.\n * @param html An HTML string.\n * @return A Document.\n */\nexport const parseFromString = (html: string) => {\n  return new window.DOMParser().parseFromString(html, 'text/html');\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Base BudouX parser.\n */\nexport class Parser {\n  /** BudouX model data */\n  private readonly model: Map<string, Map<string, number>>;\n  private readonly baseScore: number;\n\n  /**\n   * Constructs a BudouX parser.\n   * @param model A model data.\n   */\n  constructor(model: {[key: string]: {[key: string]: number}}) {\n    this.model = new Map(\n      Object.entries(model).map(([k, v]) => [k, new Map(Object.entries(v))])\n    );\n    this.baseScore =\n      -0.5 *\n      [...this.model.values()]\n        .map(group => [...group.values()])\n        .flat()\n        .reduce((prev, curr) => prev + curr, 0);\n  }\n\n  /**\n   * Parses the input sentence and returns a list of semantic chunks.\n   *\n   * @param sentence An input sentence.\n   * @return The retrieved chunks.\n   */\n  parse(sentence: string): string[] {\n    if (sentence === '') return [];\n    const boundaries = this.parseBoundaries(sentence);\n    const result = [];\n    let start = 0;\n    for (const boundary of boundaries) {\n      result.push(sentence.slice(start, boundary));\n      start = boundary;\n    }\n    result.push(sentence.slice(start));\n    return result;\n  }\n\n  /**\n   * Parses the input sentence and returns a list of boundaries.\n   *\n   * @param sentence An input sentence.\n   * @return The list of boundaries.\n   */\n  parseBoundaries(sentence: string): number[] {\n    const result = [];\n\n    for (let i = 1; i < sentence.length; i++) {\n      let score = this.baseScore;\n      // NOTE: Score values in models may be negative.\n      /* eslint-disable */\n      score += this.model.get('UW1')?.get(sentence.substring(i - 3, i - 2)) || 0;\n      score += this.model.get('UW2')?.get(sentence.substring(i - 2, i - 1)) || 0;\n      score += this.model.get('UW3')?.get(sentence.substring(i - 1, i)) || 0;\n      score += this.model.get('UW4')?.get(sentence.substring(i, i + 1)) || 0;\n      score += this.model.get('UW5')?.get(sentence.substring(i + 1, i + 2)) || 0;\n      score += this.model.get('UW6')?.get(sentence.substring(i + 2, i + 3)) || 0;\n      score += this.model.get('BW1')?.get(sentence.substring(i - 2, i)) || 0;\n      score += this.model.get('BW2')?.get(sentence.substring(i - 1, i + 1)) || 0;\n      score += this.model.get('BW3')?.get(sentence.substring(i, i + 2)) || 0;\n      score += this.model.get('TW1')?.get(sentence.substring(i - 3, i)) || 0;\n      score += this.model.get('TW2')?.get(sentence.substring(i - 2, i + 1)) || 0;\n      score += this.model.get('TW3')?.get(sentence.substring(i - 1, i + 2)) || 0;\n      score += this.model.get('TW4')?.get(sentence.substring(i, i + 3)) || 0;\n      /* eslint-enable */\n      if (score > 0) result.push(i);\n    }\n    return result;\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {parseFromString} from './dom.js';\nimport {Parser} from './parser.js';\n\nconst assert = console.assert;\n\nconst ZWSP_CODEPOINT = 0x200b; // U+200B ZERO WIDTH SPACE\nconst ZWSP = String.fromCharCode(ZWSP_CODEPOINT);\n\n// We could use `Node.TEXT_NODE` and `Node.ELEMENT_NODE` in a browser context,\n// but we define the same here for Node.js environments.\nconst NodeType = {\n  ELEMENT_NODE: 1,\n  TEXT_NODE: 3,\n};\n\nconst DomAction = {\n  Inline: 0, // An inline content, becomes a part of a paragraph.\n  Block: 1, // A nested paragraph.\n  Skip: 2, // Skip the content. The content before and after are connected.\n  Break: 3, // A forced break. The content before and after become paragraphs.\n  NoBreak: 4, // The content provides context, but it's not breakable.\n  BreakOpportunity: 5, // Force a break opportunity.\n} as const;\ntype DomAction = (typeof DomAction)[keyof typeof DomAction];\n\n/**\n * Determines the action from an element name, as defined in\n * {@link https://html.spec.whatwg.org/multipage/rendering.html HTML Rendering}.\n * See also {@link actionForElement}.\n */\nconst domActions: {[name: string]: DomAction} = {\n  // Hidden elements\n  // https://html.spec.whatwg.org/multipage/rendering.html#hidden-elements\n  AREA: DomAction.Skip,\n  BASE: DomAction.Skip,\n  BASEFONT: DomAction.Skip,\n  DATALIST: DomAction.Skip,\n  HEAD: DomAction.Skip,\n  LINK: DomAction.Skip,\n  META: DomAction.Skip,\n  NOEMBED: DomAction.Skip,\n  NOFRAMES: DomAction.Skip,\n  PARAM: DomAction.Skip,\n  RP: DomAction.Skip,\n  SCRIPT: DomAction.Skip,\n  STYLE: DomAction.Skip,\n  TEMPLATE: DomAction.Skip,\n  TITLE: DomAction.Skip,\n  NOSCRIPT: DomAction.Skip,\n\n  // Flow content\n  // https://html.spec.whatwg.org/multipage/rendering.html#flow-content-3\n  HR: DomAction.Break,\n  // Disable if `white-space: pre`.\n  LISTING: DomAction.Skip,\n  PLAINTEXT: DomAction.Skip,\n  PRE: DomAction.Skip,\n  XMP: DomAction.Skip,\n\n  // Phrasing content\n  // https://html.spec.whatwg.org/multipage/rendering.html#phrasing-content-3\n  BR: DomAction.Break,\n  RT: DomAction.Skip,\n  WBR: DomAction.BreakOpportunity,\n\n  // Form controls\n  // https://html.spec.whatwg.org/multipage/rendering.html#form-controls\n  INPUT: DomAction.Skip,\n  SELECT: DomAction.Skip,\n  BUTTON: DomAction.Skip,\n  TEXTAREA: DomAction.Skip,\n\n  // Other elements where the phrase-based line breaking should be disabled.\n  // https://github.com/google/budoux/blob/main/budoux/skip_nodes.json\n  ABBR: DomAction.Skip,\n  CODE: DomAction.Skip,\n  IFRAME: DomAction.Skip,\n  TIME: DomAction.Skip,\n  VAR: DomAction.Skip,\n\n  // Deprecated, but supported in all browsers.\n  // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nobr\n  NOBR: DomAction.NoBreak,\n};\n\nconst defaultBlockElements = new Set([\n  // 15.3.2 The page\n  'HTML',\n  'BODY',\n  // 15.3.3 Flow content\n  'ADDRESS',\n  'BLOCKQUOTE',\n  'CENTER',\n  'DIALOG',\n  'DIV',\n  'FIGURE',\n  'FIGCAPTION',\n  'FOOTER',\n  'FORM',\n  'HEADER',\n  'LEGEND',\n  'LISTING',\n  'MAIN',\n  'P',\n  // 15.3.6 Sections and headings\n  'ARTICLE',\n  'ASIDE',\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n  'HGROUP',\n  'NAV',\n  'SECTION',\n  // 15.3.7 Lists\n  'DIR',\n  'DD',\n  'DL',\n  'DT',\n  'MENU',\n  'OL',\n  'UL',\n  'LI',\n  // 15.3.8 Tables\n  'TABLE',\n  'CAPTION',\n  'COL',\n  'TR',\n  'TD',\n  'TH',\n  // 15.3.12 The fieldset and legend elements\n  'FIELDSET',\n  // 15.5.4 The details and summary elements\n  'DETAILS',\n  'SUMMARY',\n  // 15.5.12 The marquee element\n  'MARQUEE',\n]);\n\n/**\n * Determine the action for a CSS `display` property value.\n * @param display The value of the CSS `display` property.\n * @return The {@link domActions} for the value.\n */\nfunction actionForDisplay(display: string): DomAction {\n  // Handle common cases first.\n  if (display === 'inline') return DomAction.Inline;\n  if (display === 'block') return DomAction.Block;\n\n  // Handle Ruby base as in-flow.\n  if (display.startsWith('ruby')) {\n    if (display === 'ruby-text') return DomAction.Skip;\n    return DomAction.Inline;\n  }\n\n  // Handle other values including multi-value syntax as blocks.\n  // https://drafts.csswg.org/css-display/#the-display-properties\n  return DomAction.Block;\n}\n\n/**\n * Determine the action for an element.\n * @param element An element to determine the action for.\n * @return The {@link domActions} for the element.\n */\nfunction actionForElement(element: Element): DomAction {\n  const nodeName = element.nodeName;\n  const action = domActions[nodeName];\n  if (action !== undefined) return action;\n\n  if (typeof globalThis.getComputedStyle === 'function') {\n    const style = globalThis.getComputedStyle(element);\n    switch (style.whiteSpace) {\n      case 'nowrap':\n      case 'pre':\n        return DomAction.NoBreak;\n    }\n\n    const display = style.display;\n    if (display) return actionForDisplay(display);\n    // `display` is an empty string if the element is not connected.\n  }\n\n  // Use the built-in rules if the `display` property is empty, or if\n  // `getComputedStyle` is missing (e.g., jsdom.)\n  return defaultBlockElements.has(nodeName)\n    ? DomAction.Block\n    : DomAction.Inline;\n}\n\n/**\n * Applies wrapping styles to make linebreak controls work in children.\n * @param element A parent element to apply the styles.\n */\nexport const applyWrapStyle = (element: HTMLElement) => {\n  element.style.wordBreak = 'keep-all';\n  element.style.overflowWrap = 'anywhere';\n};\n\n/**\n * Represents a node in {@link Paragraph}.\n *\n * It wraps a {@link Text} or a {@link string}.\n *\n * A {@link string} provides the context for the parser, but it can't be split.\n */\nclass NodeOrText {\n  nodeOrText: Text | string;\n  chunks: string[] = [];\n  hasBreakOpportunityAfter = false;\n\n  constructor(nodeOrText: Text | string) {\n    this.nodeOrText = nodeOrText;\n  }\n\n  private static isString(value: Text | string): value is string {\n    return typeof value === 'string';\n  }\n\n  get canSplit(): boolean {\n    return !NodeOrText.isString(this.nodeOrText);\n  }\n\n  get text(): string | null {\n    return NodeOrText.isString(this.nodeOrText)\n      ? this.nodeOrText\n      : this.nodeOrText.nodeValue;\n  }\n\n  get length(): number {\n    return this.text?.length ?? 0;\n  }\n\n  /**\n   * Split the {@link Text} in the same way as the {@link chunks}.\n   * Joining all {@link chunks} must be equal to {@link text}.\n   */\n  split(separator: string | Node) {\n    const chunks = this.chunks;\n    assert(chunks.length === 0 || chunks.join('') === this.text);\n    if (chunks.length <= 1) return;\n    if (NodeOrText.isString(this.nodeOrText)) return;\n    const node = this.nodeOrText;\n    if (typeof separator === 'string') {\n      // If the `separator` is a string, insert it at each boundary.\n      node.nodeValue = chunks.join(separator);\n      return;\n    }\n\n    // Otherwise create a `Text` node for each chunk, with the separator node\n    // between them, and replace the `node` with them.\n    const document = node.ownerDocument;\n    let nodes = [];\n    for (const chunk of chunks) {\n      if (chunk) nodes.push(document.createTextNode(chunk));\n      // Add a separator between chunks. To simplify the logic, add a separator\n      // after each chunk, then remove the last one.\n      // To avoid `cloneNode` for the temporary one that is going to be removed,\n      // add `null` as a marker, then replace them with `cloneNode` later.\n      nodes.push(null);\n    }\n    nodes.pop();\n    nodes = nodes.map(n => (n ? n : separator.cloneNode(true)));\n    node.replaceWith(...nodes);\n  }\n}\nexport class NodeOrTextForTesting extends NodeOrText {}\n\n/**\n * Represents a \"paragraph\", broken by block boundaries or forced breaks.\n *\n * A CSS\n * {@link https://drafts.csswg.org/css2/#inline-formatting inline formatting context}\n * is usually a \"paragraph\", but it can be broken into multiple paragraphs by\n * forced breaks such as `<br>`.\n */\nclass Paragraph {\n  element: HTMLElement;\n  nodes: NodeOrText[] = [];\n\n  constructor(element: HTMLElement) {\n    this.element = element;\n  }\n\n  isEmpty(): boolean {\n    return this.nodes.length === 0;\n  }\n  get text(): string {\n    return this.nodes.map(node => node.text).join('');\n  }\n\n  get lastNode(): NodeOrText | undefined {\n    return this.nodes.length ? this.nodes[this.nodes.length - 1] : undefined;\n  }\n  setHasBreakOpportunityAfter() {\n    const lastNode = this.lastNode;\n    if (lastNode) lastNode.hasBreakOpportunityAfter = true;\n  }\n\n  /**\n   * @return Indices of forced break opportunities in the source.\n   * They can be created by `<wbr>` tag or `&ZeroWidthSpace;`.\n   */\n  getForcedOpportunities(): number[] {\n    const opportunities: number[] = [];\n    let len = 0;\n    for (const node of this.nodes) {\n      if (node.canSplit) {\n        const text = node.text;\n        if (text) {\n          for (let i = 0; i < text.length; ++i) {\n            if (text.charCodeAt(i) === ZWSP_CODEPOINT) {\n              opportunities.push(len + i + 1);\n            }\n          }\n        }\n      }\n      len += node.length;\n      if (node.hasBreakOpportunityAfter) {\n        opportunities.push(len);\n      }\n    }\n    return opportunities;\n  }\n\n  /**\n   * @return Filtered {@param boundaries} by excluding\n   * {@link getForcedOpportunities} if it's not empty.\n   * Otherwise {@param boundaries}.\n   */\n  excludeForcedOpportunities(boundaries: number[]): number[] {\n    const forcedOpportunities = this.getForcedOpportunities();\n    if (!forcedOpportunities.length) return boundaries;\n    const set = new Set<number>(forcedOpportunities);\n    return boundaries.filter(i => !set.has(i));\n  }\n}\nexport class ParagraphForTesting extends Paragraph {}\n\n/**\n * Options for {@link HTMLProcessor}.\n */\nexport interface HTMLProcessorOptions {\n  /**\n   * This class name is added to the containing block when the BudouX is applied.\n   * The containing block should have following CSS properties to make it work.\n   * `{ word-break: keep-all; overflow-wrap: anywhere; }`\n   *\n   * When falsy, an inline style is set instead.\n   */\n  className?: string;\n  /**\n   * The separator to insert at each semantics boundary.\n   *\n   * When it's a {@link Node}, a clone of the {@link Node} will be inserted.\n   *\n   * The default value is U+200B ZERO WIDTH SPACE.\n   */\n  separator?: string | Node;\n}\n\n/**\n * Adds HTML processing support to a BudouX {@link Parser}.\n */\nexport class HTMLProcessor {\n  private parser_: Parser;\n  /** See {@link HTMLProcessorOptions.className}. */\n  className?: string;\n  /** See {@link HTMLProcessorOptions.separator}. */\n  separator: string | Node = ZWSP;\n\n  /**\n   * @param parser A BudouX {@link Parser} to compute semantic line breaks.\n   */\n  constructor(parser: Parser, options?: HTMLProcessorOptions) {\n    this.parser_ = parser;\n    if (options !== undefined) {\n      if (options.className !== undefined) this.className = options.className;\n      if (options.separator !== undefined) this.separator = options.separator;\n    }\n  }\n\n  /**\n   * Checks if the given element has a text node in its children.\n   *\n   * @param ele An element to be checked.\n   * @return Whether the element has a child text node.\n   */\n  static hasChildTextNode(ele: HTMLElement) {\n    for (const child of ele.childNodes) {\n      if (child.nodeType === NodeType.TEXT_NODE) return true;\n    }\n    return false;\n  }\n\n  /**\n   * Applies markups for semantic line breaks to the given HTML element.\n   *\n   * It breaks descendant nodes into paragraphs,\n   * and applies the BudouX to each paragraph.\n   * @param element The input element.\n   */\n  applyToElement(element: HTMLElement) {\n    for (const block of this.getBlocks(element)) {\n      assert(!block.isEmpty());\n      this.applyToParagraph(block);\n    }\n  }\n\n  /**\n   * Find paragraphs from a given HTML element.\n   * @param element The root element to find paragraphs.\n   * @param parent The parent {@link Paragraph} if any.\n   * @return A list of {@link Paragraph}s.\n   */\n  *getBlocks(\n    element: HTMLElement,\n    parent?: Paragraph\n  ): IterableIterator<Paragraph> {\n    assert(element.nodeType === NodeType.ELEMENT_NODE);\n\n    // Skip if it was once applied to this element.\n    if (this.className && element.classList.contains(this.className)) return;\n\n    const action = actionForElement(element);\n    if (action === DomAction.Skip) return;\n    if (action === DomAction.Break) {\n      if (parent && !parent.isEmpty()) {\n        parent.setHasBreakOpportunityAfter();\n        yield parent;\n        parent.nodes = [];\n      }\n      assert(!element.firstChild);\n      return;\n    }\n    if (action === DomAction.BreakOpportunity) {\n      if (parent) parent.setHasBreakOpportunityAfter();\n      return;\n    }\n\n    // Determine if this element creates a new inline formatting context, or if\n    // this element belongs to the parent inline formatting context.\n    assert(\n      action === DomAction.Block ||\n        action === DomAction.Inline ||\n        action === DomAction.NoBreak\n    );\n    const isNewBlock = !parent || action === DomAction.Block;\n    const block = isNewBlock ? new Paragraph(element) : parent;\n\n    // Collect all text nodes in this inline formatting context, while searching\n    // descendant elements recursively.\n    for (const child of element.childNodes) {\n      switch (child.nodeType) {\n        case NodeType.ELEMENT_NODE:\n          for (const childBlock of this.getBlocks(child as HTMLElement, block))\n            yield childBlock;\n          break;\n        case NodeType.TEXT_NODE:\n          if (action === DomAction.NoBreak) {\n            const text = child.nodeValue;\n            if (text) {\n              block.nodes.push(new NodeOrText(text));\n            }\n            break;\n          }\n          block.nodes.push(new NodeOrText(child as Text));\n          break;\n      }\n    }\n\n    // Apply if this is an inline formatting context.\n    if (isNewBlock && !block.isEmpty()) yield block;\n  }\n\n  /**\n   * Apply the BudouX to the given {@link Paragraph}.\n   * @param paragraph The {@link Paragraph} to apply.\n   */\n  applyToParagraph(paragraph: Paragraph): void {\n    assert(paragraph.nodes.length > 0);\n    if (!paragraph.nodes.some(node => node.canSplit)) return;\n    const text = paragraph.text;\n    // No changes if whitespace-only.\n    if (/^\\s*$/.test(text)) return;\n\n    // Compute the phrase boundaries.\n    const boundaries = this.parser_.parseBoundaries(text);\n    // No changes if single phrase.\n    if (boundaries.length <= 0) return;\n    // The boundaries should be between 1 and `text.length - 1` in the\n    // ascending order.\n    assert(boundaries[0] > 0);\n    assert(boundaries.every((x, i) => i === 0 || x > boundaries[i - 1]));\n    assert(boundaries[boundaries.length - 1] < text.length);\n\n    const adjustedBoundaries = paragraph.excludeForcedOpportunities(boundaries);\n\n    // Add a sentinel to help iterating.\n    adjustedBoundaries.push(text.length + 1);\n\n    this.splitNodes(paragraph.nodes, adjustedBoundaries);\n    this.applyBlockStyle(paragraph.element);\n  }\n\n  /**\n   * Split {@link NodeOrText} at the specified boundaries.\n   * @param nodes A list of {@link NodeOrText}.\n   * @param boundaries A list of indices of the text to split at.\n   */\n  splitNodes(nodes: NodeOrText[], boundaries: number[]): void {\n    assert(boundaries.length > 0);\n    assert(boundaries.every((x, i) => i === 0 || x > boundaries[i - 1]));\n    const textLen = nodes.reduce((sum, node) => sum + node.length, 0);\n    // The last boundary must be a sentinel.\n    assert(boundaries[boundaries.length - 1] > textLen);\n\n    // Distribute `boundaries` to `node.chunks`.\n    let boundary_index = 0;\n    let boundary = boundaries[0];\n    assert(boundary > 0);\n    let nodeStart = 0; // the start index of the `nodeText` in the whole text.\n    let lastNode: NodeOrText | null = null;\n    for (const node of nodes) {\n      assert(boundary >= nodeStart);\n      assert(node.chunks.length === 0);\n      const nodeText = node.text;\n      if (!nodeText) continue;\n      const nodeLength = nodeText.length;\n      const nodeEnd = nodeStart + nodeLength;\n      assert(!lastNode || lastNode.canSplit);\n      if (!node.canSplit) {\n        // If there's a boundary between nodes and `lastNode.canSplit`, add a\n        // boundary to the end of the `lastNode`.\n        if (lastNode && boundary === nodeStart) {\n          if (lastNode.chunks.length === 0)\n            lastNode.chunks.push(lastNode.text ?? '');\n          lastNode.chunks.push('');\n        }\n        while (boundary < nodeEnd) {\n          boundary = boundaries[++boundary_index];\n        }\n        lastNode = null;\n        nodeStart = nodeEnd;\n        continue;\n      }\n\n      // Check if the next boundary is in this `node`.\n      lastNode = node;\n      if (boundary >= nodeEnd) {\n        nodeStart = nodeEnd;\n        continue;\n      }\n\n      // Compute the boundary indices in the `node`.\n      const chunks = node.chunks;\n      let chunkStartInNode = 0;\n      while (boundary < nodeEnd) {\n        const boundaryInNode = boundary - nodeStart;\n        assert(boundaryInNode >= chunkStartInNode);\n        chunks.push(nodeText.slice(chunkStartInNode, boundaryInNode));\n        chunkStartInNode = boundaryInNode;\n        boundary = boundaries[++boundary_index];\n      }\n      // Add the rest of the `nodeText`.\n      assert(chunkStartInNode < nodeLength);\n      chunks.push(nodeText.slice(chunkStartInNode));\n\n      nodeStart = nodeEnd;\n    }\n    // Check if all nodes and boundaries are consumed.\n    assert(nodeStart === textLen);\n    assert(boundary_index < boundaries.length);\n    assert(boundaries[boundary_index] >= textLen);\n\n    // `node.chunks` are finalized. Split them.\n    for (const node of nodes) {\n      node.split(this.separator);\n    }\n  }\n\n  /**\n   * Applies the block style to the given element.\n   * @param element The element to apply the block style.\n   */\n  applyBlockStyle(element: HTMLElement): void {\n    if (this.className) {\n      element.classList.add(this.className);\n      return;\n    }\n    applyWrapStyle(element);\n  }\n}\n\n/**\n * BudouX {@link Parser} with HTML processing support.\n */\nexport class HTMLProcessingParser extends Parser {\n  htmlProcessor: HTMLProcessor;\n\n  constructor(\n    model: {[key: string]: {[key: string]: number}},\n    htmlProcessorOptions: HTMLProcessorOptions = {\n      separator: ZWSP,\n    }\n  ) {\n    super(model);\n    this.htmlProcessor = new HTMLProcessor(this, htmlProcessorOptions);\n  }\n\n  /**\n   * Applies markups for semantic line breaks to the given HTML element.\n   * @param parentElement The input element.\n   */\n  applyToElement(parentElement: HTMLElement) {\n    this.htmlProcessor.applyToElement(parentElement);\n  }\n\n  /**\n   * Translates the given HTML string to another HTML string with markups\n   * for semantic line breaks.\n   * @param html An input html string.\n   * @return The translated HTML string.\n   */\n  translateHTMLString(html: string) {\n    if (html === '') return html;\n    const doc = parseFromString(html);\n    if (HTMLProcessor.hasChildTextNode(doc.body)) {\n      const wrapper = doc.createElement('span') as unknown as HTMLElement;\n      wrapper.append(...doc.body.childNodes);\n      doc.body.append(wrapper);\n    }\n    this.applyToElement(doc.body.childNodes[0] as HTMLElement);\n    return doc.body.innerHTML;\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {model as jaModel} from './data/models/ja.js';\nimport {model as zhHansModel} from './data/models/zh-hans.js';\nimport {model as zhHantModel} from './data/models/zh-hant.js';\nimport {model as thModel} from './data/models/th.js';\nimport {HTMLProcessingParser} from './html_processor.js';\n\nexport {Parser} from './parser.js';\nexport {HTMLProcessor, HTMLProcessingParser} from './html_processor.js';\nexport {jaModel, zhHansModel, zhHantModel};\n\n/**\n * Loads a parser equipped with the default Japanese model.\n * @return A parser with the default Japanese model.\n */\nexport const loadDefaultJapaneseParser = () => {\n  return new HTMLProcessingParser(jaModel);\n};\n\n/**\n * Loads a parser equipped with the default Simplified Chinese model.\n * @return A parser with the default Simplified Chinese model.\n */\nexport const loadDefaultSimplifiedChineseParser = () => {\n  return new HTMLProcessingParser(zhHansModel);\n};\n\n/**\n * Loads a parser equipped with the default Traditional Chinese model.\n * @return A parser with the default Traditional Chinese model.\n */\nexport const loadDefaultTraditionalChineseParser = () => {\n  return new HTMLProcessingParser(zhHantModel);\n};\n\n/**\n * Loads a parser equipped with the default Thai model.\n * @returns A parser with the default Thai model.\n */\nexport const loadDefaultThaiParser = () => {\n  return new HTMLProcessingParser(thModel);\n};\n/**\n * Loads available default parsers.\n * @return A map between available lang codes and their default parsers.\n */\nexport const loadDefaultParsers = () => {\n  return new Map([\n    ['ja', loadDefaultJapaneseParser()],\n    ['zh-hans', loadDefaultSimplifiedChineseParser()],\n    ['zh-hant', loadDefaultTraditionalChineseParser()],\n    ['th', loadDefaultThaiParser()],\n  ]);\n};\n", "/**\n * @license\n * Copyright 2025 Google LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Sets an innerHTML on a given Element.\n * @param element An Element.\n * @param html An HTML string to set.\n */\nexport const setInnerHtml = (element: Element, html: string) => {\n  element.innerHTML = html;\n};\n\n/**\n * Creates an HTML document.\n * @returns Document\n */\nexport const createDocument = () => {\n  return window.document;\n};\n\n/**\n * Whether the running environment is a Web browser.\n */\nexport const isBrowser = true;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {loadDefaultJapaneseParser} from '../index.js';\nimport {\n  HTMLProcessingParser,\n  HTMLProcessor,\n  HTMLProcessorOptions,\n  NodeOrTextForTesting,\n  ParagraphForTesting,\n} from '../html_processor.js';\nimport {parseFromString} from '../dom.js';\nimport {setInnerHtml, createDocument, isBrowser} from './testutils.js';\n\nconst parser = loadDefaultJapaneseParser();\n\nclass MockHTMLProcessorBase extends HTMLProcessor {\n  constructor(options?: HTMLProcessorOptions) {\n    super(parser, options);\n  }\n}\n\nfunction isEqualNodeWithStyleNormalized(a: HTMLElement, b: HTMLElement) {\n  if (a.nodeType !== b.nodeType) return false;\n  if (a.nodeType === 3) {\n    // is a text node\n    return a.nodeValue === b.nodeValue;\n  }\n  if (a.nodeName !== b.nodeName) return false;\n  if (a.attributes.length !== b.attributes.length) return false;\n  for (let i = 0; i < a.attributes.length; i++) {\n    const attribName = a.attributes[i].name;\n    const aAttribValue = a.getAttribute(attribName);\n    const bAttribValue = b.getAttribute(attribName);\n    if (attribName === 'style') {\n      const aNormalizedStyle = aAttribValue\n        ?.replace(/\\s+/g, '')\n        .replace(/;$/, '');\n      const bNormalizedStyle = bAttribValue\n        ?.replace(/\\s+/g, '')\n        .replace(/;$/, '');\n      if (aNormalizedStyle !== bNormalizedStyle) return false;\n    } else {\n      if (aAttribValue !== bAttribValue) return false;\n    }\n  }\n  if (a.childNodes.length !== b.childNodes.length) return false;\n  for (let i = 0; i < a.childNodes.length; i++) {\n    if (\n      !isEqualNodeWithStyleNormalized(\n        a.childNodes[i] as HTMLElement,\n        b.childNodes[i] as HTMLElement\n      )\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getBlocks(html: string): IterableIterator<ParagraphForTesting> {\n  const document = createDocument();\n  setInnerHtml(document.body, html);\n  const processor = new MockHTMLProcessorBase();\n  return processor.getBlocks(document.body);\n}\n\ndescribe('HTMLProcessor.applyToElement', () => {\n  const document = createDocument();\n  const wbr = document.createElement('wbr');\n  function apply(html: string, separator: string | Node) {\n    setInnerHtml(document.body, html);\n    const processor = new MockHTMLProcessorBase({\n      separator: separator,\n      className: 'applied',\n    });\n    processor.applyToElement(document.body);\n    return document.body.innerHTML;\n  }\n\n  for (const test of [\n    {\n      in: '<div>\u6674\u308C</div>',\n      out: '<div>\u6674\u308C</div>',\n      browserOnly: false,\n    },\n    {\n      in: '<div>\u4ECA\u65E5\u306F\u6674\u308C\u3067\u3059</div>',\n      out: '<div class=\"applied\">\u4ECA\u65E5\u306F|\u6674\u308C\u3067\u3059</div>',\n      browserOnly: false,\n    },\n    {\n      in: '<div><span>\u4ECA\u65E5\u306F</span>\u6674\u308C\u3067\u3059</div>',\n      out: '<div class=\"applied\"><span>\u4ECA\u65E5\u306F</span>|\u6674\u308C\u3067\u3059</div>',\n      browserOnly: false,\n    },\n    {\n      in: '<div><span>\u4ECA\u65E5\u306F\u6674\u308C</span>\u3067\u3059</div>',\n      out: '<div class=\"applied\"><span>\u4ECA\u65E5\u306F|\u6674\u308C</span>\u3067\u3059</div>',\n      browserOnly: false,\n    },\n    {\n      in: '<code>\u4ECA\u65E5\u306F\u6674\u308C\u3067\u3059</code>',\n      out: '<code>\u4ECA\u65E5\u306F\u6674\u308C\u3067\u3059</code>',\n      browserOnly: false,\n    },\n    {\n      in: '<div>\u4ECA\u65E5\u306F<code>code</code>\u6674\u308C\u3067\u3059</div>',\n      out: '<div class=\"applied\">\u4ECA\u65E5\u306F<code>code</code>|\u6674\u308C\u3067\u3059</div>',\n      browserOnly: false,\n    },\n    {\n      in: '<div>\u4ECA\u65E5\u306F\u6674\u308C\u3001\u4ECA\u65E5\u306F\u6674\u308C</div>',\n      out: '<div class=\"applied\">\u4ECA\u65E5\u306F|\u6674\u308C\u3001|\u4ECA\u65E5\u306F|\u6674\u308C</div>',\n      browserOnly: false,\n    },\n    {\n      in: '<div>\u4ECA\u65E5\u306F<nobr>\u6674\u308C\u3001\u4ECA\u65E5\u306F</nobr>\u6674\u308C</div>',\n      out: '<div class=\"applied\">\u4ECA\u65E5\u306F|<nobr>\u6674\u308C\u3001\u4ECA\u65E5\u306F</nobr>|\u6674\u308C</div>',\n      browserOnly: true,\n    },\n    {\n      in: '<div>\u4ECA\u65E5\u306F<span style=\"white-space: nowrap\">\u6674\u308C\u3001\u4ECA\u65E5\u306F</span>\u6674\u308C</div>',\n      out: '<div class=\"applied\">\u4ECA\u65E5\u306F|<span style=\"white-space: nowrap\">\u6674\u308C\u3001\u4ECA\u65E5\u306F</span>|\u6674\u308C</div>',\n      browserOnly: true,\n    },\n  ]) {\n    // Test when the separator is an `Element`.\n    it(test.in, () => {\n      const out = test.out.replace(/\\|/g, '<wbr>');\n      if (test.browserOnly && !isBrowser) return;\n      const result = apply(test.in, wbr);\n      const isEqual = isEqualNodeWithStyleNormalized(\n        parseFromString(result).body,\n        parseFromString(out).body\n      );\n      if (!isEqual) {\n        console.log('actual:', result);\n        console.log('expected:', out);\n      }\n      expect(isEqual).toBeTrue();\n    });\n    // Test when the separator is a `string`.\n    it(test.in, () => {\n      const out = test.out.replace(/\\|/g, '/');\n      if (test.browserOnly && !isBrowser) return;\n      const result = apply(test.in, '/');\n      const isEqual = isEqualNodeWithStyleNormalized(\n        parseFromString(result).body,\n        parseFromString(out).body\n      );\n      if (!isEqual) {\n        console.log('actual:', result);\n        console.log('expected:', out);\n      }\n      expect(isEqual).toBeTrue();\n    });\n  }\n});\n\ndescribe('HTMLProcessor.applyToElement.separator.node', () => {\n  it('should clone separator element deeply', () => {\n    const doc = createDocument();\n    setInnerHtml(doc.body, '<div>\u4ECA\u65E5\u306F\u826F\u3044\u5929\u6C17\u3067\u3059</div>');\n    const separator = doc.createElement('span');\n    separator.style.whiteSpace = 'normal';\n    separator.textContent = '\\u200B';\n    const processor = new MockHTMLProcessorBase({\n      separator: separator,\n      className: 'applied',\n    });\n    processor.applyToElement(doc.body);\n    const expected =\n      '<div class=\"applied\">\u4ECA\u65E5\u306F' +\n      '<span style=\"white-space: normal;\">\\u200B</span>\u826F\u3044' +\n      '<span style=\"white-space: normal;\">\\u200B</span>\u5929\u6C17\u3067\u3059</div>';\n    const isEqual = isEqualNodeWithStyleNormalized(\n      doc.body,\n      parseFromString(expected).body\n    );\n    if (!isEqual) {\n      console.log('actual:', doc.body.innerHTML);\n      console.log('expected:', expected);\n    }\n    expect(isEqual).toBeTrue();\n  });\n});\n\ndescribe('HTMLProcessor.getBlocks', () => {\n  function getText(html: string): string[] {\n    const blocks = getBlocks(html);\n    return Array.from(\n      (function* (blocks) {\n        for (const block of blocks) yield block.text;\n      })(blocks)\n    );\n  }\n\n  it('should collect all text of a simple block', () => {\n    expect(getText('<div>123</div>')).toEqual(['123']);\n  });\n\n  it('should collect two blocks separately', () => {\n    expect(getText('<div>123</div><div>456</div>')).toEqual(['123', '456']);\n  });\n\n  it('should break at <br> elements', () => {\n    expect(getText('<div>123<br>456</div>')).toEqual(['123', '456']);\n  });\n\n  it('should break at <br> elements inside a span', () => {\n    expect(getText('<div>1<span>23<br>45</span>6</div>')).toEqual([\n      '123',\n      '456',\n    ]);\n  });\n\n  it('should collect inline boxes as part of the block', () => {\n    expect(getText('<div>123<span>456</span>789</div>')).toEqual(['123456789']);\n  });\n\n  it('should collect nested blocks separately from the parent block', () => {\n    expect(getText('<div>123<div>456</div>789</div>')).toEqual([\n      '456',\n      '123789',\n    ]);\n  });\n\n  it('should collect inline-blocks separately from the parent block', () => {\n    expect(\n      getText('<div>123<div style=\"display: inline-block\">456</div>789</div>')\n    ).toEqual(['456', '123789']);\n    if (isBrowser) {\n      expect(\n        getText(\n          '<div>123<span style=\"display: inline-block\">456</span>789</div>'\n        )\n      ).toEqual(['456', '123789']);\n    }\n  });\n\n  it('should skip textarea elements', () => {\n    expect(getText('<textarea>123</textarea>')).toEqual([]);\n  });\n\n  it('should skip <rt> and <rp> elements for <ruby>', () => {\n    expect(\n      getText('before<ruby>b1<rp>(</rp><rt>r1</rt>b2<rt>r2</rt></ruby>after')\n    ).toEqual(['beforeb1b2after']);\n  });\n\n  it('should use the built-in rules if the `display` property is empty', () => {\n    expect(getText('<div>123<span>456</span></div>')).toEqual(['123456']);\n    expect(getText('<div>123<div>456</div></div>')).toEqual(['456', '123']);\n    expect(getText('<div><h1>123</h1><li>456</li></div>')).toEqual([\n      '123',\n      '456',\n    ]);\n  });\n});\n\ndescribe('HTMLProcessor.forcedOpportunities', () => {\n  function forcedOpportunities(html: string) {\n    const blocks = getBlocks(html);\n    return Array.from(\n      (function* (blocks) {\n        for (const block of blocks) {\n          yield {\n            indices: block.getForcedOpportunities(),\n            after: block.nodes.map(block => block.hasBreakOpportunityAfter),\n          };\n        }\n      })(blocks)\n    );\n  }\n\n  it('<wbr> should set has_break_opportunity_after', () => {\n    expect(forcedOpportunities('123<wbr>456')).toEqual([\n      {indices: [3], after: [true, false]},\n    ]);\n  });\n  it('Nested <wbr> should set has_break_opportunity_after', () => {\n    expect(forcedOpportunities('123<span><wbr></span>456')).toEqual([\n      {indices: [3], after: [true, false]},\n    ]);\n  });\n  it('ZWSP should be in forcedOpportunities', () => {\n    expect(forcedOpportunities('123<span>\\u200B456</span>')).toEqual([\n      {indices: [4], after: [false, false]},\n    ]);\n  });\n});\n\ndescribe('HTMLProcessor.splitNodes', () => {\n  class MockNode extends NodeOrTextForTesting {\n    constructor(text: string) {\n      super(text);\n    }\n\n    clear() {\n      this.chunks = [];\n    }\n\n    override get canSplit(): boolean {\n      return true;\n    }\n\n    override split() {}\n  }\n  const node123 = new MockNode('123');\n  const node456 = new MockNode('456');\n\n  function split(nodes: MockNode[], boundaries: number[]): string[][] {\n    for (const node of nodes) {\n      node.clear();\n    }\n    const processor = new MockHTMLProcessorBase();\n    processor.splitNodes(nodes, boundaries);\n    const result = nodes.map(node => node.chunks);\n    return result;\n  }\n\n  it('should not split nodes', () => {\n    expect(split([node123], [4])).toEqual([[]]);\n  });\n\n  it('should not split single node at the end', () => {\n    expect(split([node123], [3, 4])).toEqual([[]]);\n  });\n\n  it('should not split two nodes at the end', () => {\n    expect(split([node123, node456], [6, 7])).toEqual([[], []]);\n  });\n\n  it('should split single node at the middle', () => {\n    expect(split([node123], [2, 4])).toEqual([['12', '3']]);\n  });\n\n  it('should split the first node twice', () => {\n    expect(split([node123], [1, 2, 4])).toEqual([['1', '2', '3']]);\n  });\n\n  it('should split the first node at the middle', () => {\n    expect(split([node123, node456], [2, 7])).toEqual([['12', '3'], []]);\n  });\n\n  it('should split the first node twice', () => {\n    expect(split([node123, node456], [1, 2, 7])).toEqual([['1', '2', '3'], []]);\n  });\n\n  it('should split the second node at the start', () => {\n    expect(split([node123, node456], [3, 7])).toEqual([[], ['', '456']]);\n  });\n\n  it('should split the second node at the middle', () => {\n    expect(split([node123, node456], [5, 7])).toEqual([[], ['45', '6']]);\n  });\n\n  it('should split the second node twice', () => {\n    expect(split([node123, node456], [4, 5, 7])).toEqual([[], ['4', '5', '6']]);\n  });\n\n  it('should split both nodes at the middle', () => {\n    expect(split([node123, node456], [2, 5, 7])).toEqual([\n      ['12', '3'],\n      ['45', '6'],\n    ]);\n  });\n\n  it('should split both nodes twice', () => {\n    expect(split([node123, node456], [1, 2, 4, 5, 7])).toEqual([\n      ['1', '2', '3'],\n      ['4', '5', '6'],\n    ]);\n  });\n\n  it('should split at every character', () => {\n    expect(split([node123, node456], [1, 2, 3, 4, 5, 7])).toEqual([\n      ['1', '2', '3'],\n      ['', '4', '5', '6'],\n    ]);\n  });\n});\n\ndescribe('HTMLProcessingParser.applyToElement', () => {\n  const checkEqual = (\n    model: {[key: string]: {[key: string]: number}},\n    inputHTML: string,\n    expectedHTML: string\n  ) => {\n    const inputDOM = parseFromString(inputHTML);\n    const inputDocument = inputDOM.querySelector('p') as unknown as HTMLElement;\n    const parser = new HTMLProcessingParser(model);\n    parser.applyToElement(inputDocument);\n    const expectedDocument = parseFromString(expectedHTML);\n    const expectedElement = expectedDocument.querySelector(\n      'p'\n    ) as unknown as HTMLElement;\n    const isEqual = isEqualNodeWithStyleNormalized(\n      inputDocument,\n      expectedElement\n    );\n    if (!isEqual) {\n      console.log('actual:', inputDocument.outerHTML);\n      console.log('expected:', expectedElement.outerHTML);\n    }\n    expect(isEqual).toBeTrue();\n  };\n  const style = 'word-break: keep-all; overflow-wrap: anywhere;';\n\n  it('should insert ZWSPs where the sentence should break.', () => {\n    const inputHTML = '<p>xyzabcabc</p>';\n    const expectedHTML = `<p style=\"${style}\">xyz\\u200Babc\\u200Babc</p>`;\n    const model = {\n      UW4: {a: 1001}, // means \"should separate right before 'a'\".\n    };\n    checkEqual(model, inputHTML, expectedHTML);\n  });\n\n  it('should insert ZWSPs even it overlaps with other HTML tags.', () => {\n    const inputHTML = '<p>xy<a href=\"#\">zabca</a>bc</p>';\n    const expectedHTML = `<p style=\"${style}\">xy<a href=\"#\">z\\u200Babc\\u200Ba</a>bc</p>`;\n    const model = {\n      UW4: {a: 1001}, // means \"should separate right before 'a'\".\n    };\n    checkEqual(model, inputHTML, expectedHTML);\n  });\n\n  it('should not insert ZWSPs to where input has WBR tags already.', () => {\n    const inputHTML = '<p>xyz<wbr>abcabc</p>';\n    const expectedHTML = `<p style=\"${style}\">xyz<wbr>abc\\u200Babc</p>`;\n    const model = {\n      UW4: {a: 1001}, // means \"should separate right before 'a'\".\n    };\n    checkEqual(model, inputHTML, expectedHTML);\n  });\n  it('should not insert ZWSPs to where input has ZWSPs.', () => {\n    const inputHTML = '<p>xyz\\u200Babcabc</p>';\n    const expectedHTML = `<p style=\"${style}\">xyz\\u200babc\\u200Babc</p>`;\n    const model = {\n      UW4: {a: 1001}, // means \"should separate right before 'a'\".\n    };\n    checkEqual(model, inputHTML, expectedHTML);\n  });\n});\n\ndescribe('HTMLProcessingParser.translateHTMLString', () => {\n  const defaultModel = {\n    UW4: {a: 1001}, // means \"should separate right before 'a'\".\n  };\n  const checkEqual = (\n    model: {[key: string]: {[key: string]: number}},\n    inputHTML: string,\n    expectedHTML: string\n  ) => {\n    const parser = new HTMLProcessingParser(model);\n    const result = parser.translateHTMLString(inputHTML);\n    const resultDocument = parseFromString(result);\n    const expectedDocument = parseFromString(expectedHTML);\n    const isEqual = isEqualNodeWithStyleNormalized(\n      resultDocument.body,\n      expectedDocument.body\n    );\n    if (!isEqual) {\n      console.log('actual', result);\n      console.log('expected', expectedHTML);\n    }\n    expect(isEqual).toBeTrue();\n  };\n\n  it('should output a html string with a SPAN parent with proper style attributes.', () => {\n    const inputHTML = 'xyzabcd';\n    const expectedHTML = `<span\n    style=\"word-break: keep-all; overflow-wrap: anywhere;\">xyz\\u200Babcd</span>`;\n    checkEqual(defaultModel, inputHTML, expectedHTML);\n  });\n\n  it('should not add a SPAN parent if the input already has one single parent.', () => {\n    const inputHTML = '<p class=\"foo\" style=\"color: red\">xyzabcd</p>';\n    const expectedHTML = `<p class=\"foo\"\n       style=\"color: red; word-break: keep-all; overflow-wrap: anywhere;\"\n    >xyz\\u200Babcd</p>`;\n    checkEqual(defaultModel, inputHTML, expectedHTML);\n  });\n\n  it('should return a blank string if the input is blank.', () => {\n    const inputHTML = '';\n    const expectedHTML = '';\n    checkEqual({}, inputHTML, expectedHTML);\n  });\n\n  it('should pass script tags as-is.', () => {\n    const inputHTML = 'xyz<script>alert(1);</script>xyzabc';\n    const expectedHTML = `<span\n    style=\"word-break: keep-all; overflow-wrap: anywhere;\"\n    >xyz<script>alert(1);</script>xyz\\u200Babc</span>`;\n    checkEqual(defaultModel, inputHTML, expectedHTML);\n  });\n\n  it('should skip some specific tags.', () => {\n    const inputHTML = 'xyz<code>abc</code>abc';\n    const expectedHTML = `<span\n    style=\"word-break: keep-all; overflow-wrap: anywhere;\"\n    >xyz<code>abc</code>\\u200Babc</span>`;\n    checkEqual(defaultModel, inputHTML, expectedHTML);\n  });\n\n  it('should not ruin attributes of child elements.', () => {\n    const inputHTML = 'xyza<a href=\"#\" hidden>bc</a>abc';\n    const expectedHTML = `<span\n    style=\"word-break: keep-all; overflow-wrap: anywhere;\"\n    >xyz\\u200Ba<a href=\"#\" hidden>bc</a>\\u200Babc</span>`;\n    checkEqual(defaultModel, inputHTML, expectedHTML);\n  });\n\n  it('should work with emojis.', () => {\n    const inputHTML = 'xyza\uD83C\uDDEF\uD83C\uDDF5\uD83C\uDDF5\uD83C\uDDF9abc';\n    const expectedHTML = `<span\n    style=\"word-break: keep-all; overflow-wrap: anywhere;\"\n    >xyz\\u200Ba\uD83C\uDDEF\uD83C\uDDF5\uD83C\uDDF5\uD83C\uDDF9\\u200Babc</span>`;\n    checkEqual(defaultModel, inputHTML, expectedHTML);\n  });\n});\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Parser} from '../parser.js';\n\ndescribe('Parser.parse', () => {\n  const TEST_SENTENCE = 'abcdeabcd';\n\n  it('should separate if a strong feature item supports.', () => {\n    const model = {\n      UW4: {a: 10000}, // means \"should separate right before 'a'\".\n    };\n    const parser = new Parser(model);\n    const result = parser.parse(TEST_SENTENCE);\n    expect(result).toEqual(['abcde', 'abcd']);\n  });\n\n  it('should separate even if it makes a phrase of one character.', () => {\n    const model = {\n      UW4: {b: 10000}, // means \"should separate right before 'b'\".\n    };\n    const parser = new Parser(model);\n    const result = parser.parse(TEST_SENTENCE);\n    expect(result).toEqual(['a', 'bcdea', 'bcd']);\n  });\n\n  it('should return an empty list when the input is a blank string.', () => {\n    const parser = new Parser({});\n    const result = parser.parse('');\n    expect(result).toEqual([]);\n  });\n});\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {applyWrapStyle, type HTMLProcessingParser} from '../html_processor.js';\n\nconst MUTATION_OBSERVER_OPTIONS = {\n  attributes: false,\n  characterData: true,\n  childList: true,\n  subtree: true,\n};\n\n/**\n * Base BudouX Web component.\n */\nexport abstract class BudouXBaseElement extends HTMLElement {\n  abstract parser: HTMLProcessingParser;\n  observer: MutationObserver;\n\n  /**\n   * Base BudouX Web component constructor.\n   */\n  constructor() {\n    super();\n\n    this.observer = new MutationObserver(this.sync.bind(this));\n    this.observer.observe(this, MUTATION_OBSERVER_OPTIONS);\n  }\n\n  connectedCallback() {\n    applyWrapStyle(this);\n    this.sync();\n  }\n\n  attributeChangedCallback() {\n    this.sync();\n  }\n\n  sync() {\n    this.observer.disconnect();\n    this.parser.applyToElement(this);\n    this.observer.observe(this, MUTATION_OBSERVER_OPTIONS);\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  type HTMLProcessingParser,\n  loadDefaultJapaneseParser,\n} from '../index.js';\nimport {BudouXBaseElement} from './budoux-base.js';\n\n/**\n * BudouX Japanese Web component.\n */\nexport class BudouXJapaneseElement extends BudouXBaseElement {\n  parser: HTMLProcessingParser;\n\n  /**\n   * BudouX Japanese Web component constructor.\n   */\n  constructor() {\n    super();\n    this.parser = loadDefaultJapaneseParser();\n  }\n}\n\ncustomElements.define('budoux-ja', BudouXJapaneseElement);\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport '../webcomponents/budoux-ja.js';\n\ndescribe('Web Components', () => {\n  beforeAll(async () => {\n    await window.customElements.whenDefined('budoux-ja');\n  });\n\n  beforeEach(() => {\n    window.document.body.innerText = '';\n  });\n\n  it('should process the provided text.', () => {\n    const budouxElement = window.document.createElement('budoux-ja');\n    budouxElement.textContent = '\u4ECA\u65E5\u306F\u826F\u3044\u5929\u6C17\u3067\u3059\u3002';\n    window.document.body.appendChild(budouxElement);\n\n    expect(budouxElement.innerHTML).toBe('\u4ECA\u65E5\u306F\\u200B\u826F\u3044\\u200B\u5929\u6C17\u3067\u3059\u3002');\n  });\n\n  it('should react to text content changes after attached.', resolve => {\n    const budouxElement = window.document.createElement('budoux-ja');\n    budouxElement.textContent = '\u4ECA\u65E5\u306F\u826F\u3044\u5929\u6C17\u3067\u3059\u3002';\n    window.document.body.appendChild(budouxElement);\n\n    const observer = new window.MutationObserver(() => {\n      expect(budouxElement.innerHTML).toBe('\u660E\u65E5\u306F\\u200B\u6674\u308C\u308B\u304B\u306A\uFF1F');\n      resolve();\n    });\n    observer.observe(budouxElement, {\n      childList: true,\n    });\n    budouxElement.textContent = '\u660E\u65E5\u306F\u6674\u308C\u308B\u304B\u306A\uFF1F';\n  });\n\n  it('should work with HTML inputs.', () => {\n    const budouxElement = window.document.createElement('budoux-ja');\n    budouxElement.appendChild(window.document.createTextNode('\u6628\u65E5\u306F'));\n    const b = window.document.createElement('b');\n    b.textContent = '\u96E8';\n    budouxElement.appendChild(b);\n    budouxElement.appendChild(window.document.createTextNode('\u3067\u3057\u305F\u3002'));\n    window.document.body.appendChild(budouxElement);\n    expect(budouxElement.innerHTML).toBe('\u6628\u65E5\u306F<b>\\u200B\u96E8</b>\u3067\u3057\u305F\u3002');\n  });\n\n  it('should have wrapping styles to control line breaks.', () => {\n    const budouxElement = window.document.createElement('budoux-ja');\n    budouxElement.textContent = 'Hello world';\n    window.document.body.appendChild(budouxElement);\n    const styles = budouxElement.computedStyleMap();\n    expect(styles.get('word-break')?.toString()).toBe('keep-all');\n    expect(styles.get('overflow-wrap')?.toString()).toBe('anywhere');\n  });\n});\n"],
  "mappings": ";;;AAAO,MAAM,QAAgD,EAAC,OAAM,EAAC,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,OAAM,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,OAAM,UAAI,MAAK,UAAI,OAAM,UAAI,MAAK,UAAI,OAAM,UAAI,KAAI,UAAI,OAAM,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,OAAM,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,OAAM,UAAI,OAAM,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,OAAM,UAAI,MAAK,UAAI,OAAM,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,OAAM,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,KAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,IAAG,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,IAAG,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,IAAG,UAAI,IAAG,UAAI,KAAI,UAAI,KAAI,UAAI,IAAG,UAAI,IAAG,UAAI,IAAG,GAAE,OAAM,EAAC,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,KAAI,UAAI,OAAM,UAAI,OAAM,UAAI,KAAI,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,KAAI,UAAI,OAAM,UAAI,MAAK,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,OAAM,UAAI,MAAK,UAAI,KAAI,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,OAAM,UAAI,MAAK,UAAI,KAAI,UAAI,OAAM,UAAI,OAAM,UAAI,KAAI,UAAI,MAAK,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,KAAI,UAAI,MAAK,UAAI,OAAM,UAAI,KAAI,UAAI,MAAK,UAAI,OAAM,UAAI,KAAI,UAAI,KAAI,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,MAAK,UAAI,MAAK,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,MAAK,UAAI,MAAK,UAAI,OAAM,UAAI,KAAI,UAAI,KAAI,UAAI,OAAM,UAAI,MAAK,UAAI,MAAK,UAAI,OAAM,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,OAAM,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,OAAM,UAAI,KAAI,UAAI,OAAM,UAAI,OAAM,UAAI,IAAG,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,OAAM,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,OAAM,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,OAAM,UAAI,KAAI,UAAI,KAAI,UAAI,OAAM,UAAI,OAAM,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,IAAG,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,IAAG,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,IAAG,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,IAAG,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,IAAG,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,IAAG,UAAI,IAAG,UAAI,IAAG,UAAI,IAAG,UAAI,KAAI,UAAI,KAAI,UAAI,IAAG,UAAI,IAAG,UAAI,GAAE,UAAI,EAAC,GAAE,OAAM,EAAC,UAAI,OAAM,UAAI,MAAK,UAAI,MAAK,UAAI,OAAM,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,OAAM,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,OAAM,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,OAAM,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,OAAM,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,IAAG,UAAI,OAAM,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,OAAM,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,IAAG,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,IAAG,UAAI,MAAK,UAAI,KAAI,UAAI,IAAG,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,IAAG,UAAI,GAAE,UAAI,MAAK,UAAI,KAAI,UAAI,IAAG,UAAI,MAAK,UAAI,KAAI,UAAI,IAAG,UAAI,IAAG,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,GAAE,UAAI,EAAC,GAAE,OAAM,EAAC,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,OAAM,UAAI,MAAK,UAAI,OAAM,UAAI,IAAG,UAAI,GAAE,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,IAAG,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,OAAM,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,OAAM,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,OAAM,UAAI,KAAI,UAAI,KAAI,UAAI,OAAM,UAAI,MAAK,UAAI,OAAM,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,IAAG,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,IAAG,UAAI,MAAK,UAAI,MAAK,UAAI,IAAG,UAAI,IAAG,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,IAAG,UAAI,KAAI,UAAI,IAAG,UAAI,KAAI,UAAI,MAAK,UAAI,IAAG,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,IAAG,UAAI,IAAG,UAAI,IAAG,UAAI,IAAG,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,IAAG,UAAI,KAAI,UAAI,GAAE,GAAE,OAAM,EAAC,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,IAAG,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,IAAG,UAAI,MAAK,UAAI,IAAG,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,IAAG,UAAI,KAAI,UAAI,KAAI,UAAI,IAAG,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,OAAM,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,IAAG,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,IAAG,UAAI,KAAI,UAAI,MAAK,UAAI,IAAG,UAAI,IAAG,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,IAAG,UAAI,KAAI,UAAI,IAAG,UAAI,KAAI,UAAI,IAAG,UAAI,GAAE,UAAI,GAAE,GAAE,OAAM,EAAC,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,MAAK,UAAI,OAAM,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,IAAG,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,OAAM,UAAI,MAAK,UAAI,IAAG,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,IAAG,UAAI,MAAK,UAAI,KAAI,UAAI,IAAG,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,MAAK,UAAI,IAAG,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,IAAG,UAAI,KAAI,UAAI,KAAI,UAAI,IAAG,UAAI,KAAI,UAAI,IAAG,UAAI,KAAI,UAAI,KAAI,UAAI,IAAG,UAAI,MAAK,UAAI,IAAG,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,IAAG,UAAI,IAAG,UAAI,KAAI,UAAI,KAAI,UAAI,KAAI,UAAI,IAAG,UAAI,KAAI,UAAI,IAAG,UAAI,IAAG,UAAI,KAAI,UAAI,GAAE,GAAE,OAAM,EAAC,gBAAK,MAAK,gBAAK,OAAM,gBAAK,KAAI,gBAAK,OAAM,gBAAK,OAAM,gBAAK,OAAM,gBAAK,OAAM,gBAAK,OAAM,gBAAK,MAAK,gBAAK,OAAM,gBAAK,OAAM,gBAAK,OAAM,gBAAK,OAAM,gBAAK,MAAK,gBAAK,OAAM,gBAAK,OAAM,gBAAK,OAAM,gBAAK,OAAM,gBAAK,OAAM,gBAAK,OAAM,gBAAK,OAAM,gBAAK,OAAM,gBAAK,MAAK,gBAAK,OAAM,gBAAK,MAAK,gBAAK,OAAM,gBAAK,OAAM,gBAAK,OAAM,gBAAK,OAAM,gBAAK,MAAK,gBAAK,OAAM,gBAAK,OAAM,gBAAK,OAAM,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,OAAM,gBAAK,OAAM,gBAAK,OAAM,gBAAK,OAAM,gBAAK,MAAK,gBAAK,MAAK,gBAAK,OAAM,gBAAK,MAAK,gBAAK,OAAM,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,OAAM,gBAAK,OAAM,gBAAK,OAAM,gBAAK,OAAM,gBAAK,OAAM,gBAAK,OAAM,gBAAK,OAAM,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,OAAM,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,OAAM,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,IAAG,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,KAAI,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,IAAG,gBAAK,MAAK,gBAAK,IAAG,gBAAK,IAAG,gBAAK,IAAG,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,IAAG,GAAE,OAAM,EAAC,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,OAAM,gBAAK,KAAI,gBAAK,MAAK,gBAAK,OAAM,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,OAAM,gBAAK,KAAI,gBAAK,MAAK,gBAAK,OAAM,gBAAK,KAAI,gBAAK,OAAM,gBAAK,MAAK,gBAAK,MAAK,gBAAK,KAAI,gBAAK,OAAM,gBAAK,KAAI,gBAAK,OAAM,gBAAK,KAAI,gBAAK,OAAM,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,OAAM,gBAAK,OAAM,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,OAAM,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,KAAI,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,OAAM,gBAAK,KAAI,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,OAAM,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,KAAI,gBAAK,KAAI,gBAAK,IAAG,gBAAK,KAAI,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,IAAG,gBAAK,MAAK,gBAAK,KAAI,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,IAAG,gBAAK,KAAI,gBAAK,IAAG,gBAAK,KAAI,gBAAK,IAAG,gBAAK,IAAG,gBAAK,IAAG,gBAAK,GAAE,GAAE,OAAM,EAAC,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,OAAM,gBAAK,MAAK,gBAAK,KAAI,gBAAK,OAAM,gBAAK,KAAI,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,OAAM,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,OAAM,gBAAK,MAAK,gBAAK,OAAM,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,KAAI,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,OAAM,gBAAK,OAAM,gBAAK,KAAI,gBAAK,MAAK,gBAAK,OAAM,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,KAAI,gBAAK,OAAM,gBAAK,KAAI,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,KAAI,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,OAAM,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,MAAK,gBAAK,KAAI,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,IAAG,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,MAAK,gBAAK,GAAE,gBAAK,KAAI,gBAAK,KAAI,gBAAK,MAAK,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,IAAG,gBAAK,KAAI,gBAAK,IAAG,gBAAK,KAAI,gBAAK,IAAG,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,KAAI,gBAAK,GAAE,GAAE,OAAM,EAAC,sBAAM,KAAI,sBAAM,OAAM,sBAAM,OAAM,sBAAM,KAAI,sBAAM,OAAM,sBAAM,OAAM,sBAAM,MAAK,sBAAM,MAAK,sBAAM,KAAI,sBAAM,OAAM,sBAAM,OAAM,sBAAM,OAAM,sBAAM,MAAK,sBAAM,OAAM,sBAAM,OAAM,sBAAM,KAAI,sBAAM,MAAK,sBAAM,MAAK,sBAAM,KAAI,sBAAM,MAAK,sBAAM,KAAI,sBAAM,KAAI,sBAAM,IAAG,sBAAM,MAAK,sBAAM,MAAK,sBAAM,MAAK,sBAAM,MAAK,sBAAM,MAAK,sBAAM,KAAI,sBAAM,KAAI,sBAAM,KAAI,sBAAM,KAAI,sBAAM,GAAE,GAAE,OAAM,EAAC,sBAAM,MAAK,sBAAM,OAAM,sBAAM,MAAK,sBAAM,OAAM,sBAAM,OAAM,sBAAM,MAAK,sBAAM,MAAK,sBAAM,OAAM,sBAAM,OAAM,sBAAM,MAAK,sBAAM,MAAK,sBAAM,MAAK,sBAAM,MAAK,sBAAM,MAAK,sBAAM,MAAK,sBAAM,MAAK,sBAAM,MAAK,sBAAM,KAAI,sBAAM,KAAI,sBAAM,MAAK,sBAAM,MAAK,sBAAM,MAAK,sBAAM,OAAM,sBAAM,KAAI,sBAAM,KAAI,sBAAM,KAAI,sBAAM,KAAI,sBAAM,KAAI,sBAAM,KAAI,sBAAM,MAAK,sBAAM,KAAI,sBAAM,KAAI,sBAAM,KAAI,sBAAM,KAAI,sBAAM,KAAI,sBAAM,MAAK,sBAAM,MAAK,sBAAM,KAAI,sBAAM,KAAI,sBAAM,KAAI,sBAAM,KAAI,sBAAM,KAAI,sBAAM,KAAI,sBAAM,MAAK,sBAAM,MAAK,sBAAM,KAAI,sBAAM,MAAK,sBAAM,IAAG,sBAAM,KAAI,sBAAM,MAAK,sBAAM,KAAI,sBA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",
  "names": ["model", "parser", "model", "blocks", "block", "model", "parser", "model", "parser"]
}
