{
  "version": 3,
  "sources": ["../src/data/models/ja.ts", "../src/dom-browser.ts", "../src/parser.ts", "../src/html_processor.ts", "../src/index.ts", "../src/webcomponents/budoux-base.ts", "../src/webcomponents/budoux-ja.ts"],
  "sourcesContent": ["export const model: {[key:string]: {[key:string]: number}} = {\"UW3\":{\"\u3002\":6699,\"\u306B\":3897,\"\u3001\":4784,\"\u306E\":3706,\"\u304C\":4162,\"\u3092\":5769,\"\u306F\":4221,\"\u3068\":2900,\"\u308B\":2971,\"\u304F\":2902,\"\u3082\":3155,\"\u3046\":2242,\"\u3066\":2447,\"\u3067\":3372,\"\u305F\":2217,\"\u3044\":1855,\"\u306A\":2357,\"\u3063\":-1853,\"\u65B9\":2814,\"\u3089\":1353,\"\u3093\":967,\"\u3070\":1790,\"\uFF3D\":2166,\"\u304B\":1899,\"\uFF0C\":3358,\"\u308A\":1013,\"\uFF01\":3252,\"\u30FC\":-102,\"\u3084\":2149,\"\uFF1F\":3703,\"\uFF0E\":2093,\"\u30FB\":1074,\"\u2026\":2428,\"\u90E8\":1732,\"\u3069\":992,\"\u3054\":-2327,\"\uFF09\":2573,\"\u30C3\":-2137,\"\u2606\":2675,\"\u304A\":-1495,\"\u4E0A\":428,\"\u4EE5\":-1870,\"\u3064\":1078,\"\u300D\":1608,\"\u266A\":2714,\"\u96FB\":-1669,\"\u30AF\":335,\"\u3060\":866,\"\u3078\":2073,\"\u308D\":1142,\"\u7B11\":2335,\"\u305A\":1456,\"\u9762\":475,\"\u3073\":514,\"\u3042\":1179,\"\u4ECA\":1080,\"\u3050\":2053,\"\u5206\":1111,\"\u611F\":1389,\"\u5927\":-1134,\"\u4EAC\":-1396,\"\u4E2D\":998,\"\u4EBA\":486,\"\u5834\":-794,\"\u30A4\":-568,\"\u3059\":938,\"\u3055\":-599,\"\u307E\":-370,\"\u5229\":-681,\"\u9593\":752,\"\uFF10\":-870,\"\u3041\":1322,\"\u30D5\":-1285,\"\u30F3\":-284,\"\u300C\":-1434,\"\u5F53\":-337,\"\u304D\":530,\"\u65E5\":713,\"\u30B9\":-901,\"\u3083\":1112,\"\u5F8C\":1224,\"\u3005\":1435,\"\u30B7\":-1196,\"\u5EA6\":982,\"\u89B3\":-976,\"\u98DF\":-517,\"\u884C\":-725,\"\u30C9\":-995,\"\u30EA\":-636,\"\u3048\":728,\"\u7A7A\":902,\"\u591C\":1480,\"\u30A2\":-700,\"\u300F\":1404,\"\uFF11\":-550,\"\u4F53\":1000,\"\u79CB\":1464,\"\u5165\":-819,\"\u30D7\":-718,\"\u6614\":1287,\"\uFF3B\":-960,\"\u984C\":1113,\"\u80FD\":-710,\"\u7686\":1294,\"\u3080\":920,\"\u5B66\":-552,\"\u614B\":-749,\"\u6708\":584,\"\u4FC2\":701,\"\u5909\":328,\"\u8D85\":976,\"\u3076\":672,\"\u7136\":515,\"\u301C\":489,\"\u308C\":295,\"\u7531\":680,\"\u6BB5\":13,\"\u975E\":768,\"\u5149\":-218,\"\u610F\":-477,\"\u305E\":825,\"\u5E74\":344,\"\u3079\":-711,\"\u6A5F\":-463,\"\u8A00\":-419,\"\u3061\":363,\"\u6C17\":130,\"\u307F\":275,\"\uFF4F\":-520,\"\uFF1E\":588,\"\u3057\":181,\"\u3051\":159,\"\u79FB\":-635,\"\u898B\":160,\"\u30BA\":304,\"\u81EA\":-352,\"\u679C\":767,\"\u756A\":252,\"\u8272\":469,\"\u3000\":257,\"\u3071\":454,\"\u51FA\":-160,\"\u5C4B\":338,\"\u30AB\":-102,\"\u30E1\":-136,\"\u6307\":-240,\"\u5E97\":203,\"\u4E00\":-50,\"\u5225\":285,\"\u982D\":486,\"\u671D\":270,\"\u60F3\":398,\"\u5473\":101,\"\u751F\":-160,\"\u8A9E\":159,\"\u201D\":215,\"\u7740\":-149,\"\u6240\":189,\"\uFF1A\":94,\"\u795E\":-111,\"\u5FDC\":149,\"\u7A0B\":145,\"\u4E0D\":-93,\"\u6599\":-76,\"\u5BFA\":50,\"\u6C34\":54,\"\u30EC\":-54,\"\u30D1\":-29,\"\u30B5\":33,\"\u30B0\":12,\"\u6709\":-16},\"UW4\":{\"\u3002\":-7440,\"\u306E\":-4018,\"\u304C\":-3577,\"\u306B\":-4299,\"\u3066\":-3839,\"\u308B\":-5462,\"\u3001\":-7452,\"\u306F\":-3332,\"\u3063\":-4313,\"\u3067\":-3120,\"\u3092\":-4861,\"\u3046\":-2446,\"\u3068\":-2917,\"\u308A\":-4081,\"\u307E\":-1296,\"\u305F\":-1675,\"\u3042\":501,\"\u308C\":-4326,\"\u306A\":-1928,\"\u305D\":456,\"\u304F\":-2884,\"\u304B\":-2662,\"\u3089\":-4391,\"\u3054\":591,\"\u3057\":-1725,\"\u3053\":-517,\"\u3060\":-2037,\"\u304D\":-2074,\"\u3044\":-1531,\"\u3093\":-3821,\"\u30FC\":-2899,\"\u3082\":-2746,\"\u307F\":-1111,\"\u98DF\":652,\"\u884C\":411,\"\u601D\":1386,\"\u3059\":-1159,\"\u7A7A\":2526,\"\u5927\":788,\"\u300D\":-5393,\"\u3058\":-2352,\"\u3084\":-1257,\"\u3051\":-3441,\"\u3081\":-1867,\"\u3055\":-1716,\"\u3088\":-643,\"\u300C\":2301,\"\u8868\":1003,\"\u65E5\":695,\"\u5E83\":1811,\"\u5834\":333,\"\u4E00\":576,\"\u6642\":564,\"\u3061\":-1762,\"\u51B7\":2351,\"\u4EAC\":614,\"\uFF0C\":-4205,\"\u308F\":-1624,\"\u4EBA\":512,\"\u79C1\":1957,\"\uFF01\":-4469,\"\u3048\":-1844,\"\u30C3\":-2189,\"\u5F53\":384,\"\u30FB\":-677,\"\u30F3\":-2078,\"\uFF11\":710,\"\u65B9\":-816,\"\u3079\":-2964,\"\u624B\":270,\"\u6765\":430,\"\u308D\":-2793,\"\u305B\":-1498,\"\u30EB\":-1178,\"\u3070\":-2432,\"\u3064\":-1195,\"\u4F7F\":1131,\"\uFF08\":2399,\"\u6301\":180,\"\u2026\":-2208,\"\u3086\":-2265,\"\uFF1F\":-3412,\"\uFF09\":-4207,\"\u3076\":-2267,\"\u4F55\":1291,\"\u5F7C\":1247,\"\u3073\":-1619,\"\u7B11\":-3444,\"\u672C\":-1249,\"\u3069\":-697,\"\uFF3B\":1760,\"\uFF0E\":-2874,\"\u8A00\":227,\"\u304A\":820,\"\u305A\":-1966,\"\u30A4\":-507,\"\u4ECA\":1002,\"\u3083\":-2441,\"\u898B\":386,\"\u81EA\":792,\"\uFF12\":533,\"\u6700\":1072,\"\u7528\":-716,\"\u5E2F\":-1138,\"\u9593\":-393,\"\u643A\":441,\"\u591A\":1062,\"\u30EA\":-707,\"\u80FD\":-1270,\"\u300F\":-3209,\"\uFF3D\":-1427,\"\u6C17\":235,\"\u5165\":412,\"\u6709\":744,\"\u306D\":-1659,\"\u767D\":451,\"\u3041\":-1501,\"\u304E\":-1428,\"\u4E2D\":34,\"\u3072\":1076,\"\u904A\":1409,\"\u201D\":-817,\"\u98A8\":673,\"\u30B3\":344,\"\u3087\":-1527,\"\u6C34\":286,\"\u60C5\":-375,\"\uFF10\":-374,\"\u3080\":-1261,\"\u5408\":-948,\"\u516C\":724,\"\u307C\":-949,\"\u266A\":-1513,\"\u5C0F\":736,\"\u50D5\":856,\"\u2606\":-1296,\"\u301C\":-1156,\"\u30C9\":-76,\"\u697D\":308,\"\u5168\":475,\"\u66F8\":411,\"\u30B9\":-218,\"\u4E8C\":481,\"\u614B\":-582,\"\u5C11\":436,\"\u4E0D\":505,\"\u8FD4\":-347,\"\u5B9A\":-356,\"\u305C\":-907,\"\u9AD8\":229,\"\u7279\":623,\"\u796D\":413,\"\u4ED6\":368,\"\u3065\":-776,\"\u76EE\":117,\"\u305E\":-935,\"\u8A71\":316,\"\u5B50\":-233,\"\u3050\":-840,\"\u5E74\":-625,\"\uFF13\":22,\"\u9053\":181,\"\u7684\":-500,\"\uFF4F\":-489,\"\u5B9F\":368,\"\u8CB7\":366,\"\u7121\":192,\"\u8857\":443,\"\u6771\":470,\"\u7269\":-204,\"\u30E5\":-434,\"\u307B\":-176,\"\u8FBC\":-568,\"\u7518\":383,\"\u30BF\":-212,\"\u63DB\":-278,\"\u73FE\":191,\"\u65B0\":150,\"\u590F\":403,\"\u30D5\":-157,\"\u30C8\":-148,\"\u3052\":-455,\"\u3056\":-327,\"\u30C7\":174,\"\u5238\":-471,\"\u611F\":28,\"\u79CB\":307,\"\u96E3\":179,\"\u5916\":153,\"\u3078\":-247,\"\u30E7\":-156,\"\u6D41\":254,\"\u821E\":138,\"\u30B5\":75,\"\u524D\":-75,\"\u5E97\":101,\"\u62BC\":264,\"\u958B\":61,\"\u3000\":-148,\"\uFF3E\":-256,\"\u5EA6\":-125,\"\uFF15\":52,\"\u3005\":-142,\"\u5199\":159,\"\u56DE\":-154,\"\u30E9\":-56,\"\u95A2\":-145,\"\u5B89\":63,\"\u76F8\":54,\"\u53C2\":45,\"\u767E\":45,\"\u53D6\":-45,\"\u30E0\":-41,\"\u5C4B\":-8,\"\u901A\":-8,\"\u52DD\":4,\"\u7F8E\":4},\"UW5\":{\"\u3002\":-2177,\"\u3067\":-955,\"\u3059\":-681,\"\u3001\":-1011,\"\u306A\":-608,\"\u307E\":-353,\"\u3066\":169,\"\u3063\":964,\"\u308B\":175,\"\u306F\":-874,\"\u304D\":1177,\"\u3057\":-394,\"\u304A\":345,\"\u3092\":-674,\"\u304F\":287,\"\u3053\":500,\"\u3058\":886,\"\u306B\":-612,\"\u305D\":-421,\"\u80FD\":219,\"\u308F\":710,\"\u3079\":1871,\"\u3048\":637,\"\u3093\":1001,\"\u3042\":-271,\"\u305F\":198,\"\u307F\":293,\"\u3044\":345,\"\u30FB\":-1082,\"\u3068\":-617,\"\u3088\":-587,\"\u306E\":-641,\"\u308D\":-360,\"\u4E0A\":-1087,\"\u304B\":210,\"\u3060\":-338,\"\u3081\":851,\"\u5E2F\":303,\"\u308C\":495,\"\u3056\":1494,\"\u3089\":222,\"\u305A\":1173,\"\u3055\":-327,\"\u3064\":1091,\"\u30EB\":-472,\"\u9762\":776,\"\u300D\":-1068,\"\u96FB\":-285,\"\u307C\":1415,\"\u65E5\":342,\"\u304C\":-272,\"\u3073\":826,\"\u305B\":-303,\"\u601D\":-891,\"\u3061\":572,\"\u51B7\":1123,\"\u308A\":409,\"\u5E74\":876,\"\u4F7F\":-1390,\"\u5229\":365,\"\u8449\":791,\"\uFF01\":-384,\"\uFF3D\":-470,\"\u5408\":255,\"\u3076\":15,\"\u5238\":-1133,\"\u610F\":708,\"\u3050\":159,\"\u30D0\":-254,\"\u3082\":-93,\"\u3046\":325,\"\u5165\":-341,\"\u79FB\":-571,\"\u30C8\":-313,\"\u4F53\":-1085,\"\u5F53\":401,\"\u3005\":505,\"\u5206\":173,\"\u30A4\":171,\"\u898B\":-272,\"\u6765\":-122,\"\u6599\":579,\"\u5BFA\":-461,\"\u304E\":348,\"\u624B\":179,\"\u7D9A\":-872,\"\u3080\":458,\"\u901A\":-209,\"\uFF0E\":-184,\"\u30BF\":244,\"\u884C\":-180,\"\uFF1F\":-192,\"\u6C34\":-154,\"\u5148\":-562,\"\u90FD\":40,\"\u4E00\":-151,\"\u3069\":-41,\"\u3070\":209,\"\u30A2\":-123,\"\u5B66\":49,\"\u6700\":-116,\"\u964D\":104,\"\uFF4F\":95,\"\u3078\":-146,\"\u4F55\":-176,\"\u52B9\":111,\"\u30F3\":-30,\"\u3087\":90,\"\u30FC\":4,\"\u3000\":-135,\"\uFF08\":-67,\"\u7A2E\":42,\"\uFF17\":-101,\"\u7684\":-54,\"\u6210\":46,\"\u30E9\":29,\"\uFF2E\":104,\"\uFF11\":-29,\"\u6709\":-37,\"\u4E2D\":8,\"\u5834\":4},\"UW2\":{\"\u3002\":-1401,\"\u3001\":-1370,\"\u3092\":-2403,\"\u306B\":-1207,\"\u304C\":-653,\"\u306F\":-1010,\"\u304B\":18,\"\u308C\":5,\"\u3063\":269,\"\u4EE5\":2215,\"\u3066\":-985,\"\u3046\":-489,\"\u5168\":1762,\"\u306E\":-695,\"\u305D\":-534,\"\u3067\":-810,\"\u3060\":523,\"\u3086\":1668,\"\u3055\":922,\"\u304F\":-812,\"\u3081\":81,\"\u3068\":-751,\"\u3082\":-813,\"\u3042\":-233,\"\u4E00\":1197,\"\u3057\":-49,\"\u3093\":344,\"\u304A\":-711,\"\u98DF\":981,\"\u3054\":-682,\"\u304D\":-556,\"\u6BCE\":1671,\"\u7D50\":1952,\"\u5F7C\":754,\"\u5C11\":676,\"\u6700\":445,\"\u307B\":1001,\"\u308F\":-118,\"\u821E\":2257,\"\u4E0A\":-421,\"\u3088\":577,\"\u540C\":567,\"\u308A\":-479,\"\u6A5F\":1341,\"\u4EBA\":201,\"\u610F\":531,\"\u306A\":-492,\"\u300C\":-482,\"\u3070\":-464,\"\u95A2\":745,\"\u4EAC\":-377,\"\u672C\":694,\"\u3044\":-79,\"\u5927\":266,\"\u76EE\":-1004,\"\u591A\":387,\"\u7740\":-477,\"\u3064\":-423,\"\u30B1\":-246,\"\u632F\":-1313,\"\u3083\":283,\"\u984C\":848,\"\u624B\":663,\"\u3072\":-1353,\"\u5BB9\":956,\"\u6C34\":335,\"\u6211\":-1421,\"\u308B\":-207,\"\u88CF\":-1437,\"\u30FC\":274,\"\u305C\":567,\"\u3071\":396,\"\u540D\":341,\"\u30D5\":-264,\"\u5BFA\":-551,\"\u8449\":787,\"\u307E\":-173,\"\u5915\":826,\"\u3076\":435,\"\u7D76\":1181,\"\u9AD8\":498,\"\u4ECA\":276,\"\u53CB\":494,\"\u3089\":-91,\"\u30F3\":167,\"\u305F\":-109,\"\u307F\":-123,\"\u6599\":70,\"\u30A4\":-122,\"\u96FB\":315,\"\u51B7\":-664,\"\u6253\":557,\"\u30E1\":-47,\"\u4E16\":-793,\"\u30D1\":289,\"\u5973\":-487,\"\uFF52\":990,\"\u30D7\":-195,\"\u53D6\":-360,\"\uFF3E\":149,\"\u5834\":190,\"\u3053\":161,\"\uFF0C\":-306,\"\u843D\":-499,\"\u9078\":313,\"\u77E5\":-361,\"\u6975\":748,\"\u5165\":-160,\"\u826F\":183,\"\u30E9\":-210,\"\u30B9\":54,\"\u904A\":-310,\"\u7528\":-161,\"\u5F0F\":93,\"\u3005\":80,\"\u8ECA\":124,\"\u7ACB\":-292,\"\u4E0B\":154,\"\u30EB\":31,\"\u7518\":227,\"\u5B9F\":97,\"\u91CD\":159,\"\u4E57\":-115,\"\u5F53\":94,\"\uFF1A\":106,\"\uFF3D\":-50,\"\uFF28\":-84,\"\u7684\":42,\"\u76F8\":75,\"\u4E09\":58,\"\u3051\":16,\"\u683C\":130,\"\u6B63\":100,\"\uFF3B\":-16,\"\u65E5\":-25,\"\u516C\":-33,\"\uFF14\":20,\"\u30A3\":-12,\"\u308D\":-4},\"UW6\":{\"\u304C\":320,\"\u3002\":-307,\"\u3066\":-16,\"\u3067\":219,\"\u306F\":307,\"\u3057\":581,\"\u5165\":621,\"\u3069\":828,\"\u3042\":-496,\"\u7A7A\":1589,\"\u306A\":218,\"\u3059\":-90,\"\u3060\":95,\"\u3081\":1415,\"\u5238\":1711,\"\u3055\":555,\"\u3054\":-283,\"\u306E\":85,\"\u6027\":2064,\"\u3046\":35,\"\u3084\":819,\"\u308A\":578,\"\u5834\":-864,\"\u306B\":245,\"\u3064\":506,\"\u308D\":352,\"\u304D\":-17,\"\u3063\":301,\"\u308B\":71,\"\u304B\":231,\"\u3044\":365,\"\u3089\":65,\"\u305D\":-101,\"\u3070\":527,\"\u3051\":-213,\"\u30FC\":-66,\"\u3093\":324,\"\u5F7C\":-1272,\"\u30AF\":-346,\"\u30EB\":207,\"\uFF10\":626,\"\u304F\":240,\"\u3001\":180,\"\u98DF\":-284,\"\u904A\":-906,\"\u5BFA\":611,\"\u30FB\":-639,\"\uFF1A\":1217,\"\u8A00\":-361,\"\u3086\":755,\"\u614B\":221,\"\u8FBC\":679,\"\u3092\":85,\"\u7684\":479,\"\u53EF\":567,\"\u30BF\":380,\"\u6C17\":415,\"\u601D\":-111,\"\u3071\":813,\"\u307E\":170,\"\u30E1\":239,\"\u304A\":-18,\"\u30D4\":780,\"\u30AB\":292,\"\u9001\":-896,\"\u6765\":-261,\"\u904E\":846,\"\u30A4\":-244,\"\u52B9\":-725,\"\u30B7\":-130,\"\u30B1\":-388,\"\u305A\":-403,\"\u3076\":-248,\"\u713C\":643,\"\u308C\":119,\"\u5E83\":-150,\"\u6A5F\":216,\"\u308F\":60,\"\u30F3\":-64,\"\u65B9\":-235,\"\uFF11\":33,\"\u3053\":41,\"\u5E97\":164,\"\u5370\":360,\"\u3073\":129,\"\u56DE\":-94,\"\u304E\":280,\"\u4E0D\":204,\"\u3082\":-18,\"\u81EA\":123,\"\u3080\":168,\"\u30D1\":-112,\"\u5468\":275,\"\u51FA\":68,\"\u53C2\":114,\"\u795E\":33,\"\u7740\":-20,\"\u9593\":-4,\"\u7DF4\":8,\"\u3083\":-4},\"UW1\":{\"\u306F\":-273,\"\u3046\":275,\"\u307E\":128,\"\u304A\":922,\"\u3054\":890,\"\u3068\":165,\"\u304C\":-385,\"\u308B\":-34,\"\u305B\":210,\"\u3044\":-91,\"\u3093\":289,\"\u3042\":-230,\"\u3067\":-127,\"\u5B66\":209,\"\u308A\":-102,\"\u6D6E\":1464,\"\u306B\":-344,\"\u7518\":-1424,\"\u3064\":241,\"\u30D0\":511,\"\u306A\":-220,\"\u3066\":60,\"\u6C34\":1969,\"\u3001\":-26,\"\u96FB\":127,\"\u5F53\":-1038,\"\u3075\":1899,\"\u3089\":72,\"\u308C\":-44,\"\u643A\":-86,\"\u3092\":-176,\"\u305D\":137,\"\u3063\":194,\"\u308D\":303,\"\uFF3B\":-601,\"\u30FC\":113,\"\u304B\":-110,\"\u9593\":572,\"\u3061\":285,\"\u3086\":-428,\"\u3057\":-30,\"\u5916\":301,\"\u30D5\":-155,\"\u3082\":-96,\"\uFF10\":275,\"\u7A7A\":-524,\"\u30B9\":-251,\"\u304F\":134,\"\u81EA\":412,\"\u3059\":151,\"\u7528\":599,\"\u3055\":-164,\"\u30C1\":183,\"\u30B1\":-196,\"\u5165\":266,\"\u30C4\":134,\"\u56F0\":574,\"\u5229\":-371,\"\u751F\":254,\"\u6A5F\":318,\"\u5B89\":-400,\"\u753B\":-53,\"\u5EAD\":619,\"\u30A4\":211,\"\uFF13\":-258,\"\u30E1\":96,\"\u9762\":-306,\"\u4F55\":173,\"\u3053\":64,\"\u554F\":588,\"\u65B9\":124,\"\u767D\":-248,\"\u3058\":-49,\"\u793E\":225,\"\u69D8\":365,\"\u7530\":137,\"\u56FD\":-382,\"\u8FBC\":42,\"\u306E\":-31,\"\u9AD8\":170,\"\u3002\":-17,\"\u30C3\":117,\"\u3060\":63,\"\u65B0\":178,\"\uFF0E\":-72,\"\u30E9\":92,\"\u4F7F\":-79,\"\u898B\":76,\"\uFF1F\":113,\"\u632F\":209,\"\uFF01\":65,\"\u64AE\":-182,\"\u5238\":79,\"\u3056\":120,\"\u5468\":137,\"\u9577\":144,\"\u3084\":-42,\"\u5C71\":114,\"\u30D1\":63,\"\u597D\":50,\"\u30DA\":126,\"\u7740\":-16,\"\u3081\":-12,\"\u307F\":-8,\"\u500B\":-79,\"\u4E0A\":12,\"\u3048\":-8,\"\u9023\":-29,\"\u30DC\":16},\"BW2\":{\"\u305F\u3068\":1475,\"\u3068\u304A\":-3875,\"\u3068\u3044\":274,\"\u3046\u3084\":-2003,\"\u306A\u3044\":-2999,\"\u306E\u307F\":-2622,\"\u3066\u3044\":-1296,\"\u3067\u3042\":-3302,\"\u306E\u3088\":-838,\"\u3067\u3059\":-3035,\"\u305F\u307E\":-2116,\"\u3044\u305F\":-1737,\"\u306E\u6A5F\":-2082,\"\u306E\u3067\":-921,\"\u3067\u304D\":-2119,\"\u306B\u306F\":-1012,\"\u306B\u3082\":-1213,\"\u306F\u3058\":-2465,\"\u3001\u305D\":-1810,\"\u304C\u3068\":-1022,\"\u304F\u306A\":-1771,\"\u3067\u3082\":-1689,\"\u306F\u306A\":-331,\"\u306E\u306F\":-1100,\"\u308B\u3068\":-643,\"\u3066\u304A\":-2518,\"\u306A\u3069\":-1807,\"\u5E2F\u96FB\":-1351,\"\u3067\u3057\":-1856,\"\u3001\u3068\":-558,\"\u307E\u305F\":-2737,\"\u305F\u3060\":-2687,\"\u304F\u3057\":-1520,\"\u308B\u3088\":-944,\"\u3044\u3082\":709,\"\u3082\u3042\":-935,\"\u308A\u3082\":-1014,\"\u3066\u3042\":-2039,\"\u305F\u3044\":-1183,\"\u3066\u307F\":-1524,\"\u305D\u3053\":-652,\"\u3082\u3057\":-490,\"\u3066\u304F\":-1248,\"\u3069\u3082\":-675,\"\u3046\u3069\":-1684,\"\u306E\u524D\":-820,\"\u306E\u3060\":-873,\"\u306A\u304F\":-956,\"\u306B\u306A\":-362,\"\u4EBA\u304C\":1674,\"\u3093\u3069\":-722,\"\u3082\u306E\":-753,\"\u3044\u307E\":-421,\"\u3068\u601D\":545,\"\u308C\u305F\":-890,\"\u306F\u3044\":-770,\"\u3059\u3054\":-1196,\"\u304F\u3060\":-1043,\"\u30FB\u30FB\":-1221,\"\u3066\u304D\":-1069,\"\u304C\u3063\":-1494,\"\u306F\u3042\":-1185,\"\u3067\u306F\":-1027,\"\u3044\u3064\":-659,\"\u3068\u306A\":159,\"\u6642\u9593\":-681,\"\u304C\u3057\":280,\"\u306B\u3057\":-458,\"\u3046\u307E\":-1227,\"\u305F\u3061\":-851,\"\u306E\u304A\":458,\"\u3070\u3044\":-968,\"\u3001\u306A\":-145,\"\u305F\u6642\":421,\"\u306E\u3082\":-489,\"\u3068\u304B\":-782,\"\u3089\u306A\":-64,\"\u306A\u304B\":-299,\"\u306E\u304B\":-278,\"\u3067\u306A\":-1003,\"\u305F\u3082\":318,\"\u3068\u3053\":-337,\"\u3082\u306A\":-157,\"\u3057\u305F\":-402,\"\u3082\u3064\":-433,\"\u3044\u3044\":-357,\"\u30FC\u30C9\":-523,\"\u3068\u304D\":-230,\"\u3082\u3061\":-157,\"\u305F\u3088\":-393,\"\u306F\u3067\":41,\"\u3068\u3082\":-359,\"\u3044\u3057\":-401,\"\u3044\u3088\":-494,\"\u306F\u305A\":-333,\"\u3084\u3059\":-524,\"\u3068\u540C\":-442,\"\u3088\u3046\":-175,\"\u3044\u306A\":-144,\"\u30FC\u306A\":476,\"\u308B\u306E\":-197,\"\u3057\u3044\":-297,\"\u3001\uFF11\":-643,\"\u3066\u3082\":-151,\"\u308A\u306A\":191,\"\u304C\u3088\":195,\"\u306E\uFF11\":-539,\"\u3046\u304B\":-137,\"\u3001\u6E05\":-374,\"\u4ECA\u65E5\":-360,\"\u3068\u3059\":-127,\"\u3064\u306E\":186,\"\uFF3D\u4EAC\":-152,\"\u3046\u3044\":-93,\"\u306E\u304C\":-101,\"\u3044\u4EBA\":80,\"\u3051\u3069\":-126,\"\u30FC\u3067\":83,\"\u304C\u3061\":62,\"\u306E\u65B9\":96,\"\u3089\u3044\":-54,\"\u3067\u3044\":-33,\"\u3066\u305F\":-37,\"\u3069\u3053\":-20},\"BW1\":{\"\u306E\u307F\":3058,\"\u4EE5\u4E0A\":1223,\"\u307E\u307E\":2830,\"\u304B\u3089\":1723,\"\u305F\u307E\":2162,\"\u308C\u305F\":1494,\"\u767D\u3044\":3534,\"\u3061\u304C\":-2703,\"\u3081\u3066\":969,\"\u306A\u3044\":1045,\"\u305D\u306E\":-1066,\"\u3067\u306F\":-518,\"\u3063\u305F\":166,\"\u305F\u3068\":-948,\"\u3053\u3068\":-1455,\"\u304F\u308C\":922,\"\u3068\u304B\":1688,\"\u308B\u306E\":-1593,\"\u3046\u306A\":513,\"\u305F\u306E\":-1543,\"\u306E\u306F\":1277,\"\u3088\u308A\":1376,\"\u3067\u3082\":667,\"\u3068\u304C\":-1393,\"\u3057\u3044\":917,\"\u304B\u3082\":-1290,\"\u30C3\u30AF\":631,\"\u3088\u3046\":-1620,\"\u3093\u306A\":471,\"\u3068\u3046\":1085,\"\u3002\u30FB\":2456,\"\u305F\u3089\":949,\"\u6C17\u306B\":-70,\"\u3066\u3082\":623,\"\u5229\u7528\":1018,\"\u6700\u8FD1\":1515,\"\u304C\u3068\":-1545,\"\u3053\u306E\":-1039,\"\u306B\u3082\":816,\"\u3082\u3064\":1694,\"\u304C\u3001\":1178,\"\u308C\u3066\":-1090,\"\u308A\u304C\":-96,\"\u308A\u3068\":1198,\"\u3093\u3067\":-325,\"\u307E\u3060\":1343,\"\u306B\u306F\":588,\"\u3082\u3046\":1414,\"\u5C11\u3057\":1375,\"\u3068\u304D\":1349,\"\u3053\u305D\":1413,\"\u308A\u3082\":1231,\"\u308C\u3070\":936,\"\u3051\u3069\":1014,\"\u540C\u3058\":1427,\"\u308B\u3068\":202,\"\u305F\uFF0E\":1736,\"\u307E\u308A\":1018,\"\u3044\u3046\":138,\"\u306F\u3001\":436,\"\u3068\u3044\":-725,\"\u3044\u3001\":-329,\"\u306A\u3089\":1251,\"\u601D\u3044\":-1273,\"\u3066\u3001\":702,\"\u3042\u308B\":141,\"\u3063\u3066\":-196,\"\u3067\u3001\":572,\"\u306A\u305C\":1571,\"\u308A\u306B\":356,\"\u308A\u306E\":-399,\"\u307E\u308B\":-429,\"\u308C\u308B\":350,\"\u305F\u3044\":242,\"\u305D\u308C\":293,\"\u3082\u3057\":1050,\"\u306E\u9593\":1155,\"\u306A\u3069\":1137,\"\u3044\u306E\":-369,\"\u3046\u3084\":-1096,\"\u3060\u3051\":391,\"\u3066\u3044\":-522,\"\u3068\u3067\":941,\"\u304F\u3066\":680,\"\u3093\u3060\":515,\"\u30B1\u30FC\":-781,\"\u3044\u3067\":-844,\"\u666E\u6BB5\":655,\"\u306E\u3082\":725,\"\u601D\u3046\":57,\"\u3048\u3070\":791,\"\u304D\u306A\":687,\"\u306B\u611F\":-579,\"\u3044\u305F\":310,\"\u3001\u3068\":310,\"\u3082\u306E\":-538,\"\u305F\u3060\":398,\"\u306E\u304C\":482,\"\u3066\u308B\":372,\"\u5927\u5909\":401,\"\u306E\u5F8C\":753,\"\u308B\u4EBA\":626,\"\u3057\u304B\":96,\"\u3067\u304D\":-364,\"\u308B\u3067\":252,\"\u307E\u3041\":444,\"\u4F7F\u3044\":-715,\"\u3053\u3046\":-591,\"\u304B\u306A\":-137,\"\u8CB7\u3044\":-698,\"\uFF01\uFF01\":322,\"\u3081\u308B\":-429,\"\u306B\u3001\":564,\"\uFF10\u5186\":304,\"\u3001\u4ECA\":302,\"\u30FC\u30B8\":789,\"\u3059\u308B\":-159,\"\u53CB\u9054\":625,\"\u30AF\u30EB\":437,\"\u308B\u306B\":-442,\"\u3084\u3089\":416,\"\u3002\u3042\":-619,\"\u304D\u308A\":449,\"\u3068\u3001\":245,\"\u306E\u4E0A\":589,\"\u305F\u3081\":524,\"\u307E\u3067\":160,\"\u304B\u3001\":-255,\"\u3046\u3061\":218,\"\u306A\u304F\":149,\"\u6765\u3066\":386,\"\u304D\u305F\":236,\"\u3079\u304D\":424,\"\u3058\u3066\":254,\"\u3071\u308A\":342,\"\u3093\u3069\":-303,\"\u30FB\u30FB\":237,\"\u3060\u306A\":-302,\"\u308D\u3046\":-315,\"\u73FE\u5728\":281,\"\u3002\uFF13\":274,\"\u304A\u5E97\":199,\"\u3066\u305F\":147,\"\u3059\u3089\":190,\"\u3044\u3082\":-216,\"\u306B\u304B\":180,\"\u3044\u306A\":-98,\"\u6C17\u304C\":115,\"\u305F\u308A\":102,\"\u308F\u3089\":-71,\"\u5B9F\u969B\":83,\"\u3068\u306B\":-20,\"\u3082\u3001\":29,\"\u304F\u3055\":-24,\"\u56FD\u4EBA\":24,\"\u3046\u304B\":12,\"\u306F\uFF11\":37,\"\u3068\u306F\":-4},\"BW3\":{\"\u3046\u307E\":4971,\"\u3082\u306E\":3479,\"\u3042\u308A\":1053,\"\u3044\u305F\":712,\"\u3088\u3046\":-404,\"\u3044\u3046\":719,\"\u4E0A\u304C\":1571,\"\u307E\u3059\":-943,\"\u306F\u3058\":3173,\"\u3068\u3046\":-693,\"\u305F\u307E\":1383,\"\u3061\u304C\":1979,\"\u3044\u3044\":1237,\"\u304A\u308A\":-2875,\"\u306E\u307F\":3096,\"\u53EF\u80FD\":402,\"\u3061\u3083\":-1016,\"\u3053\u3068\":899,\"\u305D\u3053\":647,\"\u3067\u3082\":1643,\"\u305D\u306E\":1844,\"\u306A\u3063\":-512,\"\u3068\u3044\":-1257,\"\u3042\u308B\":-339,\"\u3053\u306E\":1656,\"\u3068\u304D\":1917,\"\u305D\u3046\":-1050,\"\u624B\u306B\":1242,\"\u304B\u3089\":-1223,\"\u6301\u3063\":1098,\"\u3067\u304D\":980,\"\u304B\u3051\":2909,\"\u3068\u3066\":2245,\"\u306A\u308B\":481,\"\u306F\u3057\":3011,\"\u3061\u3087\":1986,\"\u3057\u3066\":278,\"\u3068\u304A\":678,\"\u3082\u3089\":2538,\"\u30E1\u30FC\":364,\"\u3053\u308D\":-190,\"\u305D\u3057\":-184,\"\u304B\u304B\":1752,\"\u3082\u3046\":2306,\"\u3069\u3093\":-397,\"\u30FB\u30FB\":-1499,\"\u3088\u308A\":-1463,\"\u3057\u307E\":-93,\"\u3068\u3082\":1038,\"\u3081\u3066\":-1778,\"\u3082\u3093\":1078,\"\u3044\u308D\":832,\"\u307E\u3041\":1442,\"\u3060\u3051\":-941,\"\u3057\u305F\":813,\"\u3055\u3093\":-1566,\"\u3046\u3061\":444,\"\u304D\u3063\":727,\"\u3088\u304F\":1082,\"\u3059\u3054\":897,\"\u4EE5\u4E0A\":-807,\"\u306A\u3044\":287,\"\u305F\u3081\":686,\"\u3053\u308C\":1075,\"\u3069\u3046\":296,\"\u306F\u307E\":1041,\"\u3059\u3002\":-152,\"\u3068\u3063\":917,\"\u6765\u305F\":408,\"\u3057\u3083\":1283,\"\u304B\u3063\":-802,\"\u305F\u3060\":1198,\"\u3057\u3044\":-519,\"\u3059\u3050\":1094,\"\u3082\u3068\":1264,\"\u3084\u3063\":422,\"\u304B\u3082\":-670,\"\u3081\u308B\":-1304,\"\u96FB\u8ECA\":121,\"\u307E\u3057\":-670,\"\u3044\u304B\":480,\"\u30D1\u30BD\":589,\"\u308F\u304B\":691,\"\u306A\u304F\":348,\"\u3044\u308B\":556,\"\u3068\u3053\":742,\"\u4E2D\u3067\":414,\"\u3055\u3044\":-672,\"\u307F\u305F\":-739,\"\u304B\u3064\":821,\"\u3044\u3066\":-372,\"\u306A\u304B\":198,\"\u306A\u3089\":-160,\"\u3060\u3044\":680,\"\u3042\u3063\":-93,\"\u3082\u3063\":626,\"\u307E\u305F\":-479,\"\u3044\u3084\":732,\"\u8003\u3048\":429,\"\u3046\u304B\":-268,\"\u3082\u3064\":666,\"\u307E\u3060\":296,\"\u304D\u307E\":-514,\"\u307E\u3067\":-677,\"\u304A\u8336\":627,\"\u3053\u305D\":-520,\"\u3068\u308A\":539,\"\u3044\u3089\":621,\"\u3067\u3059\":-239,\"\u307E\u308A\":-596,\"\u51FA\u6765\":-428,\"\u3064\u306A\":437,\"\u307B\u3057\":-350,\"\u305F\u3044\":-238,\"\u3053\u3053\":552,\"\u306F\u3044\":272,\"\u884C\u304D\":-218,\"\u697D\u3057\":128,\"\u3057\u3001\":-136,\"\u3081\u3063\":260,\"\u3093\u306F\":438,\"\u51FA\u3066\":128,\"\u3044\u307E\":85,\"\u3064\u3051\":251,\"\u307F\u304C\":-374,\"\u307E\u305A\":233,\"\u3060\u308D\":-357,\"\u30EB\u30FC\":249,\"\u304C\u3061\":-345,\"\u6599\u7406\":8,\"\u796D\u308A\":214,\"\u4F7F\u3063\":109,\"\u3068\u601D\":-161,\"\u307C\u304F\":329,\"\u30A4\u30F3\":203,\"\u9006\u306B\":246,\"\u3067\u3001\":119,\"\u3069\u3053\":46,\"\u305A\u3063\":121,\"\u3064\u3044\":62,\"\u307E\u305B\":-58,\"\u3042\u306E\":71,\"\u904E\u304E\":-95,\"\u59CB\u3081\":-28,\"\u307E\u3063\":-24,\"\u7A0B\u5EA6\":-24,\"\u66F8\u3044\":12},\"TW3\":{\"\u3068\u3044\u3046\":970,\"\u3082\u306A\u304F\":-1899,\"\u3068\u3053\u308D\":-1724,\"\u3068\u3057\u3066\":655,\"\u3001\u3042\u308B\":-2756,\"\u3066\u3044\u308B\":-1375,\"\u306F\u306A\u3044\":-473,\"\u306E\u307E\u307E\":-961,\"\u3059\u3053\u3068\":710,\"\u3066\u3057\u307E\":-1361,\"\u3089\u306A\u3044\":-1075,\"\u306F\u305D\u308C\":-1539,\"\u3066\u3044\u304F\":-289,\"\u3068\u3057\u305F\":-1169,\"\u3068\u8A00\u3063\":-1166,\"\u3066\u3044\u3046\":769,\"\u3067\u3042\u308B\":-749,\"\u3001\u306A\u3093\":-293,\"\u308B\u3053\u3068\":-49,\"\u3067\u3042\u3063\":-812,\"\u3068\u306A\u3063\":229,\"\u306A\u3093\u3067\":574,\"\u3044\u3068\u3053\":75,\"\u3082\u3044\u3044\":-408,\"\u3082\u3042\u308A\":-183,\"\u3067\u3042\u308A\":-535,\"\u3046\u3044\u3046\":-120,\"\u3070\u3044\u3044\":-137,\"\u306B\u3057\u3066\":-37,\"\u3066\u3044\u305F\":-66,\"\u308B\u3068\u304D\":108,\"\u3067\u3057\u305F\":-54,\"\u3046\u3053\u3068\":-4},\"TW4\":{\"\u3068\u3053\u308D\":2195,\"\u3088\u3046\u306B\":-1673,\"\u304F\u3089\u3044\":1598,\"\u3057\u305F\u3002\":-1569,\"\u3042\u308A\u307E\":-1767,\"\u304B\u306A\u308A\":2848,\"\u3067\u304D\u305F\":2069,\"\u307E\u3059\u3002\":-1366,\"\u3088\u3046\u306A\":-2232,\"\u3053\u3068\u304C\":-824,\"\u3044\u305F\u3002\":1066,\"\u3060\u304B\u3089\":1092,\"\u3046\u3069\u3093\":1258,\"\u305D\u3046\u3067\":-925,\"\u3053\u3068\u306B\":-856,\"\u3082\u3061\u308D\":1697,\"\u3057\u304B\u3057\":1383,\"\u3053\u3068\u3067\":380,\"\u306A\u3044\u3002\":191,\"\u3053\u3068\u3082\":-588,\"\u3042\u308A\u3001\":-595,\"\u3061\u306A\u307F\":1130,\"\u3060\u3063\u305F\":-1150,\"\u3059\u308B\u3068\":406,\"\u3053\u3068\u3002\":683,\"\u3067\u3082\u3001\":628,\"\u3044\u308D\u3044\":590,\"\u3044\u304B\u306A\":651,\"\u30E1\u30FC\u30EB\":256,\"\u3088\u3046\u3067\":-896,\"\u306A\u304B\u306A\":669,\"\u306A\u304F\u306A\":253,\"\u3057\u306A\u3044\":438,\"\u30BD\u30D5\u30C8\":512,\"\u3053\u3068\u3092\":255,\"\u308F\u3051\u3067\":-234,\"\u307E\u3063\u3066\":-824,\"\u306A\u3093\u3068\":481,\"\u3059\u3054\u3044\":314,\"\u3057\u3066\u304D\":278,\"\u3044\u3048\u3070\":397,\"\u3089\u3057\u3044\":424,\"\u3057\u304B\u3082\":494,\"\u3053\u3068\u306F\":-232,\"\u3042\u305F\u308A\":-390,\"\u98DF\u3079\u3066\":140,\"\u3057\u3066\u3082\":-174,\"\u3067\u304D\u307E\":52,\"\u306A\u3093\u304B\":116,\"\u306A\u3093\u3066\":-102,\"\u3044\u304F\u3089\":170,\"\u89B3\u5149\u5BA2\":-75,\"\u3044\u3044\u3068\":-63,\"\u3044\u308B\u3002\":37,\"\u3061\u3087\u3063\":20,\"\u305D\u3046\u3044\":16},\"TW2\":{\"\u6C17\u306B\u5165\":-4086,\"\u3067\u306F\u306A\":-1086,\"\u3068\u304C\u3042\":-1130,\"\u304B\u3082\u3057\":-463,\"\u3093\u3067\u3044\":-2306,\"\u305D\u3082\u305D\":-1441,\"\u3046\u306B\u306A\":-803,\"\u3057\u3066\u3044\":-406,\"\u3067\u3082\u3042\":-936,\"\u3063\u305F\u3053\":-267,\"\u3057\u304B\u306A\":440,\"\u3068\u3082\u3042\":-757,\"\u304B\u3089\u306A\":-477,\"\u3048\u308B\u3053\":-436,\"\u3067\u3082\u306A\":-207,\"\u3068\u306F\u3044\":-59,\"\u3048\u3066\u3044\":50,\"\u3057\u3066\u304A\":-37},\"TW1\":{\"\u3068\u3044\u3046\":545,\"\u3066\u3044\u304F\":1686,\"\u3088\u3046\u306A\":1298,\"\u30FB\u30FB\u30FB\":1104,\"\u6301\u3063\u3066\":-1851,\"\u3057\u304B\u3057\":2079,\"\u3066\u304F\u308C\":1444,\"\u306E\u307E\u307E\":1162,\"\u304B\u306A\u308A\":2083,\"\u3084\u306F\u308A\":1728,\"\u306A\u304C\u3089\":1223,\"\u3087\u3046\u3069\":1174,\"\u3082\u306A\u304F\":947,\"\u601D\u3063\u305F\":811,\"\u3068\u3093\u3069\":1250,\"\u3001\u305D\u308C\":412,\"\u306A\u3044\u3001\":-1039,\"\u306A\u3093\u3068\":-691,\"\u3092\u5229\u7528\":-1017,\"\u304C\u3063\u3066\":-418,\"\u3072\u3068\u3064\":732,\"\u3068\u601D\u3046\":251,\"\u307E\u3057\u305F\":-268,\"\u3067\u3042\u308B\":267,\"\u304B\u306A\u304B\":698,\"\u305D\u3057\u3066\":556,\"\u3063\u304B\u308A\":599,\"\u3002\u305F\u3060\":676,\"\u30EA\u30FC\u30B0\":309,\"\u304D\u306A\u3044\":141,\"\u306F\u305D\u306E\":-68,\"\u3061\u308D\u3093\":196,\"\u304F\u3055\u3093\":225,\"\u308B\u3053\u3068\":-271,\"\u3060\u3063\u3066\":164,\"\u306A\u3063\u3066\":-86,\"\u3059\u3054\u304F\":163,\"\u308D\u3044\u308D\":54,\"\u3002\u305D\u306E\":16,\"\u304F\u3089\u3044\":4}}", "/**\n * @license\n * Copyright 2021 Google LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Parses an html string and returns a parsed html document.\n * @param html An HTML string.\n * @return A Document.\n */\nexport const parseFromString = (html: string) => {\n  return new window.DOMParser().parseFromString(html, 'text/html');\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Base BudouX parser.\n */\nexport class Parser {\n  /** BudouX model data */\n  private readonly model: Map<string, Map<string, number>>;\n  private readonly baseScore: number;\n\n  /**\n   * Constructs a BudouX parser.\n   * @param model A model data.\n   */\n  constructor(model: {[key: string]: {[key: string]: number}}) {\n    this.model = new Map(\n      Object.entries(model).map(([k, v]) => [k, new Map(Object.entries(v))])\n    );\n    this.baseScore =\n      -0.5 *\n      [...this.model.values()]\n        .map(group => [...group.values()])\n        .flat()\n        .reduce((prev, curr) => prev + curr, 0);\n  }\n\n  /**\n   * Parses the input sentence and returns a list of semantic chunks.\n   *\n   * @param sentence An input sentence.\n   * @return The retrieved chunks.\n   */\n  parse(sentence: string): string[] {\n    if (sentence === '') return [];\n    const boundaries = this.parseBoundaries(sentence);\n    const result = [];\n    let start = 0;\n    for (const boundary of boundaries) {\n      result.push(sentence.slice(start, boundary));\n      start = boundary;\n    }\n    result.push(sentence.slice(start));\n    return result;\n  }\n\n  /**\n   * Parses the input sentence and returns a list of boundaries.\n   *\n   * @param sentence An input sentence.\n   * @return The list of boundaries.\n   */\n  parseBoundaries(sentence: string): number[] {\n    const result = [];\n\n    for (let i = 1; i < sentence.length; i++) {\n      let score = this.baseScore;\n      // NOTE: Score values in models may be negative.\n      /* eslint-disable */\n      score += this.model.get('UW1')?.get(sentence.substring(i - 3, i - 2)) || 0;\n      score += this.model.get('UW2')?.get(sentence.substring(i - 2, i - 1)) || 0;\n      score += this.model.get('UW3')?.get(sentence.substring(i - 1, i)) || 0;\n      score += this.model.get('UW4')?.get(sentence.substring(i, i + 1)) || 0;\n      score += this.model.get('UW5')?.get(sentence.substring(i + 1, i + 2)) || 0;\n      score += this.model.get('UW6')?.get(sentence.substring(i + 2, i + 3)) || 0;\n      score += this.model.get('BW1')?.get(sentence.substring(i - 2, i)) || 0;\n      score += this.model.get('BW2')?.get(sentence.substring(i - 1, i + 1)) || 0;\n      score += this.model.get('BW3')?.get(sentence.substring(i, i + 2)) || 0;\n      score += this.model.get('TW1')?.get(sentence.substring(i - 3, i)) || 0;\n      score += this.model.get('TW2')?.get(sentence.substring(i - 2, i + 1)) || 0;\n      score += this.model.get('TW3')?.get(sentence.substring(i - 1, i + 2)) || 0;\n      score += this.model.get('TW4')?.get(sentence.substring(i, i + 3)) || 0;\n      /* eslint-enable */\n      if (score > 0) result.push(i);\n    }\n    return result;\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {parseFromString} from './dom.js';\nimport {Parser} from './parser.js';\n\nconst assert = console.assert;\n\nconst ZWSP_CODEPOINT = 0x200b; // U+200B ZERO WIDTH SPACE\nconst ZWSP = String.fromCharCode(ZWSP_CODEPOINT);\n\n// We could use `Node.TEXT_NODE` and `Node.ELEMENT_NODE` in a browser context,\n// but we define the same here for Node.js environments.\nconst NodeType = {\n  ELEMENT_NODE: 1,\n  TEXT_NODE: 3,\n};\n\nconst DomAction = {\n  Inline: 0, // An inline content, becomes a part of a paragraph.\n  Block: 1, // A nested paragraph.\n  Skip: 2, // Skip the content. The content before and after are connected.\n  Break: 3, // A forced break. The content before and after become paragraphs.\n  NoBreak: 4, // The content provides context, but it's not breakable.\n  BreakOpportunity: 5, // Force a break opportunity.\n} as const;\ntype DomAction = (typeof DomAction)[keyof typeof DomAction];\n\n/**\n * Determines the action from an element name, as defined in\n * {@link https://html.spec.whatwg.org/multipage/rendering.html HTML Rendering}.\n * See also {@link actionForElement}.\n */\nconst domActions: {[name: string]: DomAction} = {\n  // Hidden elements\n  // https://html.spec.whatwg.org/multipage/rendering.html#hidden-elements\n  AREA: DomAction.Skip,\n  BASE: DomAction.Skip,\n  BASEFONT: DomAction.Skip,\n  DATALIST: DomAction.Skip,\n  HEAD: DomAction.Skip,\n  LINK: DomAction.Skip,\n  META: DomAction.Skip,\n  NOEMBED: DomAction.Skip,\n  NOFRAMES: DomAction.Skip,\n  PARAM: DomAction.Skip,\n  RP: DomAction.Skip,\n  SCRIPT: DomAction.Skip,\n  STYLE: DomAction.Skip,\n  TEMPLATE: DomAction.Skip,\n  TITLE: DomAction.Skip,\n  NOSCRIPT: DomAction.Skip,\n\n  // Flow content\n  // https://html.spec.whatwg.org/multipage/rendering.html#flow-content-3\n  HR: DomAction.Break,\n  // Disable if `white-space: pre`.\n  LISTING: DomAction.Skip,\n  PLAINTEXT: DomAction.Skip,\n  PRE: DomAction.Skip,\n  XMP: DomAction.Skip,\n\n  // Phrasing content\n  // https://html.spec.whatwg.org/multipage/rendering.html#phrasing-content-3\n  BR: DomAction.Break,\n  RT: DomAction.Skip,\n  WBR: DomAction.BreakOpportunity,\n\n  // Form controls\n  // https://html.spec.whatwg.org/multipage/rendering.html#form-controls\n  INPUT: DomAction.Skip,\n  SELECT: DomAction.Skip,\n  BUTTON: DomAction.Skip,\n  TEXTAREA: DomAction.Skip,\n\n  // Other elements where the phrase-based line breaking should be disabled.\n  // https://github.com/google/budoux/blob/main/budoux/skip_nodes.json\n  ABBR: DomAction.Skip,\n  CODE: DomAction.Skip,\n  IFRAME: DomAction.Skip,\n  TIME: DomAction.Skip,\n  VAR: DomAction.Skip,\n\n  // Deprecated, but supported in all browsers.\n  // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nobr\n  NOBR: DomAction.NoBreak,\n};\n\nconst defaultBlockElements = new Set([\n  // 15.3.2 The page\n  'HTML',\n  'BODY',\n  // 15.3.3 Flow content\n  'ADDRESS',\n  'BLOCKQUOTE',\n  'CENTER',\n  'DIALOG',\n  'DIV',\n  'FIGURE',\n  'FIGCAPTION',\n  'FOOTER',\n  'FORM',\n  'HEADER',\n  'LEGEND',\n  'LISTING',\n  'MAIN',\n  'P',\n  // 15.3.6 Sections and headings\n  'ARTICLE',\n  'ASIDE',\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n  'HGROUP',\n  'NAV',\n  'SECTION',\n  // 15.3.7 Lists\n  'DIR',\n  'DD',\n  'DL',\n  'DT',\n  'MENU',\n  'OL',\n  'UL',\n  'LI',\n  // 15.3.8 Tables\n  'TABLE',\n  'CAPTION',\n  'COL',\n  'TR',\n  'TD',\n  'TH',\n  // 15.3.12 The fieldset and legend elements\n  'FIELDSET',\n  // 15.5.4 The details and summary elements\n  'DETAILS',\n  'SUMMARY',\n  // 15.5.12 The marquee element\n  'MARQUEE',\n]);\n\n/**\n * Determine the action for a CSS `display` property value.\n * @param display The value of the CSS `display` property.\n * @return The {@link domActions} for the value.\n */\nfunction actionForDisplay(display: string): DomAction {\n  // Handle common cases first.\n  if (display === 'inline') return DomAction.Inline;\n  if (display === 'block') return DomAction.Block;\n\n  // Handle Ruby base as in-flow.\n  if (display.startsWith('ruby')) {\n    if (display === 'ruby-text') return DomAction.Skip;\n    return DomAction.Inline;\n  }\n\n  // Handle other values including multi-value syntax as blocks.\n  // https://drafts.csswg.org/css-display/#the-display-properties\n  return DomAction.Block;\n}\n\n/**\n * Determine the action for an element.\n * @param element An element to determine the action for.\n * @return The {@link domActions} for the element.\n */\nfunction actionForElement(element: Element): DomAction {\n  const nodeName = element.nodeName;\n  const action = domActions[nodeName];\n  if (action !== undefined) return action;\n\n  if (typeof globalThis.getComputedStyle === 'function') {\n    const style = globalThis.getComputedStyle(element);\n    switch (style.whiteSpace) {\n      case 'nowrap':\n      case 'pre':\n        return DomAction.NoBreak;\n    }\n\n    const display = style.display;\n    if (display) return actionForDisplay(display);\n    // `display` is an empty string if the element is not connected.\n  }\n\n  // Use the built-in rules if the `display` property is empty, or if\n  // `getComputedStyle` is missing (e.g., jsdom.)\n  return defaultBlockElements.has(nodeName)\n    ? DomAction.Block\n    : DomAction.Inline;\n}\n\n/**\n * Applies wrapping styles to make linebreak controls work in children.\n * @param element A parent element to apply the styles.\n */\nexport const applyWrapStyle = (element: HTMLElement) => {\n  element.style.wordBreak = 'keep-all';\n  element.style.overflowWrap = 'anywhere';\n};\n\n/**\n * Represents a node in {@link Paragraph}.\n *\n * It wraps a {@link Text} or a {@link string}.\n *\n * A {@link string} provides the context for the parser, but it can't be split.\n */\nclass NodeOrText {\n  nodeOrText: Text | string;\n  chunks: string[] = [];\n  hasBreakOpportunityAfter = false;\n\n  constructor(nodeOrText: Text | string) {\n    this.nodeOrText = nodeOrText;\n  }\n\n  private static isString(value: Text | string): value is string {\n    return typeof value === 'string';\n  }\n\n  get canSplit(): boolean {\n    return !NodeOrText.isString(this.nodeOrText);\n  }\n\n  get text(): string | null {\n    return NodeOrText.isString(this.nodeOrText)\n      ? this.nodeOrText\n      : this.nodeOrText.nodeValue;\n  }\n\n  get length(): number {\n    return this.text?.length ?? 0;\n  }\n\n  /**\n   * Split the {@link Text} in the same way as the {@link chunks}.\n   * Joining all {@link chunks} must be equal to {@link text}.\n   */\n  split(separator: string | Node) {\n    const chunks = this.chunks;\n    assert(chunks.length === 0 || chunks.join('') === this.text);\n    if (chunks.length <= 1) return;\n    if (NodeOrText.isString(this.nodeOrText)) return;\n    const node = this.nodeOrText;\n    if (typeof separator === 'string') {\n      // If the `separator` is a string, insert it at each boundary.\n      node.nodeValue = chunks.join(separator);\n      return;\n    }\n\n    // Otherwise create a `Text` node for each chunk, with the separator node\n    // between them, and replace the `node` with them.\n    const document = node.ownerDocument;\n    let nodes = [];\n    for (const chunk of chunks) {\n      if (chunk) nodes.push(document.createTextNode(chunk));\n      // Add a separator between chunks. To simplify the logic, add a separator\n      // after each chunk, then remove the last one.\n      // To avoid `cloneNode` for the temporary one that is going to be removed,\n      // add `null` as a marker, then replace them with `cloneNode` later.\n      nodes.push(null);\n    }\n    nodes.pop();\n    nodes = nodes.map(n => (n ? n : separator.cloneNode(true)));\n    node.replaceWith(...nodes);\n  }\n}\nexport class NodeOrTextForTesting extends NodeOrText {}\n\n/**\n * Represents a \"paragraph\", broken by block boundaries or forced breaks.\n *\n * A CSS\n * {@link https://drafts.csswg.org/css2/#inline-formatting inline formatting context}\n * is usually a \"paragraph\", but it can be broken into multiple paragraphs by\n * forced breaks such as `<br>`.\n */\nclass Paragraph {\n  element: HTMLElement;\n  nodes: NodeOrText[] = [];\n\n  constructor(element: HTMLElement) {\n    this.element = element;\n  }\n\n  isEmpty(): boolean {\n    return this.nodes.length === 0;\n  }\n  get text(): string {\n    return this.nodes.map(node => node.text).join('');\n  }\n\n  get lastNode(): NodeOrText | undefined {\n    return this.nodes.length ? this.nodes[this.nodes.length - 1] : undefined;\n  }\n  setHasBreakOpportunityAfter() {\n    const lastNode = this.lastNode;\n    if (lastNode) lastNode.hasBreakOpportunityAfter = true;\n  }\n\n  /**\n   * @return Indices of forced break opportunities in the source.\n   * They can be created by `<wbr>` tag or `&ZeroWidthSpace;`.\n   */\n  getForcedOpportunities(): number[] {\n    const opportunities: number[] = [];\n    let len = 0;\n    for (const node of this.nodes) {\n      if (node.canSplit) {\n        const text = node.text;\n        if (text) {\n          for (let i = 0; i < text.length; ++i) {\n            if (text.charCodeAt(i) === ZWSP_CODEPOINT) {\n              opportunities.push(len + i + 1);\n            }\n          }\n        }\n      }\n      len += node.length;\n      if (node.hasBreakOpportunityAfter) {\n        opportunities.push(len);\n      }\n    }\n    return opportunities;\n  }\n\n  /**\n   * @return Filtered {@param boundaries} by excluding\n   * {@link getForcedOpportunities} if it's not empty.\n   * Otherwise {@param boundaries}.\n   */\n  excludeForcedOpportunities(boundaries: number[]): number[] {\n    const forcedOpportunities = this.getForcedOpportunities();\n    if (!forcedOpportunities.length) return boundaries;\n    const set = new Set<number>(forcedOpportunities);\n    return boundaries.filter(i => !set.has(i));\n  }\n}\nexport class ParagraphForTesting extends Paragraph {}\n\n/**\n * Options for {@link HTMLProcessor}.\n */\nexport interface HTMLProcessorOptions {\n  /**\n   * This class name is added to the containing block when the BudouX is applied.\n   * The containing block should have following CSS properties to make it work.\n   * `{ word-break: keep-all; overflow-wrap: anywhere; }`\n   *\n   * When falsy, an inline style is set instead.\n   */\n  className?: string;\n  /**\n   * The separator to insert at each semantics boundary.\n   *\n   * When it's a {@link Node}, a clone of the {@link Node} will be inserted.\n   *\n   * The default value is U+200B ZERO WIDTH SPACE.\n   */\n  separator?: string | Node;\n}\n\n/**\n * Adds HTML processing support to a BudouX {@link Parser}.\n */\nexport class HTMLProcessor {\n  private parser_: Parser;\n  /** See {@link HTMLProcessorOptions.className}. */\n  className?: string;\n  /** See {@link HTMLProcessorOptions.separator}. */\n  separator: string | Node = ZWSP;\n\n  /**\n   * @param parser A BudouX {@link Parser} to compute semantic line breaks.\n   */\n  constructor(parser: Parser, options?: HTMLProcessorOptions) {\n    this.parser_ = parser;\n    if (options !== undefined) {\n      if (options.className !== undefined) this.className = options.className;\n      if (options.separator !== undefined) this.separator = options.separator;\n    }\n  }\n\n  /**\n   * Checks if the given element has a text node in its children.\n   *\n   * @param ele An element to be checked.\n   * @return Whether the element has a child text node.\n   */\n  static hasChildTextNode(ele: HTMLElement) {\n    for (const child of ele.childNodes) {\n      if (child.nodeType === NodeType.TEXT_NODE) return true;\n    }\n    return false;\n  }\n\n  /**\n   * Applies markups for semantic line breaks to the given HTML element.\n   *\n   * It breaks descendant nodes into paragraphs,\n   * and applies the BudouX to each paragraph.\n   * @param element The input element.\n   */\n  applyToElement(element: HTMLElement) {\n    for (const block of this.getBlocks(element)) {\n      assert(!block.isEmpty());\n      this.applyToParagraph(block);\n    }\n  }\n\n  /**\n   * Find paragraphs from a given HTML element.\n   * @param element The root element to find paragraphs.\n   * @param parent The parent {@link Paragraph} if any.\n   * @return A list of {@link Paragraph}s.\n   */\n  *getBlocks(\n    element: HTMLElement,\n    parent?: Paragraph\n  ): IterableIterator<Paragraph> {\n    assert(element.nodeType === NodeType.ELEMENT_NODE);\n\n    // Skip if it was once applied to this element.\n    if (this.className && element.classList.contains(this.className)) return;\n\n    const action = actionForElement(element);\n    if (action === DomAction.Skip) return;\n    if (action === DomAction.Break) {\n      if (parent && !parent.isEmpty()) {\n        parent.setHasBreakOpportunityAfter();\n        yield parent;\n        parent.nodes = [];\n      }\n      assert(!element.firstChild);\n      return;\n    }\n    if (action === DomAction.BreakOpportunity) {\n      if (parent) parent.setHasBreakOpportunityAfter();\n      return;\n    }\n\n    // Determine if this element creates a new inline formatting context, or if\n    // this element belongs to the parent inline formatting context.\n    assert(\n      action === DomAction.Block ||\n        action === DomAction.Inline ||\n        action === DomAction.NoBreak\n    );\n    const isNewBlock = !parent || action === DomAction.Block;\n    const block = isNewBlock ? new Paragraph(element) : parent;\n\n    // Collect all text nodes in this inline formatting context, while searching\n    // descendant elements recursively.\n    for (const child of element.childNodes) {\n      switch (child.nodeType) {\n        case NodeType.ELEMENT_NODE:\n          for (const childBlock of this.getBlocks(child as HTMLElement, block))\n            yield childBlock;\n          break;\n        case NodeType.TEXT_NODE:\n          if (action === DomAction.NoBreak) {\n            const text = child.nodeValue;\n            if (text) {\n              block.nodes.push(new NodeOrText(text));\n            }\n            break;\n          }\n          block.nodes.push(new NodeOrText(child as Text));\n          break;\n      }\n    }\n\n    // Apply if this is an inline formatting context.\n    if (isNewBlock && !block.isEmpty()) yield block;\n  }\n\n  /**\n   * Apply the BudouX to the given {@link Paragraph}.\n   * @param paragraph The {@link Paragraph} to apply.\n   */\n  applyToParagraph(paragraph: Paragraph): void {\n    assert(paragraph.nodes.length > 0);\n    if (!paragraph.nodes.some(node => node.canSplit)) return;\n    const text = paragraph.text;\n    // No changes if whitespace-only.\n    if (/^\\s*$/.test(text)) return;\n\n    // Compute the phrase boundaries.\n    const boundaries = this.parser_.parseBoundaries(text);\n    // No changes if single phrase.\n    if (boundaries.length <= 0) return;\n    // The boundaries should be between 1 and `text.length - 1` in the\n    // ascending order.\n    assert(boundaries[0] > 0);\n    assert(boundaries.every((x, i) => i === 0 || x > boundaries[i - 1]));\n    assert(boundaries[boundaries.length - 1] < text.length);\n\n    const adjustedBoundaries = paragraph.excludeForcedOpportunities(boundaries);\n\n    // Add a sentinel to help iterating.\n    adjustedBoundaries.push(text.length + 1);\n\n    this.splitNodes(paragraph.nodes, adjustedBoundaries);\n    this.applyBlockStyle(paragraph.element);\n  }\n\n  /**\n   * Split {@link NodeOrText} at the specified boundaries.\n   * @param nodes A list of {@link NodeOrText}.\n   * @param boundaries A list of indices of the text to split at.\n   */\n  splitNodes(nodes: NodeOrText[], boundaries: number[]): void {\n    assert(boundaries.length > 0);\n    assert(boundaries.every((x, i) => i === 0 || x > boundaries[i - 1]));\n    const textLen = nodes.reduce((sum, node) => sum + node.length, 0);\n    // The last boundary must be a sentinel.\n    assert(boundaries[boundaries.length - 1] > textLen);\n\n    // Distribute `boundaries` to `node.chunks`.\n    let boundary_index = 0;\n    let boundary = boundaries[0];\n    assert(boundary > 0);\n    let nodeStart = 0; // the start index of the `nodeText` in the whole text.\n    let lastNode: NodeOrText | null = null;\n    for (const node of nodes) {\n      assert(boundary >= nodeStart);\n      assert(node.chunks.length === 0);\n      const nodeText = node.text;\n      if (!nodeText) continue;\n      const nodeLength = nodeText.length;\n      const nodeEnd = nodeStart + nodeLength;\n      assert(!lastNode || lastNode.canSplit);\n      if (!node.canSplit) {\n        // If there's a boundary between nodes and `lastNode.canSplit`, add a\n        // boundary to the end of the `lastNode`.\n        if (lastNode && boundary === nodeStart) {\n          if (lastNode.chunks.length === 0)\n            lastNode.chunks.push(lastNode.text ?? '');\n          lastNode.chunks.push('');\n        }\n        while (boundary < nodeEnd) {\n          boundary = boundaries[++boundary_index];\n        }\n        lastNode = null;\n        nodeStart = nodeEnd;\n        continue;\n      }\n\n      // Check if the next boundary is in this `node`.\n      lastNode = node;\n      if (boundary >= nodeEnd) {\n        nodeStart = nodeEnd;\n        continue;\n      }\n\n      // Compute the boundary indices in the `node`.\n      const chunks = node.chunks;\n      let chunkStartInNode = 0;\n      while (boundary < nodeEnd) {\n        const boundaryInNode = boundary - nodeStart;\n        assert(boundaryInNode >= chunkStartInNode);\n        chunks.push(nodeText.slice(chunkStartInNode, boundaryInNode));\n        chunkStartInNode = boundaryInNode;\n        boundary = boundaries[++boundary_index];\n      }\n      // Add the rest of the `nodeText`.\n      assert(chunkStartInNode < nodeLength);\n      chunks.push(nodeText.slice(chunkStartInNode));\n\n      nodeStart = nodeEnd;\n    }\n    // Check if all nodes and boundaries are consumed.\n    assert(nodeStart === textLen);\n    assert(boundary_index < boundaries.length);\n    assert(boundaries[boundary_index] >= textLen);\n\n    // `node.chunks` are finalized. Split them.\n    for (const node of nodes) {\n      node.split(this.separator);\n    }\n  }\n\n  /**\n   * Applies the block style to the given element.\n   * @param element The element to apply the block style.\n   */\n  applyBlockStyle(element: HTMLElement): void {\n    if (this.className) {\n      element.classList.add(this.className);\n      return;\n    }\n    applyWrapStyle(element);\n  }\n}\n\n/**\n * BudouX {@link Parser} with HTML processing support.\n */\nexport class HTMLProcessingParser extends Parser {\n  htmlProcessor: HTMLProcessor;\n\n  constructor(\n    model: {[key: string]: {[key: string]: number}},\n    htmlProcessorOptions: HTMLProcessorOptions = {\n      separator: ZWSP,\n    }\n  ) {\n    super(model);\n    this.htmlProcessor = new HTMLProcessor(this, htmlProcessorOptions);\n  }\n\n  /**\n   * Applies markups for semantic line breaks to the given HTML element.\n   * @param parentElement The input element.\n   */\n  applyToElement(parentElement: HTMLElement) {\n    this.htmlProcessor.applyToElement(parentElement);\n  }\n\n  /**\n   * Translates the given HTML string to another HTML string with markups\n   * for semantic line breaks.\n   * @param html An input html string.\n   * @return The translated HTML string.\n   */\n  translateHTMLString(html: string) {\n    if (html === '') return html;\n    const doc = parseFromString(html);\n    if (HTMLProcessor.hasChildTextNode(doc.body)) {\n      const wrapper = doc.createElement('span') as unknown as HTMLElement;\n      wrapper.append(...doc.body.childNodes);\n      doc.body.append(wrapper);\n    }\n    this.applyToElement(doc.body.childNodes[0] as HTMLElement);\n    return doc.body.innerHTML;\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {model as jaModel} from './data/models/ja.js';\nimport {model as zhHansModel} from './data/models/zh-hans.js';\nimport {model as zhHantModel} from './data/models/zh-hant.js';\nimport {model as thModel} from './data/models/th.js';\nimport {HTMLProcessingParser} from './html_processor.js';\n\nexport {Parser} from './parser.js';\nexport {HTMLProcessor, HTMLProcessingParser} from './html_processor.js';\nexport {jaModel, zhHansModel, zhHantModel};\n\n/**\n * Loads a parser equipped with the default Japanese model.\n * @return A parser with the default Japanese model.\n */\nexport const loadDefaultJapaneseParser = () => {\n  return new HTMLProcessingParser(jaModel);\n};\n\n/**\n * Loads a parser equipped with the default Simplified Chinese model.\n * @return A parser with the default Simplified Chinese model.\n */\nexport const loadDefaultSimplifiedChineseParser = () => {\n  return new HTMLProcessingParser(zhHansModel);\n};\n\n/**\n * Loads a parser equipped with the default Traditional Chinese model.\n * @return A parser with the default Traditional Chinese model.\n */\nexport const loadDefaultTraditionalChineseParser = () => {\n  return new HTMLProcessingParser(zhHantModel);\n};\n\n/**\n * Loads a parser equipped with the default Thai model.\n * @returns A parser with the default Thai model.\n */\nexport const loadDefaultThaiParser = () => {\n  return new HTMLProcessingParser(thModel);\n};\n/**\n * Loads available default parsers.\n * @return A map between available lang codes and their default parsers.\n */\nexport const loadDefaultParsers = () => {\n  return new Map([\n    ['ja', loadDefaultJapaneseParser()],\n    ['zh-hans', loadDefaultSimplifiedChineseParser()],\n    ['zh-hant', loadDefaultTraditionalChineseParser()],\n    ['th', loadDefaultThaiParser()],\n  ]);\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {applyWrapStyle, type HTMLProcessingParser} from '../html_processor.js';\n\nconst MUTATION_OBSERVER_OPTIONS = {\n  attributes: false,\n  characterData: true,\n  childList: true,\n  subtree: true,\n};\n\n/**\n * Base BudouX Web component.\n */\nexport abstract class BudouXBaseElement extends HTMLElement {\n  abstract parser: HTMLProcessingParser;\n  observer: MutationObserver;\n\n  /**\n   * Base BudouX Web component constructor.\n   */\n  constructor() {\n    super();\n\n    this.observer = new MutationObserver(this.sync.bind(this));\n    this.observer.observe(this, MUTATION_OBSERVER_OPTIONS);\n  }\n\n  connectedCallback() {\n    applyWrapStyle(this);\n    this.sync();\n  }\n\n  attributeChangedCallback() {\n    this.sync();\n  }\n\n  sync() {\n    this.observer.disconnect();\n    this.parser.applyToElement(this);\n    this.observer.observe(this, MUTATION_OBSERVER_OPTIONS);\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  type HTMLProcessingParser,\n  loadDefaultJapaneseParser,\n} from '../index.js';\nimport {BudouXBaseElement} from './budoux-base.js';\n\n/**\n * BudouX Japanese Web component.\n */\nexport class BudouXJapaneseElement extends BudouXBaseElement {\n  parser: HTMLProcessingParser;\n\n  /**\n   * BudouX Japanese Web component constructor.\n   */\n  constructor() {\n    super();\n    this.parser = loadDefaultJapaneseParser();\n  }\n}\n\ncustomElements.define('budoux-ja', BudouXJapaneseElement);\n"],
  "mappings": "mBAAO,IAAMA,EAAgD,CAAC,IAAM,CAAC,SAAI,KAAK,OAAI,KAAK,SAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,MAAM,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,SAAI,KAAK,OAAI,KAAK,SAAI,KAAK,OAAI,KAAK,SAAI,KAAK,OAAI,KAAK,OAAI,KAAK,SAAI,KAAK,SAAI,KAAK,SAAI,KAAK,SAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,MAAM,SAAI,KAAK,OAAI,MAAM,SAAI,KAAK,OAAI,MAAM,OAAI,IAAI,OAAI,MAAM,OAAI,KAAK,SAAI,KAAK,SAAI,KAAK,OAAI,MAAM,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,MAAM,OAAI,MAAM,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,SAAI,KAAK,OAAI,KAAK,OAAI,MAAM,OAAI,KAAK,SAAI,MAAM,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,MAAM,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,SAAI,KAAK,SAAI,KAAK,OAAI,IAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,SAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,SAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,GAAG,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,SAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,SAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,SAAI,IAAI,OAAI,KAAK,OAAI,IAAI,SAAI,GAAG,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,GAAG,OAAI,GAAG,OAAI,IAAI,OAAI,IAAI,OAAI,GAAG,OAAI,GAAG,OAAI,GAAG,EAAE,IAAM,CAAC,SAAI,MAAM,OAAI,MAAM,OAAI,MAAM,OAAI,MAAM,OAAI,MAAM,OAAI,MAAM,SAAI,MAAM,OAAI,MAAM,OAAI,MAAM,OAAI,MAAM,OAAI,MAAM,OAAI,MAAM,OAAI,MAAM,OAAI,MAAM,OAAI,MAAM,OAAI,MAAM,OAAI,IAAI,OAAI,MAAM,OAAI,MAAM,OAAI,IAAI,OAAI,MAAM,OAAI,MAAM,OAAI,MAAM,OAAI,IAAI,OAAI,MAAM,OAAI,KAAK,OAAI,MAAM,OAAI,MAAM,OAAI,MAAM,OAAI,MAAM,OAAI,MAAM,OAAI,MAAM,OAAI,MAAM,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,MAAM,OAAI,KAAK,OAAI,IAAI,SAAI,MAAM,OAAI,MAAM,OAAI,MAAM,OAAI,MAAM,OAAI,MAAM,OAAI,MAAM,OAAI,KAAK,SAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,MAAM,OAAI,KAAK,OAAI,IAAI,SAAI,MAAM,OAAI,MAAM,OAAI,IAAI,OAAI,KAAK,SAAI,MAAM,OAAI,MAAM,OAAI,MAAM,OAAI,IAAI,SAAI,KAAK,OAAI,MAAM,SAAI,IAAI,OAAI,KAAK,OAAI,MAAM,OAAI,IAAI,OAAI,IAAI,OAAI,MAAM,OAAI,MAAM,OAAI,MAAM,OAAI,MAAM,OAAI,MAAM,OAAI,KAAK,SAAI,KAAK,OAAI,IAAI,SAAI,MAAM,OAAI,MAAM,SAAI,MAAM,SAAI,MAAM,OAAI,MAAM,OAAI,KAAK,OAAI,KAAK,OAAI,MAAM,OAAI,MAAM,OAAI,MAAM,OAAI,KAAK,SAAI,KAAK,SAAI,MAAM,OAAI,IAAI,OAAI,IAAI,OAAI,MAAM,OAAI,KAAK,OAAI,KAAK,OAAI,MAAM,OAAI,IAAI,OAAI,IAAI,SAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,MAAM,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,MAAM,SAAI,MAAM,SAAI,MAAM,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,MAAM,OAAI,IAAI,OAAI,MAAM,OAAI,MAAM,OAAI,GAAG,OAAI,KAAK,OAAI,KAAK,SAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,MAAM,OAAI,IAAI,OAAI,KAAK,SAAI,KAAK,OAAI,MAAM,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,SAAI,MAAM,OAAI,IAAI,OAAI,IAAI,SAAI,MAAM,SAAI,MAAM,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,SAAI,GAAG,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,GAAG,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,GAAG,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,GAAG,SAAI,KAAK,SAAI,KAAK,OAAI,KAAK,SAAI,GAAG,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,GAAG,OAAI,GAAG,OAAI,GAAG,OAAI,GAAG,OAAI,IAAI,OAAI,IAAI,OAAI,GAAG,OAAI,GAAG,OAAI,EAAE,OAAI,CAAC,EAAE,IAAM,CAAC,SAAI,MAAM,OAAI,KAAK,OAAI,KAAK,SAAI,MAAM,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,SAAI,MAAM,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,MAAM,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,SAAI,MAAM,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,MAAM,OAAI,IAAI,OAAI,IAAI,SAAI,KAAK,SAAI,KAAK,OAAI,IAAI,OAAI,GAAG,OAAI,MAAM,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,MAAM,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,SAAI,KAAK,OAAI,IAAI,OAAI,KAAK,SAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,GAAG,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,GAAG,OAAI,KAAK,OAAI,IAAI,OAAI,GAAG,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,GAAG,OAAI,EAAE,SAAI,KAAK,SAAI,IAAI,OAAI,GAAG,SAAI,KAAK,OAAI,IAAI,OAAI,GAAG,OAAI,GAAG,OAAI,IAAI,SAAI,IAAI,OAAI,IAAI,OAAI,EAAE,OAAI,CAAC,EAAE,IAAM,CAAC,SAAI,MAAM,SAAI,MAAM,OAAI,MAAM,OAAI,MAAM,OAAI,KAAK,OAAI,MAAM,OAAI,GAAG,OAAI,EAAE,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,GAAG,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,SAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,MAAM,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,MAAM,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,MAAM,OAAI,IAAI,OAAI,IAAI,OAAI,MAAM,OAAI,KAAK,OAAI,MAAM,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,GAAG,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,SAAI,IAAI,OAAI,IAAI,OAAI,IAAI,SAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,GAAG,OAAI,KAAK,OAAI,KAAK,OAAI,GAAG,OAAI,GAAG,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,GAAG,OAAI,IAAI,OAAI,GAAG,OAAI,IAAI,OAAI,KAAK,OAAI,GAAG,SAAI,IAAI,SAAI,IAAI,OAAI,IAAI,OAAI,GAAG,OAAI,GAAG,OAAI,GAAG,OAAI,GAAG,OAAI,IAAI,OAAI,IAAI,SAAI,IAAI,OAAI,IAAI,OAAI,IAAI,SAAI,GAAG,OAAI,IAAI,OAAI,EAAE,EAAE,IAAM,CAAC,OAAI,IAAI,SAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,GAAG,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,GAAG,OAAI,KAAK,OAAI,GAAG,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,GAAG,OAAI,IAAI,OAAI,IAAI,OAAI,GAAG,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,MAAM,OAAI,KAAK,OAAI,IAAI,SAAI,IAAI,OAAI,IAAI,SAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,SAAI,KAAK,SAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,GAAG,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,GAAG,OAAI,IAAI,OAAI,KAAK,SAAI,GAAG,OAAI,GAAG,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,GAAG,OAAI,IAAI,OAAI,GAAG,OAAI,IAAI,OAAI,GAAG,OAAI,EAAE,OAAI,EAAE,EAAE,IAAM,CAAC,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,KAAK,OAAI,MAAM,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,GAAG,OAAI,KAAK,SAAI,IAAI,OAAI,IAAI,OAAI,MAAM,OAAI,KAAK,OAAI,GAAG,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,SAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,SAAI,IAAI,OAAI,KAAK,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,SAAI,KAAK,OAAI,GAAG,OAAI,KAAK,OAAI,IAAI,OAAI,GAAG,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,KAAK,OAAI,GAAG,OAAI,IAAI,OAAI,IAAI,SAAI,IAAI,OAAI,IAAI,OAAI,GAAG,OAAI,IAAI,SAAI,IAAI,OAAI,GAAG,OAAI,IAAI,OAAI,GAAG,SAAI,IAAI,OAAI,IAAI,SAAI,GAAG,OAAI,KAAK,OAAI,GAAG,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,GAAG,OAAI,GAAG,OAAI,IAAI,OAAI,IAAI,OAAI,IAAI,OAAI,GAAG,OAAI,IAAI,OAAI,GAAG,OAAI,GAAG,OAAI,IAAI,OAAI,EAAE,EAAE,IAAM,CAAC,aAAK,KAAK,aAAK,MAAM,aAAK,IAAI,aAAK,MAAM,aAAK,MAAM,aAAK,MAAM,aAAK,MAAM,aAAK,MAAM,aAAK,KAAK,aAAK,MAAM,aAAK,MAAM,aAAK,MAAM,aAAK,MAAM,aAAK,KAAK,aAAK,MAAM,aAAK,MAAM,aAAK,MAAM,aAAK,MAAM,eAAK,MAAM,aAAK,MAAM,aAAK,MAAM,aAAK,MAAM,aAAK,KAAK,aAAK,MAAM,aAAK,KAAK,aAAK,MAAM,aAAK,MAAM,aAAK,MAAM,aAAK,MAAM,eAAK,KAAK,aAAK,MAAM,aAAK,MAAM,aAAK,MAAM,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,MAAM,aAAK,MAAM,aAAK,MAAM,aAAK,MAAM,aAAK,KAAK,aAAK,KAAK,aAAK,MAAM,aAAK,KAAK,aAAK,MAAM,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,MAAM,aAAK,MAAM,eAAK,MAAM,aAAK,MAAM,aAAK,MAAM,aAAK,MAAM,aAAK,MAAM,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,MAAM,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,eAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,MAAM,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,GAAG,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,eAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,eAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,eAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,GAAG,aAAK,KAAK,aAAK,GAAG,aAAK,GAAG,aAAK,GAAG,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,GAAG,EAAE,IAAM,CAAC,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,MAAM,aAAK,IAAI,aAAK,KAAK,aAAK,MAAM,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,MAAM,aAAK,IAAI,aAAK,KAAK,aAAK,MAAM,aAAK,IAAI,aAAK,MAAM,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,MAAM,aAAK,IAAI,aAAK,MAAM,aAAK,IAAI,aAAK,MAAM,aAAK,IAAI,aAAK,KAAK,eAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,MAAM,aAAK,MAAM,aAAK,IAAI,aAAK,KAAK,eAAK,KAAK,aAAK,MAAM,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,eAAK,KAAK,aAAK,KAAK,aAAK,IAAI,eAAK,IAAI,aAAK,KAAK,eAAK,KAAK,aAAK,KAAK,aAAK,MAAM,eAAK,IAAI,aAAK,IAAI,aAAK,KAAK,eAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,MAAM,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,GAAG,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,eAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,GAAG,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,eAAK,IAAI,aAAK,KAAK,eAAK,IAAI,eAAK,IAAI,eAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,eAAK,KAAK,aAAK,IAAI,eAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,eAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,eAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,eAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,GAAG,aAAK,IAAI,eAAK,GAAG,aAAK,IAAI,aAAK,GAAG,aAAK,GAAG,aAAK,GAAG,aAAK,EAAE,EAAE,IAAM,CAAC,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,MAAM,aAAK,KAAK,aAAK,IAAI,aAAK,MAAM,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,MAAM,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,MAAM,aAAK,KAAK,aAAK,MAAM,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,eAAK,MAAM,aAAK,MAAM,aAAK,IAAI,aAAK,KAAK,aAAK,MAAM,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,MAAM,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,eAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,MAAM,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,eAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,GAAG,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,KAAK,aAAK,EAAE,aAAK,IAAI,aAAK,IAAI,aAAK,KAAK,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,eAAK,IAAI,aAAK,GAAG,aAAK,IAAI,aAAK,GAAG,aAAK,IAAI,aAAK,GAAG,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,IAAI,aAAK,EAAE,EAAE,IAAM,CAAC,mBAAM,IAAI,mBAAM,MAAM,mBAAM,MAAM,mBAAM,IAAI,qBAAM,MAAM,mBAAM,MAAM,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,MAAM,mBAAM,MAAM,mBAAM,MAAM,mBAAM,KAAK,mBAAM,MAAM,mBAAM,MAAM,mBAAM,IAAI,mBAAM,KAAK,qBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,GAAG,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,EAAE,EAAE,IAAM,CAAC,mBAAM,KAAK,mBAAM,MAAM,mBAAM,KAAK,qBAAM,MAAM,mBAAM,MAAM,mBAAM,KAAK,mBAAM,KAAK,qBAAM,MAAM,mBAAM,MAAM,mBAAM,KAAK,qBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,qBAAM,IAAI,mBAAM,KAAK,qBAAM,KAAK,mBAAM,KAAK,mBAAM,MAAM,mBAAM,IAAI,qBAAM,IAAI,qBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,GAAG,mBAAM,IAAI,mBAAM,KAAK,mBAAM,IAAI,mBAAM,IAAI,mBAAM,IAAI,qBAAM,GAAG,mBAAM,GAAG,mBAAM,EAAE,EAAE,IAAM,CAAC,mBAAM,MAAM,mBAAM,MAAM,mBAAM,MAAM,mBAAM,KAAK,mBAAM,MAAM,mBAAM,MAAM,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,GAAG,mBAAM,GAAG,EAAE,IAAM,CAAC,mBAAM,IAAI,mBAAM,KAAK,mBAAM,KAAK,qBAAM,KAAK,mBAAM,MAAM,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,KAAK,mBAAM,IAAI,mBAAM,I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",
  "names": ["model", "parseFromString", "html", "Parser", "model", "k", "v", "group", "prev", "curr", "sentence", "boundaries", "result", "start", "boundary", "score", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_j", "_k", "_l", "_m", "_o", "assert", "ZWSP_CODEPOINT", "ZWSP", "NodeType", "DomAction", "domActions", "defaultBlockElements", "actionForDisplay", "display", "actionForElement", "element", "nodeName", "action", "style", "applyWrapStyle", "NodeOrText", "_NodeOrText", "nodeOrText", "value", "_b", "_a", "separator", "chunks", "node", "document", "nodes", "chunk", "n", "Paragraph", "element", "node", "lastNode", "opportunities", "len", "text", "i", "ZWSP_CODEPOINT", "boundaries", "forcedOpportunities", "set", "HTMLProcessor", "parser", "options", "ZWSP", "ele", "child", "NodeType", "element", "block", "assert", "parent", "action", "actionForElement", "DomAction", "isNewBlock", "Paragraph", "childBlock", "text", "NodeOrText", "paragraph", "node", "boundaries", "x", "i", "adjustedBoundaries", "nodes", "textLen", "sum", "boundary_index", "boundary", "nodeStart", "lastNode", "nodeText", "nodeLength", "nodeEnd", "_a", "chunks", "chunkStartInNode", "boundaryInNode", "applyWrapStyle", "HTMLProcessingParser", "Parser", "model", "htmlProcessorOptions", "parentElement", "html", "doc", "parseFromString", "wrapper", "loadDefaultJapaneseParser", "HTMLProcessingParser", "model", "MUTATION_OBSERVER_OPTIONS", "BudouXBaseElement", "applyWrapStyle", "BudouXJapaneseElement", "BudouXBaseElement", "loadDefaultJapaneseParser"]
}
