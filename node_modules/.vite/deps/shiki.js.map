{
  "version": 3,
  "sources": ["../../@shikijs/types/dist/index.mjs", "../../@shikijs/vscode-textmate/dist/index.js", "../../html-void-elements/index.js", "../../property-information/lib/util/schema.js", "../../property-information/lib/util/merge.js", "../../property-information/lib/normalize.js", "../../property-information/lib/util/info.js", "../../property-information/lib/util/types.js", "../../property-information/lib/util/defined-info.js", "../../property-information/lib/util/create.js", "../../property-information/lib/aria.js", "../../property-information/lib/util/case-sensitive-transform.js", "../../property-information/lib/util/case-insensitive-transform.js", "../../property-information/lib/html.js", "../../property-information/lib/svg.js", "../../property-information/lib/xlink.js", "../../property-information/lib/xmlns.js", "../../property-information/lib/xml.js", "../../property-information/lib/find.js", "../../property-information/index.js", "../../zwitch/index.js", "../../stringify-entities/lib/core.js", "../../stringify-entities/lib/util/to-hexadecimal.js", "../../stringify-entities/lib/util/to-decimal.js", "../../character-entities-legacy/index.js", "../../character-entities-html4/index.js", "../../stringify-entities/lib/constant/dangerous.js", "../../stringify-entities/lib/util/to-named.js", "../../stringify-entities/lib/util/format-smart.js", "../../stringify-entities/lib/index.js", "../../hast-util-to-html/lib/handle/comment.js", "../../hast-util-to-html/lib/handle/doctype.js", "../../ccount/index.js", "../../comma-separated-tokens/index.js", "../../space-separated-tokens/index.js", "../../hast-util-whitespace/lib/index.js", "../../hast-util-to-html/lib/omission/util/siblings.js", "../../hast-util-to-html/lib/omission/omission.js", "../../hast-util-to-html/lib/omission/closing.js", "../../hast-util-to-html/lib/omission/opening.js", "../../hast-util-to-html/lib/handle/element.js", "../../hast-util-to-html/lib/handle/text.js", "../../hast-util-to-html/lib/handle/raw.js", "../../hast-util-to-html/lib/handle/root.js", "../../hast-util-to-html/lib/handle/index.js", "../../hast-util-to-html/lib/index.js", "../../@shikijs/core/dist/index.mjs", "../../shiki/dist/langs.mjs", "../../shiki/dist/themes.mjs", "../../@shikijs/engine-oniguruma/dist/index.mjs", "../../shiki/dist/bundle-full.mjs", "../../oniguruma-parser/src/utils.ts", "../../oniguruma-parser/src/tokenizer/tokenize.ts", "../../oniguruma-parser/src/parser/node-utils.ts", "../../oniguruma-parser/src/parser/parse.ts", "../../oniguruma-parser/src/traverser/traverse.ts", "../../regex/src/utils-internals.js", "../../regex-utilities/src/index.js", "../../regex/src/atomic.js", "../../regex-recursion/src/index.js", "../../oniguruma-to-es/src/utils.js", "../../oniguruma-to-es/src/options.js", "../../oniguruma-to-es/src/unicode.js", "../../oniguruma-to-es/src/transform.js", "../../oniguruma-to-es/src/generate.js", "../../oniguruma-to-es/src/subclass.js", "../../oniguruma-to-es/src/index.js", "../../@shikijs/engine-javascript/dist/shared/engine-javascript.hzpS1_41.mjs", "../../@shikijs/engine-javascript/dist/engine-compile.mjs"],
  "sourcesContent": ["class ShikiError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"ShikiError\";\n  }\n}\n\nexport { ShikiError };\n", "// src/utils.ts\nfunction clone(something) {\n  return doClone(something);\n}\nfunction doClone(something) {\n  if (Array.isArray(something)) {\n    return cloneArray(something);\n  }\n  if (something instanceof RegExp) {\n    return something;\n  }\n  if (typeof something === \"object\") {\n    return cloneObj(something);\n  }\n  return something;\n}\nfunction cloneArray(arr) {\n  let r = [];\n  for (let i = 0, len = arr.length; i < len; i++) {\n    r[i] = doClone(arr[i]);\n  }\n  return r;\n}\nfunction cloneObj(obj) {\n  let r = {};\n  for (let key in obj) {\n    r[key] = doClone(obj[key]);\n  }\n  return r;\n}\nfunction mergeObjects(target, ...sources) {\n  sources.forEach((source) => {\n    for (let key in source) {\n      target[key] = source[key];\n    }\n  });\n  return target;\n}\nfunction basename(path) {\n  const idx = ~path.lastIndexOf(\"/\") || ~path.lastIndexOf(\"\\\\\");\n  if (idx === 0) {\n    return path;\n  } else if (~idx === path.length - 1) {\n    return basename(path.substring(0, path.length - 1));\n  } else {\n    return path.substr(~idx + 1);\n  }\n}\nvar CAPTURING_REGEX_SOURCE = /\\$(\\d+)|\\${(\\d+):\\/(downcase|upcase)}/g;\nvar RegexSource = class {\n  static hasCaptures(regexSource) {\n    if (regexSource === null) {\n      return false;\n    }\n    CAPTURING_REGEX_SOURCE.lastIndex = 0;\n    return CAPTURING_REGEX_SOURCE.test(regexSource);\n  }\n  static replaceCaptures(regexSource, captureSource, captureIndices) {\n    return regexSource.replace(CAPTURING_REGEX_SOURCE, (match, index, commandIndex, command) => {\n      let capture = captureIndices[parseInt(index || commandIndex, 10)];\n      if (capture) {\n        let result = captureSource.substring(capture.start, capture.end);\n        while (result[0] === \".\") {\n          result = result.substring(1);\n        }\n        switch (command) {\n          case \"downcase\":\n            return result.toLowerCase();\n          case \"upcase\":\n            return result.toUpperCase();\n          default:\n            return result;\n        }\n      } else {\n        return match;\n      }\n    });\n  }\n};\nfunction strcmp(a, b) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\nfunction strArrCmp(a, b) {\n  if (a === null && b === null) {\n    return 0;\n  }\n  if (!a) {\n    return -1;\n  }\n  if (!b) {\n    return 1;\n  }\n  let len1 = a.length;\n  let len2 = b.length;\n  if (len1 === len2) {\n    for (let i = 0; i < len1; i++) {\n      let res = strcmp(a[i], b[i]);\n      if (res !== 0) {\n        return res;\n      }\n    }\n    return 0;\n  }\n  return len1 - len2;\n}\nfunction isValidHexColor(hex) {\n  if (/^#[0-9a-f]{6}$/i.test(hex)) {\n    return true;\n  }\n  if (/^#[0-9a-f]{8}$/i.test(hex)) {\n    return true;\n  }\n  if (/^#[0-9a-f]{3}$/i.test(hex)) {\n    return true;\n  }\n  if (/^#[0-9a-f]{4}$/i.test(hex)) {\n    return true;\n  }\n  return false;\n}\nfunction escapeRegExpCharacters(value) {\n  return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, \"\\\\$&\");\n}\nvar CachedFn = class {\n  constructor(fn) {\n    this.fn = fn;\n  }\n  cache = /* @__PURE__ */ new Map();\n  get(key) {\n    if (this.cache.has(key)) {\n      return this.cache.get(key);\n    }\n    const value = this.fn(key);\n    this.cache.set(key, value);\n    return value;\n  }\n};\n\n// src/theme.ts\nvar Theme = class {\n  constructor(_colorMap, _defaults, _root) {\n    this._colorMap = _colorMap;\n    this._defaults = _defaults;\n    this._root = _root;\n  }\n  static createFromRawTheme(source, colorMap) {\n    return this.createFromParsedTheme(parseTheme(source), colorMap);\n  }\n  static createFromParsedTheme(source, colorMap) {\n    return resolveParsedThemeRules(source, colorMap);\n  }\n  _cachedMatchRoot = new CachedFn(\n    (scopeName) => this._root.match(scopeName)\n  );\n  getColorMap() {\n    return this._colorMap.getColorMap();\n  }\n  getDefaults() {\n    return this._defaults;\n  }\n  match(scopePath) {\n    if (scopePath === null) {\n      return this._defaults;\n    }\n    const scopeName = scopePath.scopeName;\n    const matchingTrieElements = this._cachedMatchRoot.get(scopeName);\n    const effectiveRule = matchingTrieElements.find(\n      (v) => _scopePathMatchesParentScopes(scopePath.parent, v.parentScopes)\n    );\n    if (!effectiveRule) {\n      return null;\n    }\n    return new StyleAttributes(\n      effectiveRule.fontStyle,\n      effectiveRule.foreground,\n      effectiveRule.background\n    );\n  }\n};\nvar ScopeStack = class _ScopeStack {\n  constructor(parent, scopeName) {\n    this.parent = parent;\n    this.scopeName = scopeName;\n  }\n  static push(path, scopeNames) {\n    for (const name of scopeNames) {\n      path = new _ScopeStack(path, name);\n    }\n    return path;\n  }\n  static from(...segments) {\n    let result = null;\n    for (let i = 0; i < segments.length; i++) {\n      result = new _ScopeStack(result, segments[i]);\n    }\n    return result;\n  }\n  push(scopeName) {\n    return new _ScopeStack(this, scopeName);\n  }\n  getSegments() {\n    let item = this;\n    const result = [];\n    while (item) {\n      result.push(item.scopeName);\n      item = item.parent;\n    }\n    result.reverse();\n    return result;\n  }\n  toString() {\n    return this.getSegments().join(\" \");\n  }\n  extends(other) {\n    if (this === other) {\n      return true;\n    }\n    if (this.parent === null) {\n      return false;\n    }\n    return this.parent.extends(other);\n  }\n  getExtensionIfDefined(base) {\n    const result = [];\n    let item = this;\n    while (item && item !== base) {\n      result.push(item.scopeName);\n      item = item.parent;\n    }\n    return item === base ? result.reverse() : void 0;\n  }\n};\nfunction _scopePathMatchesParentScopes(scopePath, parentScopes) {\n  if (parentScopes.length === 0) {\n    return true;\n  }\n  for (let index = 0; index < parentScopes.length; index++) {\n    let scopePattern = parentScopes[index];\n    let scopeMustMatch = false;\n    if (scopePattern === \">\") {\n      if (index === parentScopes.length - 1) {\n        return false;\n      }\n      scopePattern = parentScopes[++index];\n      scopeMustMatch = true;\n    }\n    while (scopePath) {\n      if (_matchesScope(scopePath.scopeName, scopePattern)) {\n        break;\n      }\n      if (scopeMustMatch) {\n        return false;\n      }\n      scopePath = scopePath.parent;\n    }\n    if (!scopePath) {\n      return false;\n    }\n    scopePath = scopePath.parent;\n  }\n  return true;\n}\nfunction _matchesScope(scopeName, scopePattern) {\n  return scopePattern === scopeName || scopeName.startsWith(scopePattern) && scopeName[scopePattern.length] === \".\";\n}\nvar StyleAttributes = class {\n  constructor(fontStyle, foregroundId, backgroundId) {\n    this.fontStyle = fontStyle;\n    this.foregroundId = foregroundId;\n    this.backgroundId = backgroundId;\n  }\n};\nfunction parseTheme(source) {\n  if (!source) {\n    return [];\n  }\n  if (!source.settings || !Array.isArray(source.settings)) {\n    return [];\n  }\n  let settings = source.settings;\n  let result = [], resultLen = 0;\n  for (let i = 0, len = settings.length; i < len; i++) {\n    let entry = settings[i];\n    if (!entry.settings) {\n      continue;\n    }\n    let scopes;\n    if (typeof entry.scope === \"string\") {\n      let _scope = entry.scope;\n      _scope = _scope.replace(/^[,]+/, \"\");\n      _scope = _scope.replace(/[,]+$/, \"\");\n      scopes = _scope.split(\",\");\n    } else if (Array.isArray(entry.scope)) {\n      scopes = entry.scope;\n    } else {\n      scopes = [\"\"];\n    }\n    let fontStyle = -1 /* NotSet */;\n    if (typeof entry.settings.fontStyle === \"string\") {\n      fontStyle = 0 /* None */;\n      let segments = entry.settings.fontStyle.split(\" \");\n      for (let j = 0, lenJ = segments.length; j < lenJ; j++) {\n        let segment = segments[j];\n        switch (segment) {\n          case \"italic\":\n            fontStyle = fontStyle | 1 /* Italic */;\n            break;\n          case \"bold\":\n            fontStyle = fontStyle | 2 /* Bold */;\n            break;\n          case \"underline\":\n            fontStyle = fontStyle | 4 /* Underline */;\n            break;\n          case \"strikethrough\":\n            fontStyle = fontStyle | 8 /* Strikethrough */;\n            break;\n        }\n      }\n    }\n    let foreground = null;\n    if (typeof entry.settings.foreground === \"string\" && isValidHexColor(entry.settings.foreground)) {\n      foreground = entry.settings.foreground;\n    }\n    let background = null;\n    if (typeof entry.settings.background === \"string\" && isValidHexColor(entry.settings.background)) {\n      background = entry.settings.background;\n    }\n    for (let j = 0, lenJ = scopes.length; j < lenJ; j++) {\n      let _scope = scopes[j].trim();\n      let segments = _scope.split(\" \");\n      let scope = segments[segments.length - 1];\n      let parentScopes = null;\n      if (segments.length > 1) {\n        parentScopes = segments.slice(0, segments.length - 1);\n        parentScopes.reverse();\n      }\n      result[resultLen++] = new ParsedThemeRule(\n        scope,\n        parentScopes,\n        i,\n        fontStyle,\n        foreground,\n        background\n      );\n    }\n  }\n  return result;\n}\nvar ParsedThemeRule = class {\n  constructor(scope, parentScopes, index, fontStyle, foreground, background) {\n    this.scope = scope;\n    this.parentScopes = parentScopes;\n    this.index = index;\n    this.fontStyle = fontStyle;\n    this.foreground = foreground;\n    this.background = background;\n  }\n};\nvar FontStyle = /* @__PURE__ */ ((FontStyle2) => {\n  FontStyle2[FontStyle2[\"NotSet\"] = -1] = \"NotSet\";\n  FontStyle2[FontStyle2[\"None\"] = 0] = \"None\";\n  FontStyle2[FontStyle2[\"Italic\"] = 1] = \"Italic\";\n  FontStyle2[FontStyle2[\"Bold\"] = 2] = \"Bold\";\n  FontStyle2[FontStyle2[\"Underline\"] = 4] = \"Underline\";\n  FontStyle2[FontStyle2[\"Strikethrough\"] = 8] = \"Strikethrough\";\n  return FontStyle2;\n})(FontStyle || {});\nfunction resolveParsedThemeRules(parsedThemeRules, _colorMap) {\n  parsedThemeRules.sort((a, b) => {\n    let r = strcmp(a.scope, b.scope);\n    if (r !== 0) {\n      return r;\n    }\n    r = strArrCmp(a.parentScopes, b.parentScopes);\n    if (r !== 0) {\n      return r;\n    }\n    return a.index - b.index;\n  });\n  let defaultFontStyle = 0 /* None */;\n  let defaultForeground = \"#000000\";\n  let defaultBackground = \"#ffffff\";\n  while (parsedThemeRules.length >= 1 && parsedThemeRules[0].scope === \"\") {\n    let incomingDefaults = parsedThemeRules.shift();\n    if (incomingDefaults.fontStyle !== -1 /* NotSet */) {\n      defaultFontStyle = incomingDefaults.fontStyle;\n    }\n    if (incomingDefaults.foreground !== null) {\n      defaultForeground = incomingDefaults.foreground;\n    }\n    if (incomingDefaults.background !== null) {\n      defaultBackground = incomingDefaults.background;\n    }\n  }\n  let colorMap = new ColorMap(_colorMap);\n  let defaults = new StyleAttributes(defaultFontStyle, colorMap.getId(defaultForeground), colorMap.getId(defaultBackground));\n  let root = new ThemeTrieElement(new ThemeTrieElementRule(0, null, -1 /* NotSet */, 0, 0), []);\n  for (let i = 0, len = parsedThemeRules.length; i < len; i++) {\n    let rule = parsedThemeRules[i];\n    root.insert(0, rule.scope, rule.parentScopes, rule.fontStyle, colorMap.getId(rule.foreground), colorMap.getId(rule.background));\n  }\n  return new Theme(colorMap, defaults, root);\n}\nvar ColorMap = class {\n  _isFrozen;\n  _lastColorId;\n  _id2color;\n  _color2id;\n  constructor(_colorMap) {\n    this._lastColorId = 0;\n    this._id2color = [];\n    this._color2id = /* @__PURE__ */ Object.create(null);\n    if (Array.isArray(_colorMap)) {\n      this._isFrozen = true;\n      for (let i = 0, len = _colorMap.length; i < len; i++) {\n        this._color2id[_colorMap[i]] = i;\n        this._id2color[i] = _colorMap[i];\n      }\n    } else {\n      this._isFrozen = false;\n    }\n  }\n  getId(color) {\n    if (color === null) {\n      return 0;\n    }\n    color = color.toUpperCase();\n    let value = this._color2id[color];\n    if (value) {\n      return value;\n    }\n    if (this._isFrozen) {\n      throw new Error(`Missing color in color map - ${color}`);\n    }\n    value = ++this._lastColorId;\n    this._color2id[color] = value;\n    this._id2color[value] = color;\n    return value;\n  }\n  getColorMap() {\n    return this._id2color.slice(0);\n  }\n};\nvar emptyParentScopes = Object.freeze([]);\nvar ThemeTrieElementRule = class _ThemeTrieElementRule {\n  scopeDepth;\n  parentScopes;\n  fontStyle;\n  foreground;\n  background;\n  constructor(scopeDepth, parentScopes, fontStyle, foreground, background) {\n    this.scopeDepth = scopeDepth;\n    this.parentScopes = parentScopes || emptyParentScopes;\n    this.fontStyle = fontStyle;\n    this.foreground = foreground;\n    this.background = background;\n  }\n  clone() {\n    return new _ThemeTrieElementRule(this.scopeDepth, this.parentScopes, this.fontStyle, this.foreground, this.background);\n  }\n  static cloneArr(arr) {\n    let r = [];\n    for (let i = 0, len = arr.length; i < len; i++) {\n      r[i] = arr[i].clone();\n    }\n    return r;\n  }\n  acceptOverwrite(scopeDepth, fontStyle, foreground, background) {\n    if (this.scopeDepth > scopeDepth) {\n      console.log(\"how did this happen?\");\n    } else {\n      this.scopeDepth = scopeDepth;\n    }\n    if (fontStyle !== -1 /* NotSet */) {\n      this.fontStyle = fontStyle;\n    }\n    if (foreground !== 0) {\n      this.foreground = foreground;\n    }\n    if (background !== 0) {\n      this.background = background;\n    }\n  }\n};\nvar ThemeTrieElement = class _ThemeTrieElement {\n  constructor(_mainRule, rulesWithParentScopes = [], _children = {}) {\n    this._mainRule = _mainRule;\n    this._children = _children;\n    this._rulesWithParentScopes = rulesWithParentScopes;\n  }\n  _rulesWithParentScopes;\n  static _cmpBySpecificity(a, b) {\n    if (a.scopeDepth !== b.scopeDepth) {\n      return b.scopeDepth - a.scopeDepth;\n    }\n    let aParentIndex = 0;\n    let bParentIndex = 0;\n    while (true) {\n      if (a.parentScopes[aParentIndex] === \">\") {\n        aParentIndex++;\n      }\n      if (b.parentScopes[bParentIndex] === \">\") {\n        bParentIndex++;\n      }\n      if (aParentIndex >= a.parentScopes.length || bParentIndex >= b.parentScopes.length) {\n        break;\n      }\n      const parentScopeLengthDiff = b.parentScopes[bParentIndex].length - a.parentScopes[aParentIndex].length;\n      if (parentScopeLengthDiff !== 0) {\n        return parentScopeLengthDiff;\n      }\n      aParentIndex++;\n      bParentIndex++;\n    }\n    return b.parentScopes.length - a.parentScopes.length;\n  }\n  match(scope) {\n    if (scope !== \"\") {\n      let dotIndex = scope.indexOf(\".\");\n      let head;\n      let tail;\n      if (dotIndex === -1) {\n        head = scope;\n        tail = \"\";\n      } else {\n        head = scope.substring(0, dotIndex);\n        tail = scope.substring(dotIndex + 1);\n      }\n      if (this._children.hasOwnProperty(head)) {\n        return this._children[head].match(tail);\n      }\n    }\n    const rules = this._rulesWithParentScopes.concat(this._mainRule);\n    rules.sort(_ThemeTrieElement._cmpBySpecificity);\n    return rules;\n  }\n  insert(scopeDepth, scope, parentScopes, fontStyle, foreground, background) {\n    if (scope === \"\") {\n      this._doInsertHere(scopeDepth, parentScopes, fontStyle, foreground, background);\n      return;\n    }\n    let dotIndex = scope.indexOf(\".\");\n    let head;\n    let tail;\n    if (dotIndex === -1) {\n      head = scope;\n      tail = \"\";\n    } else {\n      head = scope.substring(0, dotIndex);\n      tail = scope.substring(dotIndex + 1);\n    }\n    let child;\n    if (this._children.hasOwnProperty(head)) {\n      child = this._children[head];\n    } else {\n      child = new _ThemeTrieElement(this._mainRule.clone(), ThemeTrieElementRule.cloneArr(this._rulesWithParentScopes));\n      this._children[head] = child;\n    }\n    child.insert(scopeDepth + 1, tail, parentScopes, fontStyle, foreground, background);\n  }\n  _doInsertHere(scopeDepth, parentScopes, fontStyle, foreground, background) {\n    if (parentScopes === null) {\n      this._mainRule.acceptOverwrite(scopeDepth, fontStyle, foreground, background);\n      return;\n    }\n    for (let i = 0, len = this._rulesWithParentScopes.length; i < len; i++) {\n      let rule = this._rulesWithParentScopes[i];\n      if (strArrCmp(rule.parentScopes, parentScopes) === 0) {\n        rule.acceptOverwrite(scopeDepth, fontStyle, foreground, background);\n        return;\n      }\n    }\n    if (fontStyle === -1 /* NotSet */) {\n      fontStyle = this._mainRule.fontStyle;\n    }\n    if (foreground === 0) {\n      foreground = this._mainRule.foreground;\n    }\n    if (background === 0) {\n      background = this._mainRule.background;\n    }\n    this._rulesWithParentScopes.push(new ThemeTrieElementRule(scopeDepth, parentScopes, fontStyle, foreground, background));\n  }\n};\n\n// src/encodedTokenAttributes.ts\nvar EncodedTokenMetadata = class _EncodedTokenMetadata {\n  static toBinaryStr(encodedTokenAttributes) {\n    return encodedTokenAttributes.toString(2).padStart(32, \"0\");\n  }\n  static print(encodedTokenAttributes) {\n    const languageId = _EncodedTokenMetadata.getLanguageId(encodedTokenAttributes);\n    const tokenType = _EncodedTokenMetadata.getTokenType(encodedTokenAttributes);\n    const fontStyle = _EncodedTokenMetadata.getFontStyle(encodedTokenAttributes);\n    const foreground = _EncodedTokenMetadata.getForeground(encodedTokenAttributes);\n    const background = _EncodedTokenMetadata.getBackground(encodedTokenAttributes);\n    console.log({\n      languageId,\n      tokenType,\n      fontStyle,\n      foreground,\n      background\n    });\n  }\n  static getLanguageId(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 255 /* LANGUAGEID_MASK */) >>> 0 /* LANGUAGEID_OFFSET */;\n  }\n  static getTokenType(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 768 /* TOKEN_TYPE_MASK */) >>> 8 /* TOKEN_TYPE_OFFSET */;\n  }\n  static containsBalancedBrackets(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 1024 /* BALANCED_BRACKETS_MASK */) !== 0;\n  }\n  static getFontStyle(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 30720 /* FONT_STYLE_MASK */) >>> 11 /* FONT_STYLE_OFFSET */;\n  }\n  static getForeground(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 16744448 /* FOREGROUND_MASK */) >>> 15 /* FOREGROUND_OFFSET */;\n  }\n  static getBackground(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 4278190080 /* BACKGROUND_MASK */) >>> 24 /* BACKGROUND_OFFSET */;\n  }\n  /**\n   * Updates the fields in `metadata`.\n   * A value of `0`, `NotSet` or `null` indicates that the corresponding field should be left as is.\n   */\n  static set(encodedTokenAttributes, languageId, tokenType, containsBalancedBrackets, fontStyle, foreground, background) {\n    let _languageId = _EncodedTokenMetadata.getLanguageId(encodedTokenAttributes);\n    let _tokenType = _EncodedTokenMetadata.getTokenType(encodedTokenAttributes);\n    let _containsBalancedBracketsBit = _EncodedTokenMetadata.containsBalancedBrackets(encodedTokenAttributes) ? 1 : 0;\n    let _fontStyle = _EncodedTokenMetadata.getFontStyle(encodedTokenAttributes);\n    let _foreground = _EncodedTokenMetadata.getForeground(encodedTokenAttributes);\n    let _background = _EncodedTokenMetadata.getBackground(encodedTokenAttributes);\n    if (languageId !== 0) {\n      _languageId = languageId;\n    }\n    if (tokenType !== 8 /* NotSet */) {\n      _tokenType = fromOptionalTokenType(tokenType);\n    }\n    if (containsBalancedBrackets !== null) {\n      _containsBalancedBracketsBit = containsBalancedBrackets ? 1 : 0;\n    }\n    if (fontStyle !== -1 /* NotSet */) {\n      _fontStyle = fontStyle;\n    }\n    if (foreground !== 0) {\n      _foreground = foreground;\n    }\n    if (background !== 0) {\n      _background = background;\n    }\n    return (_languageId << 0 /* LANGUAGEID_OFFSET */ | _tokenType << 8 /* TOKEN_TYPE_OFFSET */ | _containsBalancedBracketsBit << 10 /* BALANCED_BRACKETS_OFFSET */ | _fontStyle << 11 /* FONT_STYLE_OFFSET */ | _foreground << 15 /* FOREGROUND_OFFSET */ | _background << 24 /* BACKGROUND_OFFSET */) >>> 0;\n  }\n};\nfunction toOptionalTokenType(standardType) {\n  return standardType;\n}\nfunction fromOptionalTokenType(standardType) {\n  return standardType;\n}\n\n// src/matcher.ts\nfunction createMatchers(selector, matchesName) {\n  const results = [];\n  const tokenizer = newTokenizer(selector);\n  let token = tokenizer.next();\n  while (token !== null) {\n    let priority = 0;\n    if (token.length === 2 && token.charAt(1) === \":\") {\n      switch (token.charAt(0)) {\n        case \"R\":\n          priority = 1;\n          break;\n        case \"L\":\n          priority = -1;\n          break;\n        default:\n          console.log(`Unknown priority ${token} in scope selector`);\n      }\n      token = tokenizer.next();\n    }\n    let matcher = parseConjunction();\n    results.push({ matcher, priority });\n    if (token !== \",\") {\n      break;\n    }\n    token = tokenizer.next();\n  }\n  return results;\n  function parseOperand() {\n    if (token === \"-\") {\n      token = tokenizer.next();\n      const expressionToNegate = parseOperand();\n      return (matcherInput) => !!expressionToNegate && !expressionToNegate(matcherInput);\n    }\n    if (token === \"(\") {\n      token = tokenizer.next();\n      const expressionInParents = parseInnerExpression();\n      if (token === \")\") {\n        token = tokenizer.next();\n      }\n      return expressionInParents;\n    }\n    if (isIdentifier(token)) {\n      const identifiers = [];\n      do {\n        identifiers.push(token);\n        token = tokenizer.next();\n      } while (isIdentifier(token));\n      return (matcherInput) => matchesName(identifiers, matcherInput);\n    }\n    return null;\n  }\n  function parseConjunction() {\n    const matchers = [];\n    let matcher = parseOperand();\n    while (matcher) {\n      matchers.push(matcher);\n      matcher = parseOperand();\n    }\n    return (matcherInput) => matchers.every((matcher2) => matcher2(matcherInput));\n  }\n  function parseInnerExpression() {\n    const matchers = [];\n    let matcher = parseConjunction();\n    while (matcher) {\n      matchers.push(matcher);\n      if (token === \"|\" || token === \",\") {\n        do {\n          token = tokenizer.next();\n        } while (token === \"|\" || token === \",\");\n      } else {\n        break;\n      }\n      matcher = parseConjunction();\n    }\n    return (matcherInput) => matchers.some((matcher2) => matcher2(matcherInput));\n  }\n}\nfunction isIdentifier(token) {\n  return !!token && !!token.match(/[\\w\\.:]+/);\n}\nfunction newTokenizer(input) {\n  let regex = /([LR]:|[\\w\\.:][\\w\\.:\\-]*|[\\,\\|\\-\\(\\)])/g;\n  let match = regex.exec(input);\n  return {\n    next: () => {\n      if (!match) {\n        return null;\n      }\n      const res = match[0];\n      match = regex.exec(input);\n      return res;\n    }\n  };\n}\n\n// src/onigLib.ts\nvar FindOption = /* @__PURE__ */ ((FindOption2) => {\n  FindOption2[FindOption2[\"None\"] = 0] = \"None\";\n  FindOption2[FindOption2[\"NotBeginString\"] = 1] = \"NotBeginString\";\n  FindOption2[FindOption2[\"NotEndString\"] = 2] = \"NotEndString\";\n  FindOption2[FindOption2[\"NotBeginPosition\"] = 4] = \"NotBeginPosition\";\n  FindOption2[FindOption2[\"DebugCall\"] = 8] = \"DebugCall\";\n  return FindOption2;\n})(FindOption || {});\nfunction disposeOnigString(str) {\n  if (typeof str.dispose === \"function\") {\n    str.dispose();\n  }\n}\n\n// src/grammar/grammarDependencies.ts\nvar TopLevelRuleReference = class {\n  constructor(scopeName) {\n    this.scopeName = scopeName;\n  }\n  toKey() {\n    return this.scopeName;\n  }\n};\nvar TopLevelRepositoryRuleReference = class {\n  constructor(scopeName, ruleName) {\n    this.scopeName = scopeName;\n    this.ruleName = ruleName;\n  }\n  toKey() {\n    return `${this.scopeName}#${this.ruleName}`;\n  }\n};\nvar ExternalReferenceCollector = class {\n  _references = [];\n  _seenReferenceKeys = /* @__PURE__ */ new Set();\n  get references() {\n    return this._references;\n  }\n  visitedRule = /* @__PURE__ */ new Set();\n  add(reference) {\n    const key = reference.toKey();\n    if (this._seenReferenceKeys.has(key)) {\n      return;\n    }\n    this._seenReferenceKeys.add(key);\n    this._references.push(reference);\n  }\n};\nvar ScopeDependencyProcessor = class {\n  constructor(repo, initialScopeName) {\n    this.repo = repo;\n    this.initialScopeName = initialScopeName;\n    this.seenFullScopeRequests.add(this.initialScopeName);\n    this.Q = [new TopLevelRuleReference(this.initialScopeName)];\n  }\n  seenFullScopeRequests = /* @__PURE__ */ new Set();\n  seenPartialScopeRequests = /* @__PURE__ */ new Set();\n  Q;\n  processQueue() {\n    const q = this.Q;\n    this.Q = [];\n    const deps = new ExternalReferenceCollector();\n    for (const dep of q) {\n      collectReferencesOfReference(dep, this.initialScopeName, this.repo, deps);\n    }\n    for (const dep of deps.references) {\n      if (dep instanceof TopLevelRuleReference) {\n        if (this.seenFullScopeRequests.has(dep.scopeName)) {\n          continue;\n        }\n        this.seenFullScopeRequests.add(dep.scopeName);\n        this.Q.push(dep);\n      } else {\n        if (this.seenFullScopeRequests.has(dep.scopeName)) {\n          continue;\n        }\n        if (this.seenPartialScopeRequests.has(dep.toKey())) {\n          continue;\n        }\n        this.seenPartialScopeRequests.add(dep.toKey());\n        this.Q.push(dep);\n      }\n    }\n  }\n};\nfunction collectReferencesOfReference(reference, baseGrammarScopeName, repo, result) {\n  const selfGrammar = repo.lookup(reference.scopeName);\n  if (!selfGrammar) {\n    if (reference.scopeName === baseGrammarScopeName) {\n      throw new Error(`No grammar provided for <${baseGrammarScopeName}>`);\n    }\n    return;\n  }\n  const baseGrammar = repo.lookup(baseGrammarScopeName);\n  if (reference instanceof TopLevelRuleReference) {\n    collectExternalReferencesInTopLevelRule({ baseGrammar, selfGrammar }, result);\n  } else {\n    collectExternalReferencesInTopLevelRepositoryRule(\n      reference.ruleName,\n      { baseGrammar, selfGrammar, repository: selfGrammar.repository },\n      result\n    );\n  }\n  const injections = repo.injections(reference.scopeName);\n  if (injections) {\n    for (const injection of injections) {\n      result.add(new TopLevelRuleReference(injection));\n    }\n  }\n}\nfunction collectExternalReferencesInTopLevelRepositoryRule(ruleName, context, result) {\n  if (context.repository && context.repository[ruleName]) {\n    const rule = context.repository[ruleName];\n    collectExternalReferencesInRules([rule], context, result);\n  }\n}\nfunction collectExternalReferencesInTopLevelRule(context, result) {\n  if (context.selfGrammar.patterns && Array.isArray(context.selfGrammar.patterns)) {\n    collectExternalReferencesInRules(\n      context.selfGrammar.patterns,\n      { ...context, repository: context.selfGrammar.repository },\n      result\n    );\n  }\n  if (context.selfGrammar.injections) {\n    collectExternalReferencesInRules(\n      Object.values(context.selfGrammar.injections),\n      { ...context, repository: context.selfGrammar.repository },\n      result\n    );\n  }\n}\nfunction collectExternalReferencesInRules(rules, context, result) {\n  for (const rule of rules) {\n    if (result.visitedRule.has(rule)) {\n      continue;\n    }\n    result.visitedRule.add(rule);\n    const patternRepository = rule.repository ? mergeObjects({}, context.repository, rule.repository) : context.repository;\n    if (Array.isArray(rule.patterns)) {\n      collectExternalReferencesInRules(rule.patterns, { ...context, repository: patternRepository }, result);\n    }\n    const include = rule.include;\n    if (!include) {\n      continue;\n    }\n    const reference = parseInclude(include);\n    switch (reference.kind) {\n      case 0 /* Base */:\n        collectExternalReferencesInTopLevelRule({ ...context, selfGrammar: context.baseGrammar }, result);\n        break;\n      case 1 /* Self */:\n        collectExternalReferencesInTopLevelRule(context, result);\n        break;\n      case 2 /* RelativeReference */:\n        collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, { ...context, repository: patternRepository }, result);\n        break;\n      case 3 /* TopLevelReference */:\n      case 4 /* TopLevelRepositoryReference */:\n        const selfGrammar = reference.scopeName === context.selfGrammar.scopeName ? context.selfGrammar : reference.scopeName === context.baseGrammar.scopeName ? context.baseGrammar : void 0;\n        if (selfGrammar) {\n          const newContext = { baseGrammar: context.baseGrammar, selfGrammar, repository: patternRepository };\n          if (reference.kind === 4 /* TopLevelRepositoryReference */) {\n            collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, newContext, result);\n          } else {\n            collectExternalReferencesInTopLevelRule(newContext, result);\n          }\n        } else {\n          if (reference.kind === 4 /* TopLevelRepositoryReference */) {\n            result.add(new TopLevelRepositoryRuleReference(reference.scopeName, reference.ruleName));\n          } else {\n            result.add(new TopLevelRuleReference(reference.scopeName));\n          }\n        }\n        break;\n    }\n  }\n}\nvar BaseReference = class {\n  kind = 0 /* Base */;\n};\nvar SelfReference = class {\n  kind = 1 /* Self */;\n};\nvar RelativeReference = class {\n  constructor(ruleName) {\n    this.ruleName = ruleName;\n  }\n  kind = 2 /* RelativeReference */;\n};\nvar TopLevelReference = class {\n  constructor(scopeName) {\n    this.scopeName = scopeName;\n  }\n  kind = 3 /* TopLevelReference */;\n};\nvar TopLevelRepositoryReference = class {\n  constructor(scopeName, ruleName) {\n    this.scopeName = scopeName;\n    this.ruleName = ruleName;\n  }\n  kind = 4 /* TopLevelRepositoryReference */;\n};\nfunction parseInclude(include) {\n  if (include === \"$base\") {\n    return new BaseReference();\n  } else if (include === \"$self\") {\n    return new SelfReference();\n  }\n  const indexOfSharp = include.indexOf(\"#\");\n  if (indexOfSharp === -1) {\n    return new TopLevelReference(include);\n  } else if (indexOfSharp === 0) {\n    return new RelativeReference(include.substring(1));\n  } else {\n    const scopeName = include.substring(0, indexOfSharp);\n    const ruleName = include.substring(indexOfSharp + 1);\n    return new TopLevelRepositoryReference(scopeName, ruleName);\n  }\n}\n\n// src/rule.ts\nvar HAS_BACK_REFERENCES = /\\\\(\\d+)/;\nvar BACK_REFERENCING_END = /\\\\(\\d+)/g;\nvar ruleIdSymbol = Symbol(\"RuleId\");\nvar endRuleId = -1;\nvar whileRuleId = -2;\nfunction ruleIdFromNumber(id) {\n  return id;\n}\nfunction ruleIdToNumber(id) {\n  return id;\n}\nvar Rule = class {\n  $location;\n  id;\n  _nameIsCapturing;\n  _name;\n  _contentNameIsCapturing;\n  _contentName;\n  constructor($location, id, name, contentName) {\n    this.$location = $location;\n    this.id = id;\n    this._name = name || null;\n    this._nameIsCapturing = RegexSource.hasCaptures(this._name);\n    this._contentName = contentName || null;\n    this._contentNameIsCapturing = RegexSource.hasCaptures(this._contentName);\n  }\n  get debugName() {\n    const location = this.$location ? `${basename(this.$location.filename)}:${this.$location.line}` : \"unknown\";\n    return `${this.constructor.name}#${this.id} @ ${location}`;\n  }\n  getName(lineText, captureIndices) {\n    if (!this._nameIsCapturing || this._name === null || lineText === null || captureIndices === null) {\n      return this._name;\n    }\n    return RegexSource.replaceCaptures(this._name, lineText, captureIndices);\n  }\n  getContentName(lineText, captureIndices) {\n    if (!this._contentNameIsCapturing || this._contentName === null) {\n      return this._contentName;\n    }\n    return RegexSource.replaceCaptures(this._contentName, lineText, captureIndices);\n  }\n};\nvar CaptureRule = class extends Rule {\n  retokenizeCapturedWithRuleId;\n  constructor($location, id, name, contentName, retokenizeCapturedWithRuleId) {\n    super($location, id, name, contentName);\n    this.retokenizeCapturedWithRuleId = retokenizeCapturedWithRuleId;\n  }\n  dispose() {\n  }\n  collectPatterns(grammar, out) {\n    throw new Error(\"Not supported!\");\n  }\n  compile(grammar, endRegexSource) {\n    throw new Error(\"Not supported!\");\n  }\n  compileAG(grammar, endRegexSource, allowA, allowG) {\n    throw new Error(\"Not supported!\");\n  }\n};\nvar MatchRule = class extends Rule {\n  _match;\n  captures;\n  _cachedCompiledPatterns;\n  constructor($location, id, name, match, captures) {\n    super($location, id, name, null);\n    this._match = new RegExpSource(match, this.id);\n    this.captures = captures;\n    this._cachedCompiledPatterns = null;\n  }\n  dispose() {\n    if (this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns.dispose();\n      this._cachedCompiledPatterns = null;\n    }\n  }\n  get debugMatchRegExp() {\n    return `${this._match.source}`;\n  }\n  collectPatterns(grammar, out) {\n    out.push(this._match);\n  }\n  compile(grammar, endRegexSource) {\n    return this._getCachedCompiledPatterns(grammar).compile(grammar);\n  }\n  compileAG(grammar, endRegexSource, allowA, allowG) {\n    return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n  }\n  _getCachedCompiledPatterns(grammar) {\n    if (!this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns = new RegExpSourceList();\n      this.collectPatterns(grammar, this._cachedCompiledPatterns);\n    }\n    return this._cachedCompiledPatterns;\n  }\n};\nvar IncludeOnlyRule = class extends Rule {\n  hasMissingPatterns;\n  patterns;\n  _cachedCompiledPatterns;\n  constructor($location, id, name, contentName, patterns) {\n    super($location, id, name, contentName);\n    this.patterns = patterns.patterns;\n    this.hasMissingPatterns = patterns.hasMissingPatterns;\n    this._cachedCompiledPatterns = null;\n  }\n  dispose() {\n    if (this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns.dispose();\n      this._cachedCompiledPatterns = null;\n    }\n  }\n  collectPatterns(grammar, out) {\n    for (const pattern of this.patterns) {\n      const rule = grammar.getRule(pattern);\n      rule.collectPatterns(grammar, out);\n    }\n  }\n  compile(grammar, endRegexSource) {\n    return this._getCachedCompiledPatterns(grammar).compile(grammar);\n  }\n  compileAG(grammar, endRegexSource, allowA, allowG) {\n    return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n  }\n  _getCachedCompiledPatterns(grammar) {\n    if (!this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns = new RegExpSourceList();\n      this.collectPatterns(grammar, this._cachedCompiledPatterns);\n    }\n    return this._cachedCompiledPatterns;\n  }\n};\nvar BeginEndRule = class extends Rule {\n  _begin;\n  beginCaptures;\n  _end;\n  endHasBackReferences;\n  endCaptures;\n  applyEndPatternLast;\n  hasMissingPatterns;\n  patterns;\n  _cachedCompiledPatterns;\n  constructor($location, id, name, contentName, begin, beginCaptures, end, endCaptures, applyEndPatternLast, patterns) {\n    super($location, id, name, contentName);\n    this._begin = new RegExpSource(begin, this.id);\n    this.beginCaptures = beginCaptures;\n    this._end = new RegExpSource(end ? end : \"\\uFFFF\", -1);\n    this.endHasBackReferences = this._end.hasBackReferences;\n    this.endCaptures = endCaptures;\n    this.applyEndPatternLast = applyEndPatternLast || false;\n    this.patterns = patterns.patterns;\n    this.hasMissingPatterns = patterns.hasMissingPatterns;\n    this._cachedCompiledPatterns = null;\n  }\n  dispose() {\n    if (this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns.dispose();\n      this._cachedCompiledPatterns = null;\n    }\n  }\n  get debugBeginRegExp() {\n    return `${this._begin.source}`;\n  }\n  get debugEndRegExp() {\n    return `${this._end.source}`;\n  }\n  getEndWithResolvedBackReferences(lineText, captureIndices) {\n    return this._end.resolveBackReferences(lineText, captureIndices);\n  }\n  collectPatterns(grammar, out) {\n    out.push(this._begin);\n  }\n  compile(grammar, endRegexSource) {\n    return this._getCachedCompiledPatterns(grammar, endRegexSource).compile(grammar);\n  }\n  compileAG(grammar, endRegexSource, allowA, allowG) {\n    return this._getCachedCompiledPatterns(grammar, endRegexSource).compileAG(grammar, allowA, allowG);\n  }\n  _getCachedCompiledPatterns(grammar, endRegexSource) {\n    if (!this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns = new RegExpSourceList();\n      for (const pattern of this.patterns) {\n        const rule = grammar.getRule(pattern);\n        rule.collectPatterns(grammar, this._cachedCompiledPatterns);\n      }\n      if (this.applyEndPatternLast) {\n        this._cachedCompiledPatterns.push(this._end.hasBackReferences ? this._end.clone() : this._end);\n      } else {\n        this._cachedCompiledPatterns.unshift(this._end.hasBackReferences ? this._end.clone() : this._end);\n      }\n    }\n    if (this._end.hasBackReferences) {\n      if (this.applyEndPatternLast) {\n        this._cachedCompiledPatterns.setSource(this._cachedCompiledPatterns.length() - 1, endRegexSource);\n      } else {\n        this._cachedCompiledPatterns.setSource(0, endRegexSource);\n      }\n    }\n    return this._cachedCompiledPatterns;\n  }\n};\nvar BeginWhileRule = class extends Rule {\n  _begin;\n  beginCaptures;\n  whileCaptures;\n  _while;\n  whileHasBackReferences;\n  hasMissingPatterns;\n  patterns;\n  _cachedCompiledPatterns;\n  _cachedCompiledWhilePatterns;\n  constructor($location, id, name, contentName, begin, beginCaptures, _while, whileCaptures, patterns) {\n    super($location, id, name, contentName);\n    this._begin = new RegExpSource(begin, this.id);\n    this.beginCaptures = beginCaptures;\n    this.whileCaptures = whileCaptures;\n    this._while = new RegExpSource(_while, whileRuleId);\n    this.whileHasBackReferences = this._while.hasBackReferences;\n    this.patterns = patterns.patterns;\n    this.hasMissingPatterns = patterns.hasMissingPatterns;\n    this._cachedCompiledPatterns = null;\n    this._cachedCompiledWhilePatterns = null;\n  }\n  dispose() {\n    if (this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns.dispose();\n      this._cachedCompiledPatterns = null;\n    }\n    if (this._cachedCompiledWhilePatterns) {\n      this._cachedCompiledWhilePatterns.dispose();\n      this._cachedCompiledWhilePatterns = null;\n    }\n  }\n  get debugBeginRegExp() {\n    return `${this._begin.source}`;\n  }\n  get debugWhileRegExp() {\n    return `${this._while.source}`;\n  }\n  getWhileWithResolvedBackReferences(lineText, captureIndices) {\n    return this._while.resolveBackReferences(lineText, captureIndices);\n  }\n  collectPatterns(grammar, out) {\n    out.push(this._begin);\n  }\n  compile(grammar, endRegexSource) {\n    return this._getCachedCompiledPatterns(grammar).compile(grammar);\n  }\n  compileAG(grammar, endRegexSource, allowA, allowG) {\n    return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n  }\n  _getCachedCompiledPatterns(grammar) {\n    if (!this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns = new RegExpSourceList();\n      for (const pattern of this.patterns) {\n        const rule = grammar.getRule(pattern);\n        rule.collectPatterns(grammar, this._cachedCompiledPatterns);\n      }\n    }\n    return this._cachedCompiledPatterns;\n  }\n  compileWhile(grammar, endRegexSource) {\n    return this._getCachedCompiledWhilePatterns(grammar, endRegexSource).compile(grammar);\n  }\n  compileWhileAG(grammar, endRegexSource, allowA, allowG) {\n    return this._getCachedCompiledWhilePatterns(grammar, endRegexSource).compileAG(grammar, allowA, allowG);\n  }\n  _getCachedCompiledWhilePatterns(grammar, endRegexSource) {\n    if (!this._cachedCompiledWhilePatterns) {\n      this._cachedCompiledWhilePatterns = new RegExpSourceList();\n      this._cachedCompiledWhilePatterns.push(this._while.hasBackReferences ? this._while.clone() : this._while);\n    }\n    if (this._while.hasBackReferences) {\n      this._cachedCompiledWhilePatterns.setSource(0, endRegexSource ? endRegexSource : \"\\uFFFF\");\n    }\n    return this._cachedCompiledWhilePatterns;\n  }\n};\nvar RuleFactory = class _RuleFactory {\n  static createCaptureRule(helper, $location, name, contentName, retokenizeCapturedWithRuleId) {\n    return helper.registerRule((id) => {\n      return new CaptureRule($location, id, name, contentName, retokenizeCapturedWithRuleId);\n    });\n  }\n  static getCompiledRuleId(desc, helper, repository) {\n    if (!desc.id) {\n      helper.registerRule((id) => {\n        desc.id = id;\n        if (desc.match) {\n          return new MatchRule(\n            desc.$vscodeTextmateLocation,\n            desc.id,\n            desc.name,\n            desc.match,\n            _RuleFactory._compileCaptures(desc.captures, helper, repository)\n          );\n        }\n        if (typeof desc.begin === \"undefined\") {\n          if (desc.repository) {\n            repository = mergeObjects({}, repository, desc.repository);\n          }\n          let patterns = desc.patterns;\n          if (typeof patterns === \"undefined\" && desc.include) {\n            patterns = [{ include: desc.include }];\n          }\n          return new IncludeOnlyRule(\n            desc.$vscodeTextmateLocation,\n            desc.id,\n            desc.name,\n            desc.contentName,\n            _RuleFactory._compilePatterns(patterns, helper, repository)\n          );\n        }\n        if (desc.while) {\n          return new BeginWhileRule(\n            desc.$vscodeTextmateLocation,\n            desc.id,\n            desc.name,\n            desc.contentName,\n            desc.begin,\n            _RuleFactory._compileCaptures(desc.beginCaptures || desc.captures, helper, repository),\n            desc.while,\n            _RuleFactory._compileCaptures(desc.whileCaptures || desc.captures, helper, repository),\n            _RuleFactory._compilePatterns(desc.patterns, helper, repository)\n          );\n        }\n        return new BeginEndRule(\n          desc.$vscodeTextmateLocation,\n          desc.id,\n          desc.name,\n          desc.contentName,\n          desc.begin,\n          _RuleFactory._compileCaptures(desc.beginCaptures || desc.captures, helper, repository),\n          desc.end,\n          _RuleFactory._compileCaptures(desc.endCaptures || desc.captures, helper, repository),\n          desc.applyEndPatternLast,\n          _RuleFactory._compilePatterns(desc.patterns, helper, repository)\n        );\n      });\n    }\n    return desc.id;\n  }\n  static _compileCaptures(captures, helper, repository) {\n    let r = [];\n    if (captures) {\n      let maximumCaptureId = 0;\n      for (const captureId in captures) {\n        if (captureId === \"$vscodeTextmateLocation\") {\n          continue;\n        }\n        const numericCaptureId = parseInt(captureId, 10);\n        if (numericCaptureId > maximumCaptureId) {\n          maximumCaptureId = numericCaptureId;\n        }\n      }\n      for (let i = 0; i <= maximumCaptureId; i++) {\n        r[i] = null;\n      }\n      for (const captureId in captures) {\n        if (captureId === \"$vscodeTextmateLocation\") {\n          continue;\n        }\n        const numericCaptureId = parseInt(captureId, 10);\n        let retokenizeCapturedWithRuleId = 0;\n        if (captures[captureId].patterns) {\n          retokenizeCapturedWithRuleId = _RuleFactory.getCompiledRuleId(captures[captureId], helper, repository);\n        }\n        r[numericCaptureId] = _RuleFactory.createCaptureRule(helper, captures[captureId].$vscodeTextmateLocation, captures[captureId].name, captures[captureId].contentName, retokenizeCapturedWithRuleId);\n      }\n    }\n    return r;\n  }\n  static _compilePatterns(patterns, helper, repository) {\n    let r = [];\n    if (patterns) {\n      for (let i = 0, len = patterns.length; i < len; i++) {\n        const pattern = patterns[i];\n        let ruleId = -1;\n        if (pattern.include) {\n          const reference = parseInclude(pattern.include);\n          switch (reference.kind) {\n            case 0 /* Base */:\n            case 1 /* Self */:\n              ruleId = _RuleFactory.getCompiledRuleId(repository[pattern.include], helper, repository);\n              break;\n            case 2 /* RelativeReference */:\n              let localIncludedRule = repository[reference.ruleName];\n              if (localIncludedRule) {\n                ruleId = _RuleFactory.getCompiledRuleId(localIncludedRule, helper, repository);\n              } else {\n              }\n              break;\n            case 3 /* TopLevelReference */:\n            case 4 /* TopLevelRepositoryReference */:\n              const externalGrammarName = reference.scopeName;\n              const externalGrammarInclude = reference.kind === 4 /* TopLevelRepositoryReference */ ? reference.ruleName : null;\n              const externalGrammar = helper.getExternalGrammar(externalGrammarName, repository);\n              if (externalGrammar) {\n                if (externalGrammarInclude) {\n                  let externalIncludedRule = externalGrammar.repository[externalGrammarInclude];\n                  if (externalIncludedRule) {\n                    ruleId = _RuleFactory.getCompiledRuleId(externalIncludedRule, helper, externalGrammar.repository);\n                  } else {\n                  }\n                } else {\n                  ruleId = _RuleFactory.getCompiledRuleId(externalGrammar.repository.$self, helper, externalGrammar.repository);\n                }\n              } else {\n              }\n              break;\n          }\n        } else {\n          ruleId = _RuleFactory.getCompiledRuleId(pattern, helper, repository);\n        }\n        if (ruleId !== -1) {\n          const rule = helper.getRule(ruleId);\n          let skipRule = false;\n          if (rule instanceof IncludeOnlyRule || rule instanceof BeginEndRule || rule instanceof BeginWhileRule) {\n            if (rule.hasMissingPatterns && rule.patterns.length === 0) {\n              skipRule = true;\n            }\n          }\n          if (skipRule) {\n            continue;\n          }\n          r.push(ruleId);\n        }\n      }\n    }\n    return {\n      patterns: r,\n      hasMissingPatterns: (patterns ? patterns.length : 0) !== r.length\n    };\n  }\n};\nvar RegExpSource = class _RegExpSource {\n  source;\n  ruleId;\n  hasAnchor;\n  hasBackReferences;\n  _anchorCache;\n  constructor(regExpSource, ruleId) {\n    if (regExpSource && typeof regExpSource === \"string\") {\n      const len = regExpSource.length;\n      let lastPushedPos = 0;\n      let output = [];\n      let hasAnchor = false;\n      for (let pos = 0; pos < len; pos++) {\n        const ch = regExpSource.charAt(pos);\n        if (ch === \"\\\\\") {\n          if (pos + 1 < len) {\n            const nextCh = regExpSource.charAt(pos + 1);\n            if (nextCh === \"z\") {\n              output.push(regExpSource.substring(lastPushedPos, pos));\n              output.push(\"$(?!\\\\n)(?<!\\\\n)\");\n              lastPushedPos = pos + 2;\n            } else if (nextCh === \"A\" || nextCh === \"G\") {\n              hasAnchor = true;\n            }\n            pos++;\n          }\n        }\n      }\n      this.hasAnchor = hasAnchor;\n      if (lastPushedPos === 0) {\n        this.source = regExpSource;\n      } else {\n        output.push(regExpSource.substring(lastPushedPos, len));\n        this.source = output.join(\"\");\n      }\n    } else {\n      this.hasAnchor = false;\n      this.source = regExpSource;\n    }\n    if (this.hasAnchor) {\n      this._anchorCache = this._buildAnchorCache();\n    } else {\n      this._anchorCache = null;\n    }\n    this.ruleId = ruleId;\n    if (typeof this.source === \"string\") {\n      this.hasBackReferences = HAS_BACK_REFERENCES.test(this.source);\n    } else {\n      this.hasBackReferences = false;\n    }\n  }\n  clone() {\n    return new _RegExpSource(this.source, this.ruleId);\n  }\n  setSource(newSource) {\n    if (this.source === newSource) {\n      return;\n    }\n    this.source = newSource;\n    if (this.hasAnchor) {\n      this._anchorCache = this._buildAnchorCache();\n    }\n  }\n  resolveBackReferences(lineText, captureIndices) {\n    if (typeof this.source !== \"string\") {\n      throw new Error(\"This method should only be called if the source is a string\");\n    }\n    let capturedValues = captureIndices.map((capture) => {\n      return lineText.substring(capture.start, capture.end);\n    });\n    BACK_REFERENCING_END.lastIndex = 0;\n    return this.source.replace(BACK_REFERENCING_END, (match, g1) => {\n      return escapeRegExpCharacters(capturedValues[parseInt(g1, 10)] || \"\");\n    });\n  }\n  _buildAnchorCache() {\n    if (typeof this.source !== \"string\") {\n      throw new Error(\"This method should only be called if the source is a string\");\n    }\n    let A0_G0_result = [];\n    let A0_G1_result = [];\n    let A1_G0_result = [];\n    let A1_G1_result = [];\n    let pos, len, ch, nextCh;\n    for (pos = 0, len = this.source.length; pos < len; pos++) {\n      ch = this.source.charAt(pos);\n      A0_G0_result[pos] = ch;\n      A0_G1_result[pos] = ch;\n      A1_G0_result[pos] = ch;\n      A1_G1_result[pos] = ch;\n      if (ch === \"\\\\\") {\n        if (pos + 1 < len) {\n          nextCh = this.source.charAt(pos + 1);\n          if (nextCh === \"A\") {\n            A0_G0_result[pos + 1] = \"\\uFFFF\";\n            A0_G1_result[pos + 1] = \"\\uFFFF\";\n            A1_G0_result[pos + 1] = \"A\";\n            A1_G1_result[pos + 1] = \"A\";\n          } else if (nextCh === \"G\") {\n            A0_G0_result[pos + 1] = \"\\uFFFF\";\n            A0_G1_result[pos + 1] = \"G\";\n            A1_G0_result[pos + 1] = \"\\uFFFF\";\n            A1_G1_result[pos + 1] = \"G\";\n          } else {\n            A0_G0_result[pos + 1] = nextCh;\n            A0_G1_result[pos + 1] = nextCh;\n            A1_G0_result[pos + 1] = nextCh;\n            A1_G1_result[pos + 1] = nextCh;\n          }\n          pos++;\n        }\n      }\n    }\n    return {\n      A0_G0: A0_G0_result.join(\"\"),\n      A0_G1: A0_G1_result.join(\"\"),\n      A1_G0: A1_G0_result.join(\"\"),\n      A1_G1: A1_G1_result.join(\"\")\n    };\n  }\n  resolveAnchors(allowA, allowG) {\n    if (!this.hasAnchor || !this._anchorCache || typeof this.source !== \"string\") {\n      return this.source;\n    }\n    if (allowA) {\n      if (allowG) {\n        return this._anchorCache.A1_G1;\n      } else {\n        return this._anchorCache.A1_G0;\n      }\n    } else {\n      if (allowG) {\n        return this._anchorCache.A0_G1;\n      } else {\n        return this._anchorCache.A0_G0;\n      }\n    }\n  }\n};\nvar RegExpSourceList = class {\n  _items;\n  _hasAnchors;\n  _cached;\n  _anchorCache;\n  constructor() {\n    this._items = [];\n    this._hasAnchors = false;\n    this._cached = null;\n    this._anchorCache = {\n      A0_G0: null,\n      A0_G1: null,\n      A1_G0: null,\n      A1_G1: null\n    };\n  }\n  dispose() {\n    this._disposeCaches();\n  }\n  _disposeCaches() {\n    if (this._cached) {\n      this._cached.dispose();\n      this._cached = null;\n    }\n    if (this._anchorCache.A0_G0) {\n      this._anchorCache.A0_G0.dispose();\n      this._anchorCache.A0_G0 = null;\n    }\n    if (this._anchorCache.A0_G1) {\n      this._anchorCache.A0_G1.dispose();\n      this._anchorCache.A0_G1 = null;\n    }\n    if (this._anchorCache.A1_G0) {\n      this._anchorCache.A1_G0.dispose();\n      this._anchorCache.A1_G0 = null;\n    }\n    if (this._anchorCache.A1_G1) {\n      this._anchorCache.A1_G1.dispose();\n      this._anchorCache.A1_G1 = null;\n    }\n  }\n  push(item) {\n    this._items.push(item);\n    this._hasAnchors = this._hasAnchors || item.hasAnchor;\n  }\n  unshift(item) {\n    this._items.unshift(item);\n    this._hasAnchors = this._hasAnchors || item.hasAnchor;\n  }\n  length() {\n    return this._items.length;\n  }\n  setSource(index, newSource) {\n    if (this._items[index].source !== newSource) {\n      this._disposeCaches();\n      this._items[index].setSource(newSource);\n    }\n  }\n  compile(onigLib) {\n    if (!this._cached) {\n      let regExps = this._items.map((e) => e.source);\n      this._cached = new CompiledRule(onigLib, regExps, this._items.map((e) => e.ruleId));\n    }\n    return this._cached;\n  }\n  compileAG(onigLib, allowA, allowG) {\n    if (!this._hasAnchors) {\n      return this.compile(onigLib);\n    } else {\n      if (allowA) {\n        if (allowG) {\n          if (!this._anchorCache.A1_G1) {\n            this._anchorCache.A1_G1 = this._resolveAnchors(onigLib, allowA, allowG);\n          }\n          return this._anchorCache.A1_G1;\n        } else {\n          if (!this._anchorCache.A1_G0) {\n            this._anchorCache.A1_G0 = this._resolveAnchors(onigLib, allowA, allowG);\n          }\n          return this._anchorCache.A1_G0;\n        }\n      } else {\n        if (allowG) {\n          if (!this._anchorCache.A0_G1) {\n            this._anchorCache.A0_G1 = this._resolveAnchors(onigLib, allowA, allowG);\n          }\n          return this._anchorCache.A0_G1;\n        } else {\n          if (!this._anchorCache.A0_G0) {\n            this._anchorCache.A0_G0 = this._resolveAnchors(onigLib, allowA, allowG);\n          }\n          return this._anchorCache.A0_G0;\n        }\n      }\n    }\n  }\n  _resolveAnchors(onigLib, allowA, allowG) {\n    let regExps = this._items.map((e) => e.resolveAnchors(allowA, allowG));\n    return new CompiledRule(onigLib, regExps, this._items.map((e) => e.ruleId));\n  }\n};\nvar CompiledRule = class {\n  constructor(onigLib, regExps, rules) {\n    this.regExps = regExps;\n    this.rules = rules;\n    this.scanner = onigLib.createOnigScanner(regExps);\n  }\n  scanner;\n  dispose() {\n    if (typeof this.scanner.dispose === \"function\") {\n      this.scanner.dispose();\n    }\n  }\n  toString() {\n    const r = [];\n    for (let i = 0, len = this.rules.length; i < len; i++) {\n      r.push(\"   - \" + this.rules[i] + \": \" + this.regExps[i]);\n    }\n    return r.join(\"\\n\");\n  }\n  findNextMatchSync(string, startPosition, options) {\n    const result = this.scanner.findNextMatchSync(string, startPosition, options);\n    if (!result) {\n      return null;\n    }\n    return {\n      ruleId: this.rules[result.index],\n      captureIndices: result.captureIndices\n    };\n  }\n};\n\n// src/grammar/basicScopesAttributeProvider.ts\nvar BasicScopeAttributes = class {\n  constructor(languageId, tokenType) {\n    this.languageId = languageId;\n    this.tokenType = tokenType;\n  }\n};\nvar BasicScopeAttributesProvider = class _BasicScopeAttributesProvider {\n  _defaultAttributes;\n  _embeddedLanguagesMatcher;\n  constructor(initialLanguageId, embeddedLanguages) {\n    this._defaultAttributes = new BasicScopeAttributes(initialLanguageId, 8 /* NotSet */);\n    this._embeddedLanguagesMatcher = new ScopeMatcher(Object.entries(embeddedLanguages || {}));\n  }\n  getDefaultAttributes() {\n    return this._defaultAttributes;\n  }\n  getBasicScopeAttributes(scopeName) {\n    if (scopeName === null) {\n      return _BasicScopeAttributesProvider._NULL_SCOPE_METADATA;\n    }\n    return this._getBasicScopeAttributes.get(scopeName);\n  }\n  static _NULL_SCOPE_METADATA = new BasicScopeAttributes(0, 0);\n  _getBasicScopeAttributes = new CachedFn((scopeName) => {\n    const languageId = this._scopeToLanguage(scopeName);\n    const standardTokenType = this._toStandardTokenType(scopeName);\n    return new BasicScopeAttributes(languageId, standardTokenType);\n  });\n  /**\n   * Given a produced TM scope, return the language that token describes or null if unknown.\n   * e.g. source.html => html, source.css.embedded.html => css, punctuation.definition.tag.html => null\n   */\n  _scopeToLanguage(scope) {\n    return this._embeddedLanguagesMatcher.match(scope) || 0;\n  }\n  _toStandardTokenType(scopeName) {\n    const m = scopeName.match(_BasicScopeAttributesProvider.STANDARD_TOKEN_TYPE_REGEXP);\n    if (!m) {\n      return 8 /* NotSet */;\n    }\n    switch (m[1]) {\n      case \"comment\":\n        return 1 /* Comment */;\n      case \"string\":\n        return 2 /* String */;\n      case \"regex\":\n        return 3 /* RegEx */;\n      case \"meta.embedded\":\n        return 0 /* Other */;\n    }\n    throw new Error(\"Unexpected match for standard token type!\");\n  }\n  static STANDARD_TOKEN_TYPE_REGEXP = /\\b(comment|string|regex|meta\\.embedded)\\b/;\n};\nvar ScopeMatcher = class {\n  values;\n  scopesRegExp;\n  constructor(values) {\n    if (values.length === 0) {\n      this.values = null;\n      this.scopesRegExp = null;\n    } else {\n      this.values = new Map(values);\n      const escapedScopes = values.map(\n        ([scopeName, value]) => escapeRegExpCharacters(scopeName)\n      );\n      escapedScopes.sort();\n      escapedScopes.reverse();\n      this.scopesRegExp = new RegExp(\n        `^((${escapedScopes.join(\")|(\")}))($|\\\\.)`,\n        \"\"\n      );\n    }\n  }\n  match(scope) {\n    if (!this.scopesRegExp) {\n      return void 0;\n    }\n    const m = scope.match(this.scopesRegExp);\n    if (!m) {\n      return void 0;\n    }\n    return this.values.get(m[1]);\n  }\n};\n\n// src/debug.ts\nvar DebugFlags = {\n  InDebugMode: typeof process !== \"undefined\" && !!process.env[\"VSCODE_TEXTMATE_DEBUG\"]\n};\nvar UseOnigurumaFindOptions = false;\n\n// src/grammar/tokenizeString.ts\nvar TokenizeStringResult = class {\n  constructor(stack, stoppedEarly) {\n    this.stack = stack;\n    this.stoppedEarly = stoppedEarly;\n  }\n};\nfunction _tokenizeString(grammar, lineText, isFirstLine, linePos, stack, lineTokens, checkWhileConditions, timeLimit) {\n  const lineLength = lineText.content.length;\n  let STOP = false;\n  let anchorPosition = -1;\n  if (checkWhileConditions) {\n    const whileCheckResult = _checkWhileConditions(\n      grammar,\n      lineText,\n      isFirstLine,\n      linePos,\n      stack,\n      lineTokens\n    );\n    stack = whileCheckResult.stack;\n    linePos = whileCheckResult.linePos;\n    isFirstLine = whileCheckResult.isFirstLine;\n    anchorPosition = whileCheckResult.anchorPosition;\n  }\n  const startTime = Date.now();\n  while (!STOP) {\n    if (timeLimit !== 0) {\n      const elapsedTime = Date.now() - startTime;\n      if (elapsedTime > timeLimit) {\n        return new TokenizeStringResult(stack, true);\n      }\n    }\n    scanNext();\n  }\n  return new TokenizeStringResult(stack, false);\n  function scanNext() {\n    if (false) {\n      console.log(\"\");\n      console.log(\n        `@@scanNext ${linePos}: |${lineText.content.substr(linePos).replace(/\\n$/, \"\\\\n\")}|`\n      );\n    }\n    const r = matchRuleOrInjections(\n      grammar,\n      lineText,\n      isFirstLine,\n      linePos,\n      stack,\n      anchorPosition\n    );\n    if (!r) {\n      lineTokens.produce(stack, lineLength);\n      STOP = true;\n      return;\n    }\n    const captureIndices = r.captureIndices;\n    const matchedRuleId = r.matchedRuleId;\n    const hasAdvanced = captureIndices && captureIndices.length > 0 ? captureIndices[0].end > linePos : false;\n    if (matchedRuleId === endRuleId) {\n      const poppedRule = stack.getRule(grammar);\n      if (false) {\n        console.log(\n          \"  popping \" + poppedRule.debugName + \" - \" + poppedRule.debugEndRegExp\n        );\n      }\n      lineTokens.produce(stack, captureIndices[0].start);\n      stack = stack.withContentNameScopesList(stack.nameScopesList);\n      handleCaptures(\n        grammar,\n        lineText,\n        isFirstLine,\n        stack,\n        lineTokens,\n        poppedRule.endCaptures,\n        captureIndices\n      );\n      lineTokens.produce(stack, captureIndices[0].end);\n      const popped = stack;\n      stack = stack.parent;\n      anchorPosition = popped.getAnchorPos();\n      if (!hasAdvanced && popped.getEnterPos() === linePos) {\n        if (false) {\n          console.error(\n            \"[1] - Grammar is in an endless loop - Grammar pushed & popped a rule without advancing\"\n          );\n        }\n        stack = popped;\n        lineTokens.produce(stack, lineLength);\n        STOP = true;\n        return;\n      }\n    } else {\n      const _rule = grammar.getRule(matchedRuleId);\n      lineTokens.produce(stack, captureIndices[0].start);\n      const beforePush = stack;\n      const scopeName = _rule.getName(lineText.content, captureIndices);\n      const nameScopesList = stack.contentNameScopesList.pushAttributed(\n        scopeName,\n        grammar\n      );\n      stack = stack.push(\n        matchedRuleId,\n        linePos,\n        anchorPosition,\n        captureIndices[0].end === lineLength,\n        null,\n        nameScopesList,\n        nameScopesList\n      );\n      if (_rule instanceof BeginEndRule) {\n        const pushedRule = _rule;\n        if (false) {\n          console.log(\n            \"  pushing \" + pushedRule.debugName + \" - \" + pushedRule.debugBeginRegExp\n          );\n        }\n        handleCaptures(\n          grammar,\n          lineText,\n          isFirstLine,\n          stack,\n          lineTokens,\n          pushedRule.beginCaptures,\n          captureIndices\n        );\n        lineTokens.produce(stack, captureIndices[0].end);\n        anchorPosition = captureIndices[0].end;\n        const contentName = pushedRule.getContentName(\n          lineText.content,\n          captureIndices\n        );\n        const contentNameScopesList = nameScopesList.pushAttributed(\n          contentName,\n          grammar\n        );\n        stack = stack.withContentNameScopesList(contentNameScopesList);\n        if (pushedRule.endHasBackReferences) {\n          stack = stack.withEndRule(\n            pushedRule.getEndWithResolvedBackReferences(\n              lineText.content,\n              captureIndices\n            )\n          );\n        }\n        if (!hasAdvanced && beforePush.hasSameRuleAs(stack)) {\n          if (false) {\n            console.error(\n              \"[2] - Grammar is in an endless loop - Grammar pushed the same rule without advancing\"\n            );\n          }\n          stack = stack.pop();\n          lineTokens.produce(stack, lineLength);\n          STOP = true;\n          return;\n        }\n      } else if (_rule instanceof BeginWhileRule) {\n        const pushedRule = _rule;\n        if (false) {\n          console.log(\"  pushing \" + pushedRule.debugName);\n        }\n        handleCaptures(\n          grammar,\n          lineText,\n          isFirstLine,\n          stack,\n          lineTokens,\n          pushedRule.beginCaptures,\n          captureIndices\n        );\n        lineTokens.produce(stack, captureIndices[0].end);\n        anchorPosition = captureIndices[0].end;\n        const contentName = pushedRule.getContentName(\n          lineText.content,\n          captureIndices\n        );\n        const contentNameScopesList = nameScopesList.pushAttributed(\n          contentName,\n          grammar\n        );\n        stack = stack.withContentNameScopesList(contentNameScopesList);\n        if (pushedRule.whileHasBackReferences) {\n          stack = stack.withEndRule(\n            pushedRule.getWhileWithResolvedBackReferences(\n              lineText.content,\n              captureIndices\n            )\n          );\n        }\n        if (!hasAdvanced && beforePush.hasSameRuleAs(stack)) {\n          if (false) {\n            console.error(\n              \"[3] - Grammar is in an endless loop - Grammar pushed the same rule without advancing\"\n            );\n          }\n          stack = stack.pop();\n          lineTokens.produce(stack, lineLength);\n          STOP = true;\n          return;\n        }\n      } else {\n        const matchingRule = _rule;\n        if (false) {\n          console.log(\n            \"  matched \" + matchingRule.debugName + \" - \" + matchingRule.debugMatchRegExp\n          );\n        }\n        handleCaptures(\n          grammar,\n          lineText,\n          isFirstLine,\n          stack,\n          lineTokens,\n          matchingRule.captures,\n          captureIndices\n        );\n        lineTokens.produce(stack, captureIndices[0].end);\n        stack = stack.pop();\n        if (!hasAdvanced) {\n          if (false) {\n            console.error(\n              \"[4] - Grammar is in an endless loop - Grammar is not advancing, nor is it pushing/popping\"\n            );\n          }\n          stack = stack.safePop();\n          lineTokens.produce(stack, lineLength);\n          STOP = true;\n          return;\n        }\n      }\n    }\n    if (captureIndices[0].end > linePos) {\n      linePos = captureIndices[0].end;\n      isFirstLine = false;\n    }\n  }\n}\nfunction _checkWhileConditions(grammar, lineText, isFirstLine, linePos, stack, lineTokens) {\n  let anchorPosition = stack.beginRuleCapturedEOL ? 0 : -1;\n  const whileRules = [];\n  for (let node = stack; node; node = node.pop()) {\n    const nodeRule = node.getRule(grammar);\n    if (nodeRule instanceof BeginWhileRule) {\n      whileRules.push({\n        rule: nodeRule,\n        stack: node\n      });\n    }\n  }\n  for (let whileRule = whileRules.pop(); whileRule; whileRule = whileRules.pop()) {\n    const { ruleScanner, findOptions } = prepareRuleWhileSearch(whileRule.rule, grammar, whileRule.stack.endRule, isFirstLine, linePos === anchorPosition);\n    const r = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n    if (false) {\n      console.log(\"  scanning for while rule\");\n      console.log(ruleScanner.toString());\n    }\n    if (r) {\n      const matchedRuleId = r.ruleId;\n      if (matchedRuleId !== whileRuleId) {\n        stack = whileRule.stack.pop();\n        break;\n      }\n      if (r.captureIndices && r.captureIndices.length) {\n        lineTokens.produce(whileRule.stack, r.captureIndices[0].start);\n        handleCaptures(grammar, lineText, isFirstLine, whileRule.stack, lineTokens, whileRule.rule.whileCaptures, r.captureIndices);\n        lineTokens.produce(whileRule.stack, r.captureIndices[0].end);\n        anchorPosition = r.captureIndices[0].end;\n        if (r.captureIndices[0].end > linePos) {\n          linePos = r.captureIndices[0].end;\n          isFirstLine = false;\n        }\n      }\n    } else {\n      if (false) {\n        console.log(\"  popping \" + whileRule.rule.debugName + \" - \" + whileRule.rule.debugWhileRegExp);\n      }\n      stack = whileRule.stack.pop();\n      break;\n    }\n  }\n  return { stack, linePos, anchorPosition, isFirstLine };\n}\nfunction matchRuleOrInjections(grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n  const matchResult = matchRule(grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n  const injections = grammar.getInjections();\n  if (injections.length === 0) {\n    return matchResult;\n  }\n  const injectionResult = matchInjections(injections, grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n  if (!injectionResult) {\n    return matchResult;\n  }\n  if (!matchResult) {\n    return injectionResult;\n  }\n  const matchResultScore = matchResult.captureIndices[0].start;\n  const injectionResultScore = injectionResult.captureIndices[0].start;\n  if (injectionResultScore < matchResultScore || injectionResult.priorityMatch && injectionResultScore === matchResultScore) {\n    return injectionResult;\n  }\n  return matchResult;\n}\nfunction matchRule(grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n  const rule = stack.getRule(grammar);\n  const { ruleScanner, findOptions } = prepareRuleSearch(rule, grammar, stack.endRule, isFirstLine, linePos === anchorPosition);\n  const r = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n  if (r) {\n    return {\n      captureIndices: r.captureIndices,\n      matchedRuleId: r.ruleId\n    };\n  }\n  return null;\n}\nfunction matchInjections(injections, grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n  let bestMatchRating = Number.MAX_VALUE;\n  let bestMatchCaptureIndices = null;\n  let bestMatchRuleId;\n  let bestMatchResultPriority = 0;\n  const scopes = stack.contentNameScopesList.getScopeNames();\n  for (let i = 0, len = injections.length; i < len; i++) {\n    const injection = injections[i];\n    if (!injection.matcher(scopes)) {\n      continue;\n    }\n    const rule = grammar.getRule(injection.ruleId);\n    const { ruleScanner, findOptions } = prepareRuleSearch(rule, grammar, null, isFirstLine, linePos === anchorPosition);\n    const matchResult = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n    if (!matchResult) {\n      continue;\n    }\n    if (false) {\n      console.log(`  matched injection: ${injection.debugSelector}`);\n      console.log(ruleScanner.toString());\n    }\n    const matchRating = matchResult.captureIndices[0].start;\n    if (matchRating >= bestMatchRating) {\n      continue;\n    }\n    bestMatchRating = matchRating;\n    bestMatchCaptureIndices = matchResult.captureIndices;\n    bestMatchRuleId = matchResult.ruleId;\n    bestMatchResultPriority = injection.priority;\n    if (bestMatchRating === linePos) {\n      break;\n    }\n  }\n  if (bestMatchCaptureIndices) {\n    return {\n      priorityMatch: bestMatchResultPriority === -1,\n      captureIndices: bestMatchCaptureIndices,\n      matchedRuleId: bestMatchRuleId\n    };\n  }\n  return null;\n}\nfunction prepareRuleSearch(rule, grammar, endRegexSource, allowA, allowG) {\n  if (UseOnigurumaFindOptions) {\n    const ruleScanner2 = rule.compile(grammar, endRegexSource);\n    const findOptions = getFindOptions(allowA, allowG);\n    return { ruleScanner: ruleScanner2, findOptions };\n  }\n  const ruleScanner = rule.compileAG(grammar, endRegexSource, allowA, allowG);\n  return { ruleScanner, findOptions: 0 /* None */ };\n}\nfunction prepareRuleWhileSearch(rule, grammar, endRegexSource, allowA, allowG) {\n  if (UseOnigurumaFindOptions) {\n    const ruleScanner2 = rule.compileWhile(grammar, endRegexSource);\n    const findOptions = getFindOptions(allowA, allowG);\n    return { ruleScanner: ruleScanner2, findOptions };\n  }\n  const ruleScanner = rule.compileWhileAG(grammar, endRegexSource, allowA, allowG);\n  return { ruleScanner, findOptions: 0 /* None */ };\n}\nfunction getFindOptions(allowA, allowG) {\n  let options = 0 /* None */;\n  if (!allowA) {\n    options |= 1 /* NotBeginString */;\n  }\n  if (!allowG) {\n    options |= 4 /* NotBeginPosition */;\n  }\n  return options;\n}\nfunction handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, captures, captureIndices) {\n  if (captures.length === 0) {\n    return;\n  }\n  const lineTextContent = lineText.content;\n  const len = Math.min(captures.length, captureIndices.length);\n  const localStack = [];\n  const maxEnd = captureIndices[0].end;\n  for (let i = 0; i < len; i++) {\n    const captureRule = captures[i];\n    if (captureRule === null) {\n      continue;\n    }\n    const captureIndex = captureIndices[i];\n    if (captureIndex.length === 0) {\n      continue;\n    }\n    if (captureIndex.start > maxEnd) {\n      break;\n    }\n    while (localStack.length > 0 && localStack[localStack.length - 1].endPos <= captureIndex.start) {\n      lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, localStack[localStack.length - 1].endPos);\n      localStack.pop();\n    }\n    if (localStack.length > 0) {\n      lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, captureIndex.start);\n    } else {\n      lineTokens.produce(stack, captureIndex.start);\n    }\n    if (captureRule.retokenizeCapturedWithRuleId) {\n      const scopeName = captureRule.getName(lineTextContent, captureIndices);\n      const nameScopesList = stack.contentNameScopesList.pushAttributed(scopeName, grammar);\n      const contentName = captureRule.getContentName(lineTextContent, captureIndices);\n      const contentNameScopesList = nameScopesList.pushAttributed(contentName, grammar);\n      const stackClone = stack.push(captureRule.retokenizeCapturedWithRuleId, captureIndex.start, -1, false, null, nameScopesList, contentNameScopesList);\n      const onigSubStr = grammar.createOnigString(lineTextContent.substring(0, captureIndex.end));\n      _tokenizeString(\n        grammar,\n        onigSubStr,\n        isFirstLine && captureIndex.start === 0,\n        captureIndex.start,\n        stackClone,\n        lineTokens,\n        false,\n        /* no time limit */\n        0\n      );\n      disposeOnigString(onigSubStr);\n      continue;\n    }\n    const captureRuleScopeName = captureRule.getName(lineTextContent, captureIndices);\n    if (captureRuleScopeName !== null) {\n      const base = localStack.length > 0 ? localStack[localStack.length - 1].scopes : stack.contentNameScopesList;\n      const captureRuleScopesList = base.pushAttributed(captureRuleScopeName, grammar);\n      localStack.push(new LocalStackElement(captureRuleScopesList, captureIndex.end));\n    }\n  }\n  while (localStack.length > 0) {\n    lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, localStack[localStack.length - 1].endPos);\n    localStack.pop();\n  }\n}\nvar LocalStackElement = class {\n  scopes;\n  endPos;\n  constructor(scopes, endPos) {\n    this.scopes = scopes;\n    this.endPos = endPos;\n  }\n};\n\n// src/grammar/grammar.ts\nfunction createGrammar(scopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, onigLib) {\n  return new Grammar(\n    scopeName,\n    grammar,\n    initialLanguage,\n    embeddedLanguages,\n    tokenTypes,\n    balancedBracketSelectors,\n    grammarRepository,\n    onigLib\n  );\n}\nfunction collectInjections(result, selector, rule, ruleFactoryHelper, grammar) {\n  const matchers = createMatchers(selector, nameMatcher);\n  const ruleId = RuleFactory.getCompiledRuleId(rule, ruleFactoryHelper, grammar.repository);\n  for (const matcher of matchers) {\n    result.push({\n      debugSelector: selector,\n      matcher: matcher.matcher,\n      ruleId,\n      grammar,\n      priority: matcher.priority\n    });\n  }\n}\nfunction nameMatcher(identifers, scopes) {\n  if (scopes.length < identifers.length) {\n    return false;\n  }\n  let lastIndex = 0;\n  return identifers.every((identifier) => {\n    for (let i = lastIndex; i < scopes.length; i++) {\n      if (scopesAreMatching(scopes[i], identifier)) {\n        lastIndex = i + 1;\n        return true;\n      }\n    }\n    return false;\n  });\n}\nfunction scopesAreMatching(thisScopeName, scopeName) {\n  if (!thisScopeName) {\n    return false;\n  }\n  if (thisScopeName === scopeName) {\n    return true;\n  }\n  const len = scopeName.length;\n  return thisScopeName.length > len && thisScopeName.substr(0, len) === scopeName && thisScopeName[len] === \".\";\n}\nvar Grammar = class {\n  constructor(_rootScopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, _onigLib) {\n    this._rootScopeName = _rootScopeName;\n    this.balancedBracketSelectors = balancedBracketSelectors;\n    this._onigLib = _onigLib;\n    this._basicScopeAttributesProvider = new BasicScopeAttributesProvider(\n      initialLanguage,\n      embeddedLanguages\n    );\n    this._rootId = -1;\n    this._lastRuleId = 0;\n    this._ruleId2desc = [null];\n    this._includedGrammars = {};\n    this._grammarRepository = grammarRepository;\n    this._grammar = initGrammar(grammar, null);\n    this._injections = null;\n    this._tokenTypeMatchers = [];\n    if (tokenTypes) {\n      for (const selector of Object.keys(tokenTypes)) {\n        const matchers = createMatchers(selector, nameMatcher);\n        for (const matcher of matchers) {\n          this._tokenTypeMatchers.push({\n            matcher: matcher.matcher,\n            type: tokenTypes[selector]\n          });\n        }\n      }\n    }\n  }\n  _rootId;\n  _lastRuleId;\n  _ruleId2desc;\n  _includedGrammars;\n  _grammarRepository;\n  _grammar;\n  _injections;\n  _basicScopeAttributesProvider;\n  _tokenTypeMatchers;\n  get themeProvider() {\n    return this._grammarRepository;\n  }\n  dispose() {\n    for (const rule of this._ruleId2desc) {\n      if (rule) {\n        rule.dispose();\n      }\n    }\n  }\n  createOnigScanner(sources) {\n    return this._onigLib.createOnigScanner(sources);\n  }\n  createOnigString(sources) {\n    return this._onigLib.createOnigString(sources);\n  }\n  getMetadataForScope(scope) {\n    return this._basicScopeAttributesProvider.getBasicScopeAttributes(scope);\n  }\n  _collectInjections() {\n    const grammarRepository = {\n      lookup: (scopeName2) => {\n        if (scopeName2 === this._rootScopeName) {\n          return this._grammar;\n        }\n        return this.getExternalGrammar(scopeName2);\n      },\n      injections: (scopeName2) => {\n        return this._grammarRepository.injections(scopeName2);\n      }\n    };\n    const result = [];\n    const scopeName = this._rootScopeName;\n    const grammar = grammarRepository.lookup(scopeName);\n    if (grammar) {\n      const rawInjections = grammar.injections;\n      if (rawInjections) {\n        for (let expression in rawInjections) {\n          collectInjections(\n            result,\n            expression,\n            rawInjections[expression],\n            this,\n            grammar\n          );\n        }\n      }\n      const injectionScopeNames = this._grammarRepository.injections(scopeName);\n      if (injectionScopeNames) {\n        injectionScopeNames.forEach((injectionScopeName) => {\n          const injectionGrammar = this.getExternalGrammar(injectionScopeName);\n          if (injectionGrammar) {\n            const selector = injectionGrammar.injectionSelector;\n            if (selector) {\n              collectInjections(\n                result,\n                selector,\n                injectionGrammar,\n                this,\n                injectionGrammar\n              );\n            }\n          }\n        });\n      }\n    }\n    result.sort((i1, i2) => i1.priority - i2.priority);\n    return result;\n  }\n  getInjections() {\n    if (this._injections === null) {\n      this._injections = this._collectInjections();\n    }\n    return this._injections;\n  }\n  registerRule(factory) {\n    const id = ++this._lastRuleId;\n    const result = factory(ruleIdFromNumber(id));\n    this._ruleId2desc[id] = result;\n    return result;\n  }\n  getRule(ruleId) {\n    return this._ruleId2desc[ruleIdToNumber(ruleId)];\n  }\n  getExternalGrammar(scopeName, repository) {\n    if (this._includedGrammars[scopeName]) {\n      return this._includedGrammars[scopeName];\n    } else if (this._grammarRepository) {\n      const rawIncludedGrammar = this._grammarRepository.lookup(scopeName);\n      if (rawIncludedGrammar) {\n        this._includedGrammars[scopeName] = initGrammar(\n          rawIncludedGrammar,\n          repository && repository.$base\n        );\n        return this._includedGrammars[scopeName];\n      }\n    }\n    return void 0;\n  }\n  tokenizeLine(lineText, prevState, timeLimit = 0) {\n    const r = this._tokenize(lineText, prevState, false, timeLimit);\n    return {\n      tokens: r.lineTokens.getResult(r.ruleStack, r.lineLength),\n      ruleStack: r.ruleStack,\n      stoppedEarly: r.stoppedEarly\n    };\n  }\n  tokenizeLine2(lineText, prevState, timeLimit = 0) {\n    const r = this._tokenize(lineText, prevState, true, timeLimit);\n    return {\n      tokens: r.lineTokens.getBinaryResult(r.ruleStack, r.lineLength),\n      ruleStack: r.ruleStack,\n      stoppedEarly: r.stoppedEarly\n    };\n  }\n  _tokenize(lineText, prevState, emitBinaryTokens, timeLimit) {\n    if (this._rootId === -1) {\n      this._rootId = RuleFactory.getCompiledRuleId(\n        this._grammar.repository.$self,\n        this,\n        this._grammar.repository\n      );\n      this.getInjections();\n    }\n    let isFirstLine;\n    if (!prevState || prevState === StateStackImpl.NULL) {\n      isFirstLine = true;\n      const rawDefaultMetadata = this._basicScopeAttributesProvider.getDefaultAttributes();\n      const defaultStyle = this.themeProvider.getDefaults();\n      const defaultMetadata = EncodedTokenMetadata.set(\n        0,\n        rawDefaultMetadata.languageId,\n        rawDefaultMetadata.tokenType,\n        null,\n        defaultStyle.fontStyle,\n        defaultStyle.foregroundId,\n        defaultStyle.backgroundId\n      );\n      const rootScopeName = this.getRule(this._rootId).getName(\n        null,\n        null\n      );\n      let scopeList;\n      if (rootScopeName) {\n        scopeList = AttributedScopeStack.createRootAndLookUpScopeName(\n          rootScopeName,\n          defaultMetadata,\n          this\n        );\n      } else {\n        scopeList = AttributedScopeStack.createRoot(\n          \"unknown\",\n          defaultMetadata\n        );\n      }\n      prevState = new StateStackImpl(\n        null,\n        this._rootId,\n        -1,\n        -1,\n        false,\n        null,\n        scopeList,\n        scopeList\n      );\n    } else {\n      isFirstLine = false;\n      prevState.reset();\n    }\n    lineText = lineText + \"\\n\";\n    const onigLineText = this.createOnigString(lineText);\n    const lineLength = onigLineText.content.length;\n    const lineTokens = new LineTokens(\n      emitBinaryTokens,\n      lineText,\n      this._tokenTypeMatchers,\n      this.balancedBracketSelectors\n    );\n    const r = _tokenizeString(\n      this,\n      onigLineText,\n      isFirstLine,\n      0,\n      prevState,\n      lineTokens,\n      true,\n      timeLimit\n    );\n    disposeOnigString(onigLineText);\n    return {\n      lineLength,\n      lineTokens,\n      ruleStack: r.stack,\n      stoppedEarly: r.stoppedEarly\n    };\n  }\n};\nfunction initGrammar(grammar, base) {\n  grammar = clone(grammar);\n  grammar.repository = grammar.repository || {};\n  grammar.repository.$self = {\n    $vscodeTextmateLocation: grammar.$vscodeTextmateLocation,\n    patterns: grammar.patterns,\n    name: grammar.scopeName\n  };\n  grammar.repository.$base = base || grammar.repository.$self;\n  return grammar;\n}\nvar AttributedScopeStack = class _AttributedScopeStack {\n  /**\n   * Invariant:\n   * ```\n   * if (parent && !scopePath.extends(parent.scopePath)) {\n   * \tthrow new Error();\n   * }\n   * ```\n   */\n  constructor(parent, scopePath, tokenAttributes) {\n    this.parent = parent;\n    this.scopePath = scopePath;\n    this.tokenAttributes = tokenAttributes;\n  }\n  static fromExtension(namesScopeList, contentNameScopesList) {\n    let current = namesScopeList;\n    let scopeNames = namesScopeList?.scopePath ?? null;\n    for (const frame of contentNameScopesList) {\n      scopeNames = ScopeStack.push(scopeNames, frame.scopeNames);\n      current = new _AttributedScopeStack(current, scopeNames, frame.encodedTokenAttributes);\n    }\n    return current;\n  }\n  static createRoot(scopeName, tokenAttributes) {\n    return new _AttributedScopeStack(null, new ScopeStack(null, scopeName), tokenAttributes);\n  }\n  static createRootAndLookUpScopeName(scopeName, tokenAttributes, grammar) {\n    const rawRootMetadata = grammar.getMetadataForScope(scopeName);\n    const scopePath = new ScopeStack(null, scopeName);\n    const rootStyle = grammar.themeProvider.themeMatch(scopePath);\n    const resolvedTokenAttributes = _AttributedScopeStack.mergeAttributes(\n      tokenAttributes,\n      rawRootMetadata,\n      rootStyle\n    );\n    return new _AttributedScopeStack(null, scopePath, resolvedTokenAttributes);\n  }\n  get scopeName() {\n    return this.scopePath.scopeName;\n  }\n  toString() {\n    return this.getScopeNames().join(\" \");\n  }\n  equals(other) {\n    return _AttributedScopeStack.equals(this, other);\n  }\n  static equals(a, b) {\n    do {\n      if (a === b) {\n        return true;\n      }\n      if (!a && !b) {\n        return true;\n      }\n      if (!a || !b) {\n        return false;\n      }\n      if (a.scopeName !== b.scopeName || a.tokenAttributes !== b.tokenAttributes) {\n        return false;\n      }\n      a = a.parent;\n      b = b.parent;\n    } while (true);\n  }\n  static mergeAttributes(existingTokenAttributes, basicScopeAttributes, styleAttributes) {\n    let fontStyle = -1 /* NotSet */;\n    let foreground = 0;\n    let background = 0;\n    if (styleAttributes !== null) {\n      fontStyle = styleAttributes.fontStyle;\n      foreground = styleAttributes.foregroundId;\n      background = styleAttributes.backgroundId;\n    }\n    return EncodedTokenMetadata.set(\n      existingTokenAttributes,\n      basicScopeAttributes.languageId,\n      basicScopeAttributes.tokenType,\n      null,\n      fontStyle,\n      foreground,\n      background\n    );\n  }\n  pushAttributed(scopePath, grammar) {\n    if (scopePath === null) {\n      return this;\n    }\n    if (scopePath.indexOf(\" \") === -1) {\n      return _AttributedScopeStack._pushAttributed(this, scopePath, grammar);\n    }\n    const scopes = scopePath.split(/ /g);\n    let result = this;\n    for (const scope of scopes) {\n      result = _AttributedScopeStack._pushAttributed(result, scope, grammar);\n    }\n    return result;\n  }\n  static _pushAttributed(target, scopeName, grammar) {\n    const rawMetadata = grammar.getMetadataForScope(scopeName);\n    const newPath = target.scopePath.push(scopeName);\n    const scopeThemeMatchResult = grammar.themeProvider.themeMatch(newPath);\n    const metadata = _AttributedScopeStack.mergeAttributes(\n      target.tokenAttributes,\n      rawMetadata,\n      scopeThemeMatchResult\n    );\n    return new _AttributedScopeStack(target, newPath, metadata);\n  }\n  getScopeNames() {\n    return this.scopePath.getSegments();\n  }\n  getExtensionIfDefined(base) {\n    const result = [];\n    let self = this;\n    while (self && self !== base) {\n      result.push({\n        encodedTokenAttributes: self.tokenAttributes,\n        scopeNames: self.scopePath.getExtensionIfDefined(self.parent?.scopePath ?? null)\n      });\n      self = self.parent;\n    }\n    return self === base ? result.reverse() : void 0;\n  }\n};\nvar StateStackImpl = class _StateStackImpl {\n  /**\n   * Invariant:\n   * ```\n   * if (contentNameScopesList !== nameScopesList && contentNameScopesList?.parent !== nameScopesList) {\n   * \tthrow new Error();\n   * }\n   * if (this.parent && !nameScopesList.extends(this.parent.contentNameScopesList)) {\n   * \tthrow new Error();\n   * }\n   * ```\n   */\n  constructor(parent, ruleId, enterPos, anchorPos, beginRuleCapturedEOL, endRule, nameScopesList, contentNameScopesList) {\n    this.parent = parent;\n    this.ruleId = ruleId;\n    this.beginRuleCapturedEOL = beginRuleCapturedEOL;\n    this.endRule = endRule;\n    this.nameScopesList = nameScopesList;\n    this.contentNameScopesList = contentNameScopesList;\n    this.depth = this.parent ? this.parent.depth + 1 : 1;\n    this._enterPos = enterPos;\n    this._anchorPos = anchorPos;\n  }\n  _stackElementBrand = void 0;\n  // TODO remove me\n  static NULL = new _StateStackImpl(\n    null,\n    0,\n    0,\n    0,\n    false,\n    null,\n    null,\n    null\n  );\n  /**\n   * The position on the current line where this state was pushed.\n   * This is relevant only while tokenizing a line, to detect endless loops.\n   * Its value is meaningless across lines.\n   */\n  _enterPos;\n  /**\n   * The captured anchor position when this stack element was pushed.\n   * This is relevant only while tokenizing a line, to restore the anchor position when popping.\n   * Its value is meaningless across lines.\n   */\n  _anchorPos;\n  /**\n   * The depth of the stack.\n   */\n  depth;\n  equals(other) {\n    if (other === null) {\n      return false;\n    }\n    return _StateStackImpl._equals(this, other);\n  }\n  static _equals(a, b) {\n    if (a === b) {\n      return true;\n    }\n    if (!this._structuralEquals(a, b)) {\n      return false;\n    }\n    return AttributedScopeStack.equals(a.contentNameScopesList, b.contentNameScopesList);\n  }\n  /**\n   * A structural equals check. Does not take into account `scopes`.\n   */\n  static _structuralEquals(a, b) {\n    do {\n      if (a === b) {\n        return true;\n      }\n      if (!a && !b) {\n        return true;\n      }\n      if (!a || !b) {\n        return false;\n      }\n      if (a.depth !== b.depth || a.ruleId !== b.ruleId || a.endRule !== b.endRule) {\n        return false;\n      }\n      a = a.parent;\n      b = b.parent;\n    } while (true);\n  }\n  clone() {\n    return this;\n  }\n  static _reset(el) {\n    while (el) {\n      el._enterPos = -1;\n      el._anchorPos = -1;\n      el = el.parent;\n    }\n  }\n  reset() {\n    _StateStackImpl._reset(this);\n  }\n  pop() {\n    return this.parent;\n  }\n  safePop() {\n    if (this.parent) {\n      return this.parent;\n    }\n    return this;\n  }\n  push(ruleId, enterPos, anchorPos, beginRuleCapturedEOL, endRule, nameScopesList, contentNameScopesList) {\n    return new _StateStackImpl(\n      this,\n      ruleId,\n      enterPos,\n      anchorPos,\n      beginRuleCapturedEOL,\n      endRule,\n      nameScopesList,\n      contentNameScopesList\n    );\n  }\n  getEnterPos() {\n    return this._enterPos;\n  }\n  getAnchorPos() {\n    return this._anchorPos;\n  }\n  getRule(grammar) {\n    return grammar.getRule(this.ruleId);\n  }\n  toString() {\n    const r = [];\n    this._writeString(r, 0);\n    return \"[\" + r.join(\",\") + \"]\";\n  }\n  _writeString(res, outIndex) {\n    if (this.parent) {\n      outIndex = this.parent._writeString(res, outIndex);\n    }\n    res[outIndex++] = `(${this.ruleId}, ${this.nameScopesList?.toString()}, ${this.contentNameScopesList?.toString()})`;\n    return outIndex;\n  }\n  withContentNameScopesList(contentNameScopeStack) {\n    if (this.contentNameScopesList === contentNameScopeStack) {\n      return this;\n    }\n    return this.parent.push(\n      this.ruleId,\n      this._enterPos,\n      this._anchorPos,\n      this.beginRuleCapturedEOL,\n      this.endRule,\n      this.nameScopesList,\n      contentNameScopeStack\n    );\n  }\n  withEndRule(endRule) {\n    if (this.endRule === endRule) {\n      return this;\n    }\n    return new _StateStackImpl(\n      this.parent,\n      this.ruleId,\n      this._enterPos,\n      this._anchorPos,\n      this.beginRuleCapturedEOL,\n      endRule,\n      this.nameScopesList,\n      this.contentNameScopesList\n    );\n  }\n  // Used to warn of endless loops\n  hasSameRuleAs(other) {\n    let el = this;\n    while (el && el._enterPos === other._enterPos) {\n      if (el.ruleId === other.ruleId) {\n        return true;\n      }\n      el = el.parent;\n    }\n    return false;\n  }\n  toStateStackFrame() {\n    return {\n      ruleId: ruleIdToNumber(this.ruleId),\n      beginRuleCapturedEOL: this.beginRuleCapturedEOL,\n      endRule: this.endRule,\n      nameScopesList: this.nameScopesList?.getExtensionIfDefined(this.parent?.nameScopesList ?? null) ?? [],\n      contentNameScopesList: this.contentNameScopesList?.getExtensionIfDefined(this.nameScopesList) ?? []\n    };\n  }\n  static pushFrame(self, frame) {\n    const namesScopeList = AttributedScopeStack.fromExtension(self?.nameScopesList ?? null, frame.nameScopesList);\n    return new _StateStackImpl(\n      self,\n      ruleIdFromNumber(frame.ruleId),\n      frame.enterPos ?? -1,\n      frame.anchorPos ?? -1,\n      frame.beginRuleCapturedEOL,\n      frame.endRule,\n      namesScopeList,\n      AttributedScopeStack.fromExtension(namesScopeList, frame.contentNameScopesList)\n    );\n  }\n};\nvar BalancedBracketSelectors = class {\n  balancedBracketScopes;\n  unbalancedBracketScopes;\n  allowAny = false;\n  constructor(balancedBracketScopes, unbalancedBracketScopes) {\n    this.balancedBracketScopes = balancedBracketScopes.flatMap(\n      (selector) => {\n        if (selector === \"*\") {\n          this.allowAny = true;\n          return [];\n        }\n        return createMatchers(selector, nameMatcher).map((m) => m.matcher);\n      }\n    );\n    this.unbalancedBracketScopes = unbalancedBracketScopes.flatMap(\n      (selector) => createMatchers(selector, nameMatcher).map((m) => m.matcher)\n    );\n  }\n  get matchesAlways() {\n    return this.allowAny && this.unbalancedBracketScopes.length === 0;\n  }\n  get matchesNever() {\n    return this.balancedBracketScopes.length === 0 && !this.allowAny;\n  }\n  match(scopes) {\n    for (const excluder of this.unbalancedBracketScopes) {\n      if (excluder(scopes)) {\n        return false;\n      }\n    }\n    for (const includer of this.balancedBracketScopes) {\n      if (includer(scopes)) {\n        return true;\n      }\n    }\n    return this.allowAny;\n  }\n};\nvar LineTokens = class {\n  constructor(emitBinaryTokens, lineText, tokenTypeOverrides, balancedBracketSelectors) {\n    this.balancedBracketSelectors = balancedBracketSelectors;\n    this._emitBinaryTokens = emitBinaryTokens;\n    this._tokenTypeOverrides = tokenTypeOverrides;\n    if (false) {\n      this._lineText = lineText;\n    } else {\n      this._lineText = null;\n    }\n    this._tokens = [];\n    this._binaryTokens = [];\n    this._lastTokenEndIndex = 0;\n  }\n  _emitBinaryTokens;\n  /**\n   * defined only if `false`.\n   */\n  _lineText;\n  /**\n   * used only if `_emitBinaryTokens` is false.\n   */\n  _tokens;\n  /**\n   * used only if `_emitBinaryTokens` is true.\n   */\n  _binaryTokens;\n  _lastTokenEndIndex;\n  _tokenTypeOverrides;\n  produce(stack, endIndex) {\n    this.produceFromScopes(stack.contentNameScopesList, endIndex);\n  }\n  produceFromScopes(scopesList, endIndex) {\n    if (this._lastTokenEndIndex >= endIndex) {\n      return;\n    }\n    if (this._emitBinaryTokens) {\n      let metadata = scopesList?.tokenAttributes ?? 0;\n      let containsBalancedBrackets = false;\n      if (this.balancedBracketSelectors?.matchesAlways) {\n        containsBalancedBrackets = true;\n      }\n      if (this._tokenTypeOverrides.length > 0 || this.balancedBracketSelectors && !this.balancedBracketSelectors.matchesAlways && !this.balancedBracketSelectors.matchesNever) {\n        const scopes2 = scopesList?.getScopeNames() ?? [];\n        for (const tokenType of this._tokenTypeOverrides) {\n          if (tokenType.matcher(scopes2)) {\n            metadata = EncodedTokenMetadata.set(\n              metadata,\n              0,\n              toOptionalTokenType(tokenType.type),\n              null,\n              -1 /* NotSet */,\n              0,\n              0\n            );\n          }\n        }\n        if (this.balancedBracketSelectors) {\n          containsBalancedBrackets = this.balancedBracketSelectors.match(scopes2);\n        }\n      }\n      if (containsBalancedBrackets) {\n        metadata = EncodedTokenMetadata.set(\n          metadata,\n          0,\n          8 /* NotSet */,\n          containsBalancedBrackets,\n          -1 /* NotSet */,\n          0,\n          0\n        );\n      }\n      if (this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 1] === metadata) {\n        this._lastTokenEndIndex = endIndex;\n        return;\n      }\n      this._binaryTokens.push(this._lastTokenEndIndex);\n      this._binaryTokens.push(metadata);\n      this._lastTokenEndIndex = endIndex;\n      return;\n    }\n    const scopes = scopesList?.getScopeNames() ?? [];\n    this._tokens.push({\n      startIndex: this._lastTokenEndIndex,\n      endIndex,\n      // value: lineText.substring(lastTokenEndIndex, endIndex),\n      scopes\n    });\n    this._lastTokenEndIndex = endIndex;\n  }\n  getResult(stack, lineLength) {\n    if (this._tokens.length > 0 && this._tokens[this._tokens.length - 1].startIndex === lineLength - 1) {\n      this._tokens.pop();\n    }\n    if (this._tokens.length === 0) {\n      this._lastTokenEndIndex = -1;\n      this.produce(stack, lineLength);\n      this._tokens[this._tokens.length - 1].startIndex = 0;\n    }\n    return this._tokens;\n  }\n  getBinaryResult(stack, lineLength) {\n    if (this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 2] === lineLength - 1) {\n      this._binaryTokens.pop();\n      this._binaryTokens.pop();\n    }\n    if (this._binaryTokens.length === 0) {\n      this._lastTokenEndIndex = -1;\n      this.produce(stack, lineLength);\n      this._binaryTokens[this._binaryTokens.length - 2] = 0;\n    }\n    const result = new Uint32Array(this._binaryTokens.length);\n    for (let i = 0, len = this._binaryTokens.length; i < len; i++) {\n      result[i] = this._binaryTokens[i];\n    }\n    return result;\n  }\n};\n\n// src/registry.ts\nvar SyncRegistry = class {\n  constructor(theme, _onigLib) {\n    this._onigLib = _onigLib;\n    this._theme = theme;\n  }\n  _grammars = /* @__PURE__ */ new Map();\n  _rawGrammars = /* @__PURE__ */ new Map();\n  _injectionGrammars = /* @__PURE__ */ new Map();\n  _theme;\n  dispose() {\n    for (const grammar of this._grammars.values()) {\n      grammar.dispose();\n    }\n  }\n  setTheme(theme) {\n    this._theme = theme;\n  }\n  getColorMap() {\n    return this._theme.getColorMap();\n  }\n  /**\n   * Add `grammar` to registry and return a list of referenced scope names\n   */\n  addGrammar(grammar, injectionScopeNames) {\n    this._rawGrammars.set(grammar.scopeName, grammar);\n    if (injectionScopeNames) {\n      this._injectionGrammars.set(grammar.scopeName, injectionScopeNames);\n    }\n  }\n  /**\n   * Lookup a raw grammar.\n   */\n  lookup(scopeName) {\n    return this._rawGrammars.get(scopeName);\n  }\n  /**\n   * Returns the injections for the given grammar\n   */\n  injections(targetScope) {\n    return this._injectionGrammars.get(targetScope);\n  }\n  /**\n   * Get the default theme settings\n   */\n  getDefaults() {\n    return this._theme.getDefaults();\n  }\n  /**\n   * Match a scope in the theme.\n   */\n  themeMatch(scopePath) {\n    return this._theme.match(scopePath);\n  }\n  /**\n   * Lookup a grammar.\n   */\n  grammarForScopeName(scopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors) {\n    if (!this._grammars.has(scopeName)) {\n      let rawGrammar = this._rawGrammars.get(scopeName);\n      if (!rawGrammar) {\n        return null;\n      }\n      this._grammars.set(scopeName, createGrammar(\n        scopeName,\n        rawGrammar,\n        initialLanguage,\n        embeddedLanguages,\n        tokenTypes,\n        balancedBracketSelectors,\n        this,\n        this._onigLib\n      ));\n    }\n    return this._grammars.get(scopeName);\n  }\n};\n\n// src/index.ts\nvar Registry = class {\n  _options;\n  _syncRegistry;\n  _ensureGrammarCache;\n  constructor(options) {\n    this._options = options;\n    this._syncRegistry = new SyncRegistry(\n      Theme.createFromRawTheme(options.theme, options.colorMap),\n      options.onigLib\n    );\n    this._ensureGrammarCache = /* @__PURE__ */ new Map();\n  }\n  dispose() {\n    this._syncRegistry.dispose();\n  }\n  /**\n   * Change the theme. Once called, no previous `ruleStack` should be used anymore.\n   */\n  setTheme(theme, colorMap) {\n    this._syncRegistry.setTheme(Theme.createFromRawTheme(theme, colorMap));\n  }\n  /**\n   * Returns a lookup array for color ids.\n   */\n  getColorMap() {\n    return this._syncRegistry.getColorMap();\n  }\n  /**\n   * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n   * Please do not use language id 0.\n   */\n  loadGrammarWithEmbeddedLanguages(initialScopeName, initialLanguage, embeddedLanguages) {\n    return this.loadGrammarWithConfiguration(initialScopeName, initialLanguage, { embeddedLanguages });\n  }\n  /**\n   * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n   * Please do not use language id 0.\n   */\n  loadGrammarWithConfiguration(initialScopeName, initialLanguage, configuration) {\n    return this._loadGrammar(\n      initialScopeName,\n      initialLanguage,\n      configuration.embeddedLanguages,\n      configuration.tokenTypes,\n      new BalancedBracketSelectors(\n        configuration.balancedBracketSelectors || [],\n        configuration.unbalancedBracketSelectors || []\n      )\n    );\n  }\n  /**\n   * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n   */\n  loadGrammar(initialScopeName) {\n    return this._loadGrammar(initialScopeName, 0, null, null, null);\n  }\n  _loadGrammar(initialScopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors) {\n    const dependencyProcessor = new ScopeDependencyProcessor(this._syncRegistry, initialScopeName);\n    while (dependencyProcessor.Q.length > 0) {\n      dependencyProcessor.Q.map((request) => this._loadSingleGrammar(request.scopeName));\n      dependencyProcessor.processQueue();\n    }\n    return this._grammarForScopeName(\n      initialScopeName,\n      initialLanguage,\n      embeddedLanguages,\n      tokenTypes,\n      balancedBracketSelectors\n    );\n  }\n  _loadSingleGrammar(scopeName) {\n    if (!this._ensureGrammarCache.has(scopeName)) {\n      this._doLoadSingleGrammar(scopeName);\n      this._ensureGrammarCache.set(scopeName, true);\n    }\n  }\n  _doLoadSingleGrammar(scopeName) {\n    const grammar = this._options.loadGrammar(scopeName);\n    if (grammar) {\n      const injections = typeof this._options.getInjections === \"function\" ? this._options.getInjections(scopeName) : void 0;\n      this._syncRegistry.addGrammar(grammar, injections);\n    }\n  }\n  /**\n   * Adds a rawGrammar.\n   */\n  addGrammar(rawGrammar, injections = [], initialLanguage = 0, embeddedLanguages = null) {\n    this._syncRegistry.addGrammar(rawGrammar, injections);\n    return this._grammarForScopeName(rawGrammar.scopeName, initialLanguage, embeddedLanguages);\n  }\n  /**\n   * Get the grammar for `scopeName`. The grammar must first be created via `loadGrammar` or `addGrammar`.\n   */\n  _grammarForScopeName(scopeName, initialLanguage = 0, embeddedLanguages = null, tokenTypes = null, balancedBracketSelectors = null) {\n    return this._syncRegistry.grammarForScopeName(\n      scopeName,\n      initialLanguage,\n      embeddedLanguages,\n      tokenTypes,\n      balancedBracketSelectors\n    );\n  }\n};\nvar INITIAL = StateStackImpl.NULL;\nexport {\n  EncodedTokenMetadata,\n  FindOption,\n  FontStyle,\n  INITIAL,\n  Registry,\n  Theme,\n  disposeOnigString\n};\n", "/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n", "/**\n * @import {Schema as SchemaType, Space} from 'property-information'\n */\n\n/** @type {SchemaType} */\nexport class Schema {\n  /**\n   * @param {SchemaType['property']} property\n   *   Property.\n   * @param {SchemaType['normal']} normal\n   *   Normal.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Schema.\n   */\n  constructor(property, normal, space) {\n    this.normal = normal\n    this.property = property\n\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\nSchema.prototype.normal = {}\nSchema.prototype.property = {}\nSchema.prototype.space = undefined\n", "/**\n * @import {Info, Space} from 'property-information'\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {ReadonlyArray<Schema>} definitions\n *   Definitions.\n * @param {Space | undefined} [space]\n *   Space.\n * @returns {Schema}\n *   Schema.\n */\nexport function merge(definitions, space) {\n  /** @type {Record<string, Info>} */\n  const property = {}\n  /** @type {Record<string, string>} */\n  const normal = {}\n\n  for (const definition of definitions) {\n    Object.assign(property, definition.property)\n    Object.assign(normal, definition.normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n", "/**\n * Get the cleaned case insensitive form of an attribute or property.\n *\n * @param {string} value\n *   An attribute-like or property-like name.\n * @returns {string}\n *   Value that can be used to look up the properly cased property on a\n *   `Schema`.\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n", "/**\n * @import {Info as InfoType} from 'property-information'\n */\n\n/** @type {InfoType} */\nexport class Info {\n  /**\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute) {\n    this.attribute = attribute\n    this.property = property\n  }\n}\n\nInfo.prototype.attribute = ''\nInfo.prototype.booleanish = false\nInfo.prototype.boolean = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.defined = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.number = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.property = ''\nInfo.prototype.spaceSeparated = false\nInfo.prototype.space = undefined\n", "let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n", "/**\n * @import {Space} from 'property-information'\n */\n\nimport {Info} from './info.js'\nimport * as types from './types.js'\n\nconst checks = /** @type {ReadonlyArray<keyof typeof types>} */ (\n  Object.keys(types)\n)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @param {number | null | undefined} [mask]\n   *   Mask.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @template {keyof DefinedInfo} Key\n *   Key type.\n * @param {DefinedInfo} values\n *   Info.\n * @param {Key} key\n *   Key.\n * @param {DefinedInfo[Key]} value\n *   Value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n", "/**\n * @import {Info, Space} from 'property-information'\n */\n\n/**\n * @typedef Definition\n *   Definition of a schema.\n * @property {Record<string, string> | undefined} [attributes]\n *   Normalzed names to special attribute case.\n * @property {ReadonlyArray<string> | undefined} [mustUseProperty]\n *   Normalized names that must be set as properties.\n * @property {Record<string, number | null>} properties\n *   Property names to their types.\n * @property {Space | undefined} [space]\n *   Space.\n * @property {Transform} transform\n *   Transform a property name.\n */\n\n/**\n * @callback Transform\n *   Transform.\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Attribute.\n */\n\nimport {normalize} from '../normalize.js'\nimport {DefinedInfo} from './defined-info.js'\nimport {Schema} from './schema.js'\n\n/**\n * @param {Definition} definition\n *   Definition.\n * @returns {Schema}\n *   Schema.\n */\nexport function create(definition) {\n  /** @type {Record<string, Info>} */\n  const properties = {}\n  /** @type {Record<string, string>} */\n  const normals = {}\n\n  for (const [property, value] of Object.entries(definition.properties)) {\n    const info = new DefinedInfo(\n      property,\n      definition.transform(definition.attributes || {}, property),\n      value,\n      definition.space\n    )\n\n    if (\n      definition.mustUseProperty &&\n      definition.mustUseProperty.includes(property)\n    ) {\n      info.mustUseProperty = true\n    }\n\n    properties[property] = info\n\n    normals[normalize(property)] = property\n    normals[normalize(info.attribute)] = property\n  }\n\n  return new Schema(properties, normals, definition.space)\n}\n", "import {create} from './util/create.js'\nimport {booleanish, number, spaceSeparated} from './util/types.js'\n\nexport const aria = create({\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  },\n  transform(_, property) {\n    return property === 'role'\n      ? property\n      : 'aria-' + property.slice(4).toLowerCase()\n  }\n})\n", "/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} attribute\n *   Attribute.\n * @returns {string}\n *   Transformed attribute.\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n", "import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Transformed property.\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n", "import {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  booleanish,\n  boolean,\n  commaSeparated,\n  number,\n  overloadedBoolean,\n  spaceSeparated\n} from './util/types.js'\n\nexport const html = create({\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  },\n  space: 'html',\n  transform: caseInsensitiveTransform\n})\n", "import {caseSensitiveTransform} from './util/case-sensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  boolean,\n  commaOrSpaceSeparated,\n  commaSeparated,\n  number,\n  spaceSeparated\n} from './util/types.js'\n\nexport const svg = create({\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  },\n  space: 'svg',\n  transform: caseSensitiveTransform\n})\n", "import {create} from './util/create.js'\n\nexport const xlink = create({\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  },\n  space: 'xlink',\n  transform(_, property) {\n    return 'xlink:' + property.slice(5).toLowerCase()\n  }\n})\n", "import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  properties: {xmlnsXLink: null, xmlns: null},\n  space: 'xmlns',\n  transform: caseInsensitiveTransform\n})\n", "import {create} from './util/create.js'\n\nexport const xml = create({\n  properties: {xmlBase: null, xmlLang: null, xmlSpace: null},\n  space: 'xml',\n  transform(_, property) {\n    return 'xml:' + property.slice(3).toLowerCase()\n  }\n})\n", "/**\n * @import {Schema} from 'property-information'\n */\n\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\nimport {normalize} from './normalize.js'\n\nconst cap = /[A-Z]/g\nconst dash = /-[a-z]/g\nconst valid = /^data[-\\w.:]+$/i\n\n/**\n * Look up info on a property.\n *\n * In most cases the given `schema` contains info on the property.\n * All standard,\n * most legacy,\n * and some non-standard properties are supported.\n * For these cases,\n * the returned `Info` has hints about the value of the property.\n *\n * `name` can also be a valid data attribute or property,\n * in which case an `Info` object with the correctly cased `attribute` and\n * `property` is returned.\n *\n * `name` can be an unknown attribute,\n * in which case an `Info` object with `attribute` and `property` set to the\n * given name is returned.\n * It is not recommended to provide unsupported legacy or recently specced\n * properties.\n *\n *\n * @param {Schema} schema\n *   Schema;\n *   either the `html` or `svg` export.\n * @param {string} value\n *   An attribute-like or property-like name;\n *   it will be passed through `normalize` to hopefully find the correct info.\n * @returns {Info}\n *   Info.\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let property = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      property = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(property, value)\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Kebab.\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Camel.\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n", "// Note: types exposed from `index.d.ts`.\nimport {merge} from './lib/util/merge.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\nimport {xlink} from './lib/xlink.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {xml} from './lib/xml.js'\n\nexport {hastToReact} from './lib/hast-to-react.js'\n\nexport const html = merge([aria, htmlBase, xlink, xmlns, xml], 'html')\n\nexport {find} from './lib/find.js'\nexport {normalize} from './lib/normalize.js'\n\nexport const svg = merge([aria, svgBase, xlink, xmlns, xml], 'svg')\n", "/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n", "/**\n * @typedef CoreOptions\n * @property {ReadonlyArray<string>} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\nconst defaultSubsetRegex = /[\"&'<>`]/g\nconst surrogatePairsRegex = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g\nconst controlCharactersRegex =\n  // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n  /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g\nconst regexEscapeRegex = /[|\\\\{}()[\\]^$+*?.]/g\n\n/** @type {WeakMap<ReadonlyArray<string>, RegExp>} */\nconst subsetToRegexCache = new WeakMap()\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nexport function core(value, options) {\n  value = value.replace(\n    options.subset\n      ? charactersToExpressionCached(options.subset)\n      : defaultSubsetRegex,\n    basic\n  )\n\n  if (options.subset || options.escapeOnly) {\n    return value\n  }\n\n  return (\n    value\n      // Surrogate pairs.\n      .replace(surrogatePairsRegex, surrogate)\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n      // non-ASCII ones).\n      .replace(controlCharactersRegex, basic)\n  )\n\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n  function surrogate(pair, index, all) {\n    return options.format(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      all.charCodeAt(index + 2),\n      options\n    )\n  }\n\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n  function basic(character, index, all) {\n    return options.format(\n      character.charCodeAt(0),\n      all.charCodeAt(index + 1),\n      options\n    )\n  }\n}\n\n/**\n * A wrapper function that caches the result of `charactersToExpression` with a WeakMap.\n * This can improve performance when tooling calls `charactersToExpression` repeatedly\n * with the same subset.\n *\n * @param {ReadonlyArray<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpressionCached(subset) {\n  let cached = subsetToRegexCache.get(subset)\n\n  if (!cached) {\n    cached = charactersToExpression(subset)\n    subsetToRegexCache.set(subset, cached)\n  }\n\n  return cached\n}\n\n/**\n * @param {ReadonlyArray<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpression(subset) {\n  /** @type {Array<string>} */\n  const groups = []\n  let index = -1\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(regexEscapeRegex, '\\\\$&'))\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\n}\n", "const hexadecimalRegex = /[\\dA-Fa-f]/\n\n/**\n * Configurable ways to encode characters as hexadecimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toHexadecimal(code, next, omit) {\n  const value = '&#x' + code.toString(16).toUpperCase()\n  return omit && next && !hexadecimalRegex.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n", "const decimalRegex = /\\d/\n\n/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toDecimal(code, next, omit) {\n  const value = '&#' + String(code)\n  return omit && next && !decimalRegex.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n", "/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n", "/**\n * Map of named character references from HTML 4.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntitiesHtml4 = {\n  nbsp: ' ',\n  iexcl: '¡',\n  cent: '¢',\n  pound: '£',\n  curren: '¤',\n  yen: '¥',\n  brvbar: '¦',\n  sect: '§',\n  uml: '¨',\n  copy: '©',\n  ordf: 'ª',\n  laquo: '«',\n  not: '¬',\n  shy: '­',\n  reg: '®',\n  macr: '¯',\n  deg: '°',\n  plusmn: '±',\n  sup2: '²',\n  sup3: '³',\n  acute: '´',\n  micro: 'µ',\n  para: '¶',\n  middot: '·',\n  cedil: '¸',\n  sup1: '¹',\n  ordm: 'º',\n  raquo: '»',\n  frac14: '¼',\n  frac12: '½',\n  frac34: '¾',\n  iquest: '¿',\n  Agrave: 'À',\n  Aacute: 'Á',\n  Acirc: 'Â',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Aring: 'Å',\n  AElig: 'Æ',\n  Ccedil: 'Ç',\n  Egrave: 'È',\n  Eacute: 'É',\n  Ecirc: 'Ê',\n  Euml: 'Ë',\n  Igrave: 'Ì',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Iuml: 'Ï',\n  ETH: 'Ð',\n  Ntilde: 'Ñ',\n  Ograve: 'Ò',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Otilde: 'Õ',\n  Ouml: 'Ö',\n  times: '×',\n  Oslash: 'Ø',\n  Ugrave: 'Ù',\n  Uacute: 'Ú',\n  Ucirc: 'Û',\n  Uuml: 'Ü',\n  Yacute: 'Ý',\n  THORN: 'Þ',\n  szlig: 'ß',\n  agrave: 'à',\n  aacute: 'á',\n  acirc: 'â',\n  atilde: 'ã',\n  auml: 'ä',\n  aring: 'å',\n  aelig: 'æ',\n  ccedil: 'ç',\n  egrave: 'è',\n  eacute: 'é',\n  ecirc: 'ê',\n  euml: 'ë',\n  igrave: 'ì',\n  iacute: 'í',\n  icirc: 'î',\n  iuml: 'ï',\n  eth: 'ð',\n  ntilde: 'ñ',\n  ograve: 'ò',\n  oacute: 'ó',\n  ocirc: 'ô',\n  otilde: 'õ',\n  ouml: 'ö',\n  divide: '÷',\n  oslash: 'ø',\n  ugrave: 'ù',\n  uacute: 'ú',\n  ucirc: 'û',\n  uuml: 'ü',\n  yacute: 'ý',\n  thorn: 'þ',\n  yuml: 'ÿ',\n  fnof: 'ƒ',\n  Alpha: 'Α',\n  Beta: 'Β',\n  Gamma: 'Γ',\n  Delta: 'Δ',\n  Epsilon: 'Ε',\n  Zeta: 'Ζ',\n  Eta: 'Η',\n  Theta: 'Θ',\n  Iota: 'Ι',\n  Kappa: 'Κ',\n  Lambda: 'Λ',\n  Mu: 'Μ',\n  Nu: 'Ν',\n  Xi: 'Ξ',\n  Omicron: 'Ο',\n  Pi: 'Π',\n  Rho: 'Ρ',\n  Sigma: 'Σ',\n  Tau: 'Τ',\n  Upsilon: 'Υ',\n  Phi: 'Φ',\n  Chi: 'Χ',\n  Psi: 'Ψ',\n  Omega: 'Ω',\n  alpha: 'α',\n  beta: 'β',\n  gamma: 'γ',\n  delta: 'δ',\n  epsilon: 'ε',\n  zeta: 'ζ',\n  eta: 'η',\n  theta: 'θ',\n  iota: 'ι',\n  kappa: 'κ',\n  lambda: 'λ',\n  mu: 'μ',\n  nu: 'ν',\n  xi: 'ξ',\n  omicron: 'ο',\n  pi: 'π',\n  rho: 'ρ',\n  sigmaf: 'ς',\n  sigma: 'σ',\n  tau: 'τ',\n  upsilon: 'υ',\n  phi: 'φ',\n  chi: 'χ',\n  psi: 'ψ',\n  omega: 'ω',\n  thetasym: 'ϑ',\n  upsih: 'ϒ',\n  piv: 'ϖ',\n  bull: '•',\n  hellip: '…',\n  prime: '′',\n  Prime: '″',\n  oline: '‾',\n  frasl: '⁄',\n  weierp: '℘',\n  image: 'ℑ',\n  real: 'ℜ',\n  trade: '™',\n  alefsym: 'ℵ',\n  larr: '←',\n  uarr: '↑',\n  rarr: '→',\n  darr: '↓',\n  harr: '↔',\n  crarr: '↵',\n  lArr: '⇐',\n  uArr: '⇑',\n  rArr: '⇒',\n  dArr: '⇓',\n  hArr: '⇔',\n  forall: '∀',\n  part: '∂',\n  exist: '∃',\n  empty: '∅',\n  nabla: '∇',\n  isin: '∈',\n  notin: '∉',\n  ni: '∋',\n  prod: '∏',\n  sum: '∑',\n  minus: '−',\n  lowast: '∗',\n  radic: '√',\n  prop: '∝',\n  infin: '∞',\n  ang: '∠',\n  and: '∧',\n  or: '∨',\n  cap: '∩',\n  cup: '∪',\n  int: '∫',\n  there4: '∴',\n  sim: '∼',\n  cong: '≅',\n  asymp: '≈',\n  ne: '≠',\n  equiv: '≡',\n  le: '≤',\n  ge: '≥',\n  sub: '⊂',\n  sup: '⊃',\n  nsub: '⊄',\n  sube: '⊆',\n  supe: '⊇',\n  oplus: '⊕',\n  otimes: '⊗',\n  perp: '⊥',\n  sdot: '⋅',\n  lceil: '⌈',\n  rceil: '⌉',\n  lfloor: '⌊',\n  rfloor: '⌋',\n  lang: '〈',\n  rang: '〉',\n  loz: '◊',\n  spades: '♠',\n  clubs: '♣',\n  hearts: '♥',\n  diams: '♦',\n  quot: '\"',\n  amp: '&',\n  lt: '<',\n  gt: '>',\n  OElig: 'Œ',\n  oelig: 'œ',\n  Scaron: 'Š',\n  scaron: 'š',\n  Yuml: 'Ÿ',\n  circ: 'ˆ',\n  tilde: '˜',\n  ensp: ' ',\n  emsp: ' ',\n  thinsp: ' ',\n  zwnj: '‌',\n  zwj: '‍',\n  lrm: '‎',\n  rlm: '‏',\n  ndash: '–',\n  mdash: '—',\n  lsquo: '‘',\n  rsquo: '’',\n  sbquo: '‚',\n  ldquo: '“',\n  rdquo: '”',\n  bdquo: '„',\n  dagger: '†',\n  Dagger: '‡',\n  permil: '‰',\n  lsaquo: '‹',\n  rsaquo: '›',\n  euro: '€'\n}\n", "/**\n * List of legacy (that don’t need a trailing `;`) named references which could,\n * depending on what follows them, turn into a different meaning\n *\n * @type {Array<string>}\n */\nexport const dangerous = [\n  'cent',\n  'copy',\n  'divide',\n  'gt',\n  'lt',\n  'not',\n  'para',\n  'times'\n]\n", "import {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterEntitiesHtml4} from 'character-entities-html4'\nimport {dangerous} from '../constant/dangerous.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * `characterEntitiesHtml4` but inverted.\n *\n * @type {Record<string, string>}\n */\nconst characters = {}\n\n/** @type {string} */\nlet key\n\nfor (key in characterEntitiesHtml4) {\n  if (own.call(characterEntitiesHtml4, key)) {\n    characters[characterEntitiesHtml4[key]] = key\n  }\n}\n\nconst notAlphanumericRegex = /[^\\dA-Za-z]/\n\n/**\n * Configurable ways to encode characters as named references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @param {boolean|undefined} attribute\n * @returns {string}\n */\nexport function toNamed(code, next, omit, attribute) {\n  const character = String.fromCharCode(code)\n\n  if (own.call(characters, character)) {\n    const name = characters[character]\n    const value = '&' + name\n\n    if (\n      omit &&\n      characterEntitiesLegacy.includes(name) &&\n      !dangerous.includes(name) &&\n      (!attribute ||\n        (next &&\n          next !== 61 /* `=` */ &&\n          notAlphanumericRegex.test(String.fromCharCode(next))))\n    ) {\n      return value\n    }\n\n    return value + ';'\n  }\n\n  return ''\n}\n", "/**\n * @typedef FormatSmartOptions\n * @property {boolean} [useNamedReferences=false]\n *   Prefer named character references (`&amp;`) where possible.\n * @property {boolean} [useShortestReferences=false]\n *   Prefer the shortest possible reference, if that results in less bytes.\n *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.\n * @property {boolean} [omitOptionalSemicolons=false]\n *   Whether to omit semicolons when possible.\n *   **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier.\n *   Omitting semicolons is possible for certain named and numeric references in some cases.\n * @property {boolean} [attribute=false]\n *   Create character references which don’t fail in attributes.\n *   **Note**: `attribute` only applies when operating dangerously with\n *   `omitOptionalSemicolons: true`.\n */\n\nimport {toHexadecimal} from './to-hexadecimal.js'\nimport {toDecimal} from './to-decimal.js'\nimport {toNamed} from './to-named.js'\n\n/**\n * Configurable ways to encode a character yielding pretty or small results.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\nexport function formatSmart(code, next, options) {\n  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons)\n  /** @type {string|undefined} */\n  let named\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = toNamed(\n      code,\n      next,\n      options.omitOptionalSemicolons,\n      options.attribute\n    )\n  }\n\n  // Use the shortest numeric reference when requested.\n  // A simple algorithm would use decimal for all code points under 100, as\n  // those are shorter than hexadecimal:\n  //\n  // * `&#99;` vs `&#x63;` (decimal shorter)\n  // * `&#100;` vs `&#x64;` (equal)\n  //\n  // However, because we take `next` into consideration when `omit` is used,\n  // And it would be possible that decimals are shorter on bigger values as\n  // well if `next` is hexadecimal but not decimal, we instead compare both.\n  if (\n    (options.useShortestReferences || !named) &&\n    options.useShortestReferences\n  ) {\n    const decimal = toDecimal(code, next, options.omitOptionalSemicolons)\n\n    if (decimal.length < numeric.length) {\n      numeric = decimal\n    }\n  }\n\n  return named &&\n    (!options.useShortestReferences || named.length < numeric.length)\n    ? named\n    : numeric\n}\n", "/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\nimport {core} from './core.js'\nimport {formatSmart} from './util/format-smart.js'\nimport {formatBasic} from './util/format-basic.js'\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntities(value, options) {\n  return core(value, Object.assign({format: formatSmart}, options))\n}\n\n/**\n * Encode special characters in `value` as hexadecimals.\n *\n * @param {string} value\n *   Value to encode.\n * @param {LightOptions} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntitiesLight(value, options) {\n  return core(value, Object.assign({format: formatBasic}, options))\n}\n", "/**\n * @import {Comment, Parents} from 'hast'\n * @import {State} from '../index.js'\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\nconst htmlCommentRegex = /^>|^->|<!--|-->|--!>|<!-$/g\n\n// Declare arrays as variables so it can be cached by `stringifyEntities`\nconst bogusCommentEntitySubset = ['>']\nconst commentEntitySubset = ['<', '>']\n\n/**\n * Serialize a comment.\n *\n * @param {Comment} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function comment(node, _1, _2, state) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return state.settings.bogusComments\n    ? '<?' +\n        stringifyEntities(\n          node.value,\n          Object.assign({}, state.settings.characterReferences, {\n            subset: bogusCommentEntitySubset\n          })\n        ) +\n        '>'\n    : '<!--' + node.value.replace(htmlCommentRegex, encode) + '-->'\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities(\n      $0,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: commentEntitySubset\n      })\n    )\n  }\n}\n", "/**\n * @import {Doctype, Parents} from 'hast'\n * @import {State} from '../index.js'\n */\n\n/**\n * Serialize a doctype.\n *\n * @param {Doctype} _1\n *   Node to handle.\n * @param {number | undefined} _2\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _3\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function doctype(_1, _2, _3, state) {\n  return (\n    '<!' +\n    (state.settings.upperDoctype ? 'DOCTYPE' : 'doctype') +\n    (state.settings.tightDoctype ? '' : ' ') +\n    'html>'\n  )\n}\n", "/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n", "/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n", "/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n", "/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n", "/**\n * @import {Parents, RootContent} from 'hast'\n */\n\nimport {whitespace} from 'hast-util-whitespace'\n\nexport const siblingAfter = siblings(1)\nexport const siblingBefore = siblings(-1)\n\n/** @type {Array<RootContent>} */\nconst emptyChildren = []\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @template {Parents} Parent\n   *   Parent type.\n   * @param {Parent | undefined} parent\n   *   Parent.\n   * @param {number | undefined} index\n   *   Index of child in `parent`.\n   * @param {boolean | undefined} [includeWhitespace=false]\n   *   Whether to include whitespace (default: `false`).\n   * @returns {Parent extends {children: Array<infer Child>} ? Child | undefined : never}\n   *   Child of parent.\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent ? parent.children : emptyChildren\n    let offset = (index || 0) + increment\n    let next = siblings[offset]\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment\n        next = siblings[offset]\n      }\n    }\n\n    // @ts-expect-error: it’s a correct child.\n    return next\n  }\n}\n", "/**\n * @import {Element, Parents} from 'hast'\n */\n\n/**\n * @callback OmitHandle\n *   Check if a tag can be omitted.\n * @param {Element} element\n *   Element to check.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether to omit a tag.\n *\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to check if a given node can have a tag omitted.\n *\n * @param {Record<string, OmitHandle>} handlers\n *   Omission handlers, where each key is a tag name, and each value is the\n *   corresponding handler.\n * @returns {OmitHandle}\n *   Whether to omit a tag of an element.\n */\nexport function omission(handlers) {\n  return omit\n\n  /**\n   * Check if a given node can have a tag omitted.\n   *\n   * @type {OmitHandle}\n   */\n  function omit(node, index, parent) {\n    return (\n      own.call(handlers, node.tagName) &&\n      handlers[node.tagName](node, index, parent)\n    )\n  }\n}\n", "/**\n * @import {Element, Parents} from 'hast'\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter} from './util/siblings.js'\nimport {omission} from './omission.js'\n\nexport const closing = omission({\n  body,\n  caption: headOrColgroupOrCaption,\n  colgroup: headOrColgroupOrCaption,\n  dd,\n  dt,\n  head: headOrColgroupOrCaption,\n  html,\n  li,\n  optgroup,\n  option,\n  p,\n  rp: rubyElement,\n  rt: rubyElement,\n  tbody,\n  td: cells,\n  tfoot,\n  th: cells,\n  thead,\n  tr\n})\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true)\n  return (\n    !next ||\n    (next.type !== 'comment' &&\n      !(next.type === 'text' && whitespace(next.value.charAt(0))))\n  )\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction html(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction body(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next\n    ? next.type === 'element' &&\n        (next.tagName === 'address' ||\n          next.tagName === 'article' ||\n          next.tagName === 'aside' ||\n          next.tagName === 'blockquote' ||\n          next.tagName === 'details' ||\n          next.tagName === 'div' ||\n          next.tagName === 'dl' ||\n          next.tagName === 'fieldset' ||\n          next.tagName === 'figcaption' ||\n          next.tagName === 'figure' ||\n          next.tagName === 'footer' ||\n          next.tagName === 'form' ||\n          next.tagName === 'h1' ||\n          next.tagName === 'h2' ||\n          next.tagName === 'h3' ||\n          next.tagName === 'h4' ||\n          next.tagName === 'h5' ||\n          next.tagName === 'h6' ||\n          next.tagName === 'header' ||\n          next.tagName === 'hgroup' ||\n          next.tagName === 'hr' ||\n          next.tagName === 'main' ||\n          next.tagName === 'menu' ||\n          next.tagName === 'nav' ||\n          next.tagName === 'ol' ||\n          next.tagName === 'p' ||\n          next.tagName === 'pre' ||\n          next.tagName === 'section' ||\n          next.tagName === 'table' ||\n          next.tagName === 'ul')\n    : !parent ||\n        // Confusing parent.\n        !(\n          parent.type === 'element' &&\n          (parent.tagName === 'a' ||\n            parent.tagName === 'audio' ||\n            parent.tagName === 'del' ||\n            parent.tagName === 'ins' ||\n            parent.tagName === 'map' ||\n            parent.tagName === 'noscript' ||\n            parent.tagName === 'video')\n        )\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'li')\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd')\n  )\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd'))\n  )\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'rp' || next.tagName === 'rt'))\n  )\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'optgroup')\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'option' || next.tagName === 'optgroup'))\n  )\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot')\n  )\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tbody(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot'))\n  )\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index)\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'tr')\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'td' || next.tagName === 'th'))\n  )\n}\n", "/**\n * @import {Element, Parents} from 'hast'\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter, siblingBefore} from './util/siblings.js'\nimport {closing} from './closing.js'\nimport {omission} from './omission.js'\n\nexport const opening = omission({\n  body,\n  colgroup,\n  head,\n  html,\n  tbody\n})\n\n/**\n * Whether to omit `<html>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction html(node) {\n  const head = siblingAfter(node, -1)\n  return !head || head.type !== 'comment'\n}\n\n/**\n * Whether to omit `<head>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction head(node) {\n  /** @type {Set<string>} */\n  const seen = new Set()\n\n  // Whether `srcdoc` or not,\n  // make sure the content model at least doesn’t have too many `base`s/`title`s.\n  for (const child of node.children) {\n    if (\n      child.type === 'element' &&\n      (child.tagName === 'base' || child.tagName === 'title')\n    ) {\n      if (seen.has(child.tagName)) return false\n      seen.add(child.tagName)\n    }\n  }\n\n  // “May be omitted if the element is empty,\n  // or if the first thing inside the head element is an element.”\n  const child = node.children[0]\n  return !child || child.type === 'element'\n}\n\n/**\n * Whether to omit `<body>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction body(node) {\n  const head = siblingAfter(node, -1, true)\n\n  return (\n    !head ||\n    (head.type !== 'comment' &&\n      !(head.type === 'text' && whitespace(head.value.charAt(0))) &&\n      !(\n        head.type === 'element' &&\n        (head.tagName === 'meta' ||\n          head.tagName === 'link' ||\n          head.tagName === 'script' ||\n          head.tagName === 'style' ||\n          head.tagName === 'template')\n      ))\n  )\n}\n\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it’s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1, true)\n\n  // Previous colgroup was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    previous.tagName === 'colgroup' &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'col')\n}\n\n/**\n * Whether to omit `<tbody>`.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1)\n\n  // Previous table section was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    (previous.tagName === 'thead' || previous.tagName === 'tbody') &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'tr')\n}\n", "/**\n * @import {Element, Parents, Properties} from 'hast'\n * @import {State} from '../index.js'\n */\n\nimport {ccount} from 'ccount'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {find, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringifyEntities} from 'stringify-entities'\nimport {closing} from '../omission/closing.js'\nimport {opening} from '../omission/opening.js'\n\n/**\n * Maps of subsets.\n *\n * Each value is a matrix of tuples.\n * The value at `0` causes parse errors, the value at `1` is valid.\n * Of both, the value at `0` is unsafe, and the value at `1` is safe.\n *\n * @type {Record<'double' | 'name' | 'single' | 'unquoted', Array<[Array<string>, Array<string>]>>}\n */\nconst constants = {\n  // See: <https://html.spec.whatwg.org/#attribute-name-state>.\n  name: [\n    ['\\t\\n\\f\\r &/=>'.split(''), '\\t\\n\\f\\r \"&\\'/=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'/<=>'.split(''), '\\0\\t\\n\\f\\r \"&\\'/<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\n  unquoted: [\n    ['\\t\\n\\f\\r &>'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'<=>`'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\n  single: [\n    [\"&'\".split(''), '\"&\\'`'.split('')],\n    [\"\\0&'\".split(''), '\\0\"&\\'`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\n  double: [\n    ['\"&'.split(''), '\"&\\'`'.split('')],\n    ['\\0\"&'.split(''), '\\0\"&\\'`'.split('')]\n  ]\n}\n\n/**\n * Serialize an element node.\n *\n * @param {Element} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function element(node, index, parent, state) {\n  const schema = state.schema\n  const omit = schema.space === 'svg' ? false : state.settings.omitOptionalTags\n  let selfClosing =\n    schema.space === 'svg'\n      ? state.settings.closeEmptyElements\n      : state.settings.voids.includes(node.tagName.toLowerCase())\n  /** @type {Array<string>} */\n  const parts = []\n  /** @type {string} */\n  let last\n\n  if (schema.space === 'html' && node.tagName === 'svg') {\n    state.schema = svg\n  }\n\n  const attributes = serializeAttributes(state, node.properties)\n\n  const content = state.all(\n    schema.space === 'html' && node.tagName === 'template' ? node.content : node\n  )\n\n  state.schema = schema\n\n  // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n  // Note: `menuitem` has since been removed from the HTML spec, and so is no\n  // longer void.\n  if (content) selfClosing = false\n\n  if (attributes || !omit || !opening(node, index, parent)) {\n    parts.push('<', node.tagName, attributes ? ' ' + attributes : '')\n\n    if (\n      selfClosing &&\n      (schema.space === 'svg' || state.settings.closeSelfClosing)\n    ) {\n      last = attributes.charAt(attributes.length - 1)\n      if (\n        !state.settings.tightSelfClosing ||\n        last === '/' ||\n        (last && last !== '\"' && last !== \"'\")\n      ) {\n        parts.push(' ')\n      }\n\n      parts.push('/')\n    }\n\n    parts.push('>')\n  }\n\n  parts.push(content)\n\n  if (!selfClosing && (!omit || !closing(node, index, parent))) {\n    parts.push('</' + node.tagName + '>')\n  }\n\n  return parts.join('')\n}\n\n/**\n * @param {State} state\n * @param {Properties | null | undefined} properties\n * @returns {string}\n */\nfunction serializeAttributes(state, properties) {\n  /** @type {Array<string>} */\n  const values = []\n  let index = -1\n  /** @type {string} */\n  let key\n\n  if (properties) {\n    for (key in properties) {\n      if (properties[key] !== null && properties[key] !== undefined) {\n        const value = serializeAttribute(state, key, properties[key])\n        if (value) values.push(value)\n      }\n    }\n  }\n\n  while (++index < values.length) {\n    const last = state.settings.tightAttributes\n      ? values[index].charAt(values[index].length - 1)\n      : undefined\n\n    // In tight mode, don’t add a space after quoted attributes.\n    if (index !== values.length - 1 && last !== '\"' && last !== \"'\") {\n      values[index] += ' '\n    }\n  }\n\n  return values.join('')\n}\n\n/**\n * @param {State} state\n * @param {string} key\n * @param {Properties[keyof Properties]} value\n * @returns {string}\n */\nfunction serializeAttribute(state, key, value) {\n  const info = find(state.schema, key)\n  const x =\n    state.settings.allowParseErrors && state.schema.space === 'html' ? 0 : 1\n  const y = state.settings.allowDangerousCharacters ? 0 : 1\n  let quote = state.quote\n  /** @type {string | undefined} */\n  let result\n\n  if (info.overloadedBoolean && (value === info.attribute || value === '')) {\n    value = true\n  } else if (\n    (info.boolean || info.overloadedBoolean) &&\n    (typeof value !== 'string' || value === info.attribute || value === '')\n  ) {\n    value = Boolean(value)\n  }\n\n  if (\n    value === null ||\n    value === undefined ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return ''\n  }\n\n  const name = stringifyEntities(\n    info.attribute,\n    Object.assign({}, state.settings.characterReferences, {\n      // Always encode without parse errors in non-HTML.\n      subset: constants.name[x][y]\n    })\n  )\n\n  // No value.\n  // There is currently only one boolean property in SVG: `[download]` on\n  // `<a>`.\n  // This property does not seem to work in browsers (Firefox, Safari, Chrome),\n  // so I can’t test if dropping the value works.\n  // But I assume that it should:\n  //\n  // ```html\n  // <!doctype html>\n  // <svg viewBox=\"0 0 100 100\">\n  //   <a href=https://example.com download>\n  //     <circle cx=50 cy=40 r=35 />\n  //   </a>\n  // </svg>\n  // ```\n  //\n  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>\n  if (value === true) return name\n\n  // `spaces` doesn’t accept a second argument, but it’s given here just to\n  // keep the code cleaner.\n  value = Array.isArray(value)\n    ? (info.commaSeparated ? commas : spaces)(value, {\n        padLeft: !state.settings.tightCommaSeparatedLists\n      })\n    : String(value)\n\n  if (state.settings.collapseEmptyAttributes && !value) return name\n\n  // Check unquoted value.\n  if (state.settings.preferUnquoted) {\n    result = stringifyEntities(\n      value,\n      Object.assign({}, state.settings.characterReferences, {\n        attribute: true,\n        subset: constants.unquoted[x][y]\n      })\n    )\n  }\n\n  // If we don’t want unquoted, or if `value` contains character references when\n  // unquoted…\n  if (result !== value) {\n    // If the alternative is less common than `quote`, switch.\n    if (\n      state.settings.quoteSmart &&\n      ccount(value, quote) > ccount(value, state.alternative)\n    ) {\n      quote = state.alternative\n    }\n\n    result =\n      quote +\n      stringifyEntities(\n        value,\n        Object.assign({}, state.settings.characterReferences, {\n          // Always encode without parse errors in non-HTML.\n          subset: (quote === \"'\" ? constants.single : constants.double)[x][y],\n          attribute: true\n        })\n      ) +\n      quote\n  }\n\n  // Don’t add a `=` for unquoted empties.\n  return name + (result ? '=' + result : result)\n}\n", "/**\n * @import {Parents, Text} from 'hast'\n * @import {Raw} from 'mdast-util-to-hast'\n * @import {State} from '../index.js'\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n// Declare array as variable so it can be cached by `stringifyEntities`\nconst textEntitySubset = ['<', '&']\n\n/**\n * Serialize a text node.\n *\n * @param {Raw | Text} node\n *   Node to handle.\n * @param {number | undefined} _\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function text(node, _, parent, state) {\n  // Check if content of `node` should be escaped.\n  return parent &&\n    parent.type === 'element' &&\n    (parent.tagName === 'script' || parent.tagName === 'style')\n    ? node.value\n    : stringifyEntities(\n        node.value,\n        Object.assign({}, state.settings.characterReferences, {\n          subset: textEntitySubset\n        })\n      )\n}\n", "/**\n * @import {Parents} from 'hast'\n * @import {Raw} from 'mdast-util-to-hast'\n * @import {State} from '../index.js'\n */\n\nimport {text} from './text.js'\n\n/**\n * Serialize a raw node.\n *\n * @param {Raw} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function raw(node, index, parent, state) {\n  return state.settings.allowDangerousHtml\n    ? node.value\n    : text(node, index, parent, state)\n}\n", "/**\n * @import {Parents, Root} from 'hast'\n * @import {State} from '../index.js'\n */\n\n/**\n * Serialize a root.\n *\n * @param {Root} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function root(node, _1, _2, state) {\n  return state.all(node)\n}\n", "/**\n * @import {Nodes, Parents} from 'hast'\n * @import {State} from '../index.js'\n */\n\nimport {zwitch} from 'zwitch'\nimport {comment} from './comment.js'\nimport {doctype} from './doctype.js'\nimport {element} from './element.js'\nimport {raw} from './raw.js'\nimport {root} from './root.js'\nimport {text} from './text.js'\n\n/**\n * @type {(node: Nodes, index: number | undefined, parent: Parents | undefined, state: State) => string}\n */\nexport const handle = zwitch('type', {\n  invalid,\n  unknown,\n  handlers: {comment, doctype, element, raw, root, text}\n})\n\n/**\n * Fail when a non-node is found in the tree.\n *\n * @param {unknown} node\n *   Unknown value.\n * @returns {never}\n *   Never.\n */\nfunction invalid(node) {\n  throw new Error('Expected node, not `' + node + '`')\n}\n\n/**\n * Fail when a node with an unknown type is found in the tree.\n *\n * @param {unknown} node_\n *  Unknown node.\n * @returns {never}\n *   Never.\n */\nfunction unknown(node_) {\n  // `type` is guaranteed by runtime JS.\n  const node = /** @type {Nodes} */ (node_)\n  throw new Error('Cannot compile unknown node `' + node.type + '`')\n}\n", "/**\n * @import {Nodes, Parents, RootContent} from 'hast'\n * @import {Schema} from 'property-information'\n * @import {Options as StringifyEntitiesOptions} from 'stringify-entities'\n */\n\n/**\n * @typedef {Omit<StringifyEntitiesOptions, 'attribute' | 'escapeOnly' | 'subset'>} CharacterReferences\n *\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [allowDangerousCharacters=false]\n *   Do not encode some characters which cause XSS vulnerabilities in older\n *   browsers (default: `false`).\n *\n *   > ⚠️ **Danger**: only set this if you completely trust the content.\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Allow `raw` nodes and insert them as raw HTML (default: `false`).\n *\n *   When `false`, `Raw` nodes are encoded.\n *\n *   > ⚠️ **Danger**: only set this if you completely trust the content.\n * @property {boolean | null | undefined} [allowParseErrors=false]\n *   Do not encode characters which cause parse errors (even though they work),\n *   to save bytes (default: `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [bogusComments=false]\n *   Use “bogus comments” instead of comments to save byes: `<?charlie>`\n *   instead of `<!--charlie-->` (default: `false`).\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {CharacterReferences | null | undefined} [characterReferences]\n *   Configure how to serialize character references (optional).\n * @property {boolean | null | undefined} [closeEmptyElements=false]\n *   Close SVG elements without any content with slash (`/`) on the opening tag\n *   instead of an end tag: `<circle />` instead of `<circle></circle>`\n *   (default: `false`).\n *\n *   See `tightSelfClosing` to control whether a space is used before the\n *   slash.\n *\n *   Not used in the HTML space.\n * @property {boolean | null | undefined} [closeSelfClosing=false]\n *   Close self-closing nodes with an extra slash (`/`): `<img />` instead of\n *   `<img>` (default: `false`).\n *\n *   See `tightSelfClosing` to control whether a space is used before the\n *   slash.\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [collapseEmptyAttributes=false]\n *   Collapse empty attributes: get `class` instead of `class=\"\"` (default:\n *   `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: boolean attributes (such as `hidden`) are always collapsed.\n * @property {boolean | null | undefined} [omitOptionalTags=false]\n *   Omit optional opening and closing tags (default: `false`).\n *\n *   For example, in `<ol><li>one</li><li>two</li></ol>`, both `</li>` closing\n *   tags can be omitted.\n *   The first because it’s followed by another `li`, the last because it’s\n *   followed by nothing.\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [preferUnquoted=false]\n *   Leave attributes unquoted if that results in less bytes (default: `false`).\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [quoteSmart=false]\n *   Use the other quote if that results in less bytes (default: `false`).\n * @property {Quote | null | undefined} [quote='\"']\n *   Preferred quote to use (default: `'\"'`).\n * @property {Space | null | undefined} [space='html']\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it (default: `'html'`).\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use [`xast`][xast] if you need to support SVG as XML.\n * @property {boolean | null | undefined} [tightAttributes=false]\n *   Join attributes together, without whitespace, if possible: get\n *   `class=\"a b\"title=\"c d\"` instead of `class=\"a b\" title=\"c d\"` to save\n *   bytes (default: `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [tightCommaSeparatedLists=false]\n *   Join known comma-separated attribute values with just a comma (`,`),\n *   instead of padding them on the right as well (`,␠`, where `␠` represents a\n *   space) (default: `false`).\n * @property {boolean | null | undefined} [tightDoctype=false]\n *   Drop unneeded spaces in doctypes: `<!doctypehtml>` instead of\n *   `<!doctype html>` to save bytes (default: `false`).\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [tightSelfClosing=false]\n *   Do not use an extra space when closing self-closing elements: `<img/>`\n *   instead of `<img />` (default: `false`).\n *\n *   > 👉 **Note**: only used if `closeSelfClosing: true` or\n *   > `closeEmptyElements: true`.\n * @property {boolean | null | undefined} [upperDoctype=false]\n *   Use a `<!DOCTYPE…` instead of `<!doctype…` (default: `false`).\n *\n *   Useless except for XHTML.\n * @property {ReadonlyArray<string> | null | undefined} [voids]\n *   Tag names of elements to serialize without closing tag (default: `html-void-elements`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: It’s highly unlikely that you want to pass this, because\n *   > hast is not for XML, and HTML will not add more void elements.\n *\n * @typedef {'\"' | \"'\"} Quote\n *   HTML quotes for attribute values.\n *\n * @typedef {Omit<Required<{[key in keyof Options]: Exclude<Options[key], null | undefined>}>, 'space' | 'quote'>} Settings\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Parents | undefined) => string} all\n *   Serialize the children of a parent node.\n * @property {Quote} alternative\n *   Alternative quote.\n * @property {(node: Nodes, index: number | undefined, parent: Parents | undefined) => string} one\n *   Serialize one node.\n * @property {Quote} quote\n *   Preferred quote.\n * @property {Schema} schema\n *   Current schema.\n * @property {Settings} settings\n *   User configuration.\n */\n\nimport {htmlVoidElements} from 'html-void-elements'\nimport {html, svg} from 'property-information'\nimport {handle} from './handle/index.js'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/** @type {CharacterReferences} */\nconst emptyCharacterReferences = {}\n\n/** @type {Array<never>} */\nconst emptyChildren = []\n\n/**\n * Serialize hast as HTML.\n *\n * @param {Array<RootContent> | Nodes} tree\n *   Tree to serialize.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized HTML.\n */\nexport function toHtml(tree, options) {\n  const options_ = options || emptyOptions\n  const quote = options_.quote || '\"'\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`')\n  }\n\n  /** @type {State} */\n  const state = {\n    one,\n    all,\n    settings: {\n      omitOptionalTags: options_.omitOptionalTags || false,\n      allowParseErrors: options_.allowParseErrors || false,\n      allowDangerousCharacters: options_.allowDangerousCharacters || false,\n      quoteSmart: options_.quoteSmart || false,\n      preferUnquoted: options_.preferUnquoted || false,\n      tightAttributes: options_.tightAttributes || false,\n      upperDoctype: options_.upperDoctype || false,\n      tightDoctype: options_.tightDoctype || false,\n      bogusComments: options_.bogusComments || false,\n      tightCommaSeparatedLists: options_.tightCommaSeparatedLists || false,\n      tightSelfClosing: options_.tightSelfClosing || false,\n      collapseEmptyAttributes: options_.collapseEmptyAttributes || false,\n      allowDangerousHtml: options_.allowDangerousHtml || false,\n      voids: options_.voids || htmlVoidElements,\n      characterReferences:\n        options_.characterReferences || emptyCharacterReferences,\n      closeSelfClosing: options_.closeSelfClosing || false,\n      closeEmptyElements: options_.closeEmptyElements || false\n    },\n    schema: options_.space === 'svg' ? svg : html,\n    quote,\n    alternative\n  }\n\n  return state.one(\n    Array.isArray(tree) ? {type: 'root', children: tree} : tree,\n    undefined,\n    undefined\n  )\n}\n\n/**\n * Serialize a node.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node, index, parent) {\n  return handle(node, index, parent, this)\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parents | undefined} parent\n *   Parent whose children to serialize.\n * @returns {string}\n */\nexport function all(parent) {\n  /** @type {Array<string>} */\n  const results = []\n  const children = (parent && parent.children) || emptyChildren\n  let index = -1\n\n  while (++index < children.length) {\n    results[index] = this.one(children[index], index, parent)\n  }\n\n  return results.join('')\n}\n", "import { ShikiError as ShikiError$1 } from '@shikijs/types';\nexport * from '@shikijs/types';\nimport { FontStyle, INITIAL, EncodedTokenMetadata, Registry as Registry$1, Theme } from '@shikijs/vscode-textmate';\nimport { toHtml } from 'hast-util-to-html';\n\nfunction resolveColorReplacements(theme, options) {\n  const replacements = typeof theme === \"string\" ? {} : { ...theme.colorReplacements };\n  const themeName = typeof theme === \"string\" ? theme : theme.name;\n  for (const [key, value] of Object.entries(options?.colorReplacements || {})) {\n    if (typeof value === \"string\")\n      replacements[key] = value;\n    else if (key === themeName)\n      Object.assign(replacements, value);\n  }\n  return replacements;\n}\nfunction applyColorReplacements(color, replacements) {\n  if (!color)\n    return color;\n  return replacements?.[color?.toLowerCase()] || color;\n}\n\nfunction toArray(x) {\n  return Array.isArray(x) ? x : [x];\n}\nasync function normalizeGetter(p) {\n  return Promise.resolve(typeof p === \"function\" ? p() : p).then((r) => r.default || r);\n}\nfunction isPlainLang(lang) {\n  return !lang || [\"plaintext\", \"txt\", \"text\", \"plain\"].includes(lang);\n}\nfunction isSpecialLang(lang) {\n  return lang === \"ansi\" || isPlainLang(lang);\n}\nfunction isNoneTheme(theme) {\n  return theme === \"none\";\n}\nfunction isSpecialTheme(theme) {\n  return isNoneTheme(theme);\n}\n\nfunction addClassToHast(node, className) {\n  if (!className)\n    return node;\n  node.properties ||= {};\n  node.properties.class ||= [];\n  if (typeof node.properties.class === \"string\")\n    node.properties.class = node.properties.class.split(/\\s+/g);\n  if (!Array.isArray(node.properties.class))\n    node.properties.class = [];\n  const targets = Array.isArray(className) ? className : className.split(/\\s+/g);\n  for (const c of targets) {\n    if (c && !node.properties.class.includes(c))\n      node.properties.class.push(c);\n  }\n  return node;\n}\n\nfunction splitLines(code, preserveEnding = false) {\n  const parts = code.split(/(\\r?\\n)/g);\n  let index = 0;\n  const lines = [];\n  for (let i = 0; i < parts.length; i += 2) {\n    const line = preserveEnding ? parts[i] + (parts[i + 1] || \"\") : parts[i];\n    lines.push([line, index]);\n    index += parts[i].length;\n    index += parts[i + 1]?.length || 0;\n  }\n  return lines;\n}\nfunction createPositionConverter(code) {\n  const lines = splitLines(code, true).map(([line]) => line);\n  function indexToPos(index) {\n    if (index === code.length) {\n      return {\n        line: lines.length - 1,\n        character: lines[lines.length - 1].length\n      };\n    }\n    let character = index;\n    let line = 0;\n    for (const lineText of lines) {\n      if (character < lineText.length)\n        break;\n      character -= lineText.length;\n      line++;\n    }\n    return { line, character };\n  }\n  function posToIndex(line, character) {\n    let index = 0;\n    for (let i = 0; i < line; i++)\n      index += lines[i].length;\n    index += character;\n    return index;\n  }\n  return {\n    lines,\n    indexToPos,\n    posToIndex\n  };\n}\nfunction guessEmbeddedLanguages(code, _lang, highlighter) {\n  const langs = /* @__PURE__ */ new Set();\n  for (const match of code.matchAll(/lang=[\"']([\\w-]+)[\"']/g)) {\n    langs.add(match[1]);\n  }\n  for (const match of code.matchAll(/(?:```|~~~)([\\w-]+)/g)) {\n    langs.add(match[1]);\n  }\n  for (const match of code.matchAll(/\\\\begin\\{([\\w-]+)\\}/g)) {\n    langs.add(match[1]);\n  }\n  if (!highlighter)\n    return Array.from(langs);\n  const bundle = highlighter.getBundledLanguages();\n  return Array.from(langs).filter((l) => l && bundle[l]);\n}\n\nconst DEFAULT_COLOR_LIGHT_DARK = \"light-dark()\";\n\nfunction splitToken(token, offsets) {\n  let lastOffset = 0;\n  const tokens = [];\n  for (const offset of offsets) {\n    if (offset > lastOffset) {\n      tokens.push({\n        ...token,\n        content: token.content.slice(lastOffset, offset),\n        offset: token.offset + lastOffset\n      });\n    }\n    lastOffset = offset;\n  }\n  if (lastOffset < token.content.length) {\n    tokens.push({\n      ...token,\n      content: token.content.slice(lastOffset),\n      offset: token.offset + lastOffset\n    });\n  }\n  return tokens;\n}\nfunction splitTokens(tokens, breakpoints) {\n  const sorted = Array.from(breakpoints instanceof Set ? breakpoints : new Set(breakpoints)).sort((a, b) => a - b);\n  if (!sorted.length)\n    return tokens;\n  return tokens.map((line) => {\n    return line.flatMap((token) => {\n      const breakpointsInToken = sorted.filter((i) => token.offset < i && i < token.offset + token.content.length).map((i) => i - token.offset).sort((a, b) => a - b);\n      if (!breakpointsInToken.length)\n        return token;\n      return splitToken(token, breakpointsInToken);\n    });\n  });\n}\nfunction flatTokenVariants(merged, variantsOrder, cssVariablePrefix, defaultColor, colorsRendering = \"css-vars\") {\n  const token = {\n    content: merged.content,\n    explanation: merged.explanation,\n    offset: merged.offset\n  };\n  const styles = variantsOrder.map((t) => getTokenStyleObject(merged.variants[t]));\n  const styleKeys = new Set(styles.flatMap((t) => Object.keys(t)));\n  const mergedStyles = {};\n  const varKey = (idx, key) => {\n    const keyName = key === \"color\" ? \"\" : key === \"background-color\" ? \"-bg\" : `-${key}`;\n    return cssVariablePrefix + variantsOrder[idx] + (key === \"color\" ? \"\" : keyName);\n  };\n  styles.forEach((cur, idx) => {\n    for (const key of styleKeys) {\n      const value = cur[key] || \"inherit\";\n      if (idx === 0 && defaultColor) {\n        if (defaultColor === DEFAULT_COLOR_LIGHT_DARK && styles.length > 1) {\n          const lightIndex = variantsOrder.findIndex((t) => t === \"light\");\n          const darkIndex = variantsOrder.findIndex((t) => t === \"dark\");\n          if (lightIndex === -1 || darkIndex === -1)\n            throw new ShikiError$1('When using `defaultColor: \"light-dark()\"`, you must provide both `light` and `dark` themes');\n          const lightValue = styles[lightIndex][key] || \"inherit\";\n          const darkValue = styles[darkIndex][key] || \"inherit\";\n          mergedStyles[key] = `light-dark(${lightValue}, ${darkValue})`;\n          if (colorsRendering === \"css-vars\")\n            mergedStyles[varKey(idx, key)] = value;\n        } else {\n          mergedStyles[key] = value;\n        }\n      } else {\n        if (colorsRendering === \"css-vars\")\n          mergedStyles[varKey(idx, key)] = value;\n      }\n    }\n  });\n  token.htmlStyle = mergedStyles;\n  return token;\n}\nfunction getTokenStyleObject(token) {\n  const styles = {};\n  if (token.color)\n    styles.color = token.color;\n  if (token.bgColor)\n    styles[\"background-color\"] = token.bgColor;\n  if (token.fontStyle) {\n    if (token.fontStyle & FontStyle.Italic)\n      styles[\"font-style\"] = \"italic\";\n    if (token.fontStyle & FontStyle.Bold)\n      styles[\"font-weight\"] = \"bold\";\n    const decorations = [];\n    if (token.fontStyle & FontStyle.Underline)\n      decorations.push(\"underline\");\n    if (token.fontStyle & FontStyle.Strikethrough)\n      decorations.push(\"line-through\");\n    if (decorations.length)\n      styles[\"text-decoration\"] = decorations.join(\" \");\n  }\n  return styles;\n}\nfunction stringifyTokenStyle(token) {\n  if (typeof token === \"string\")\n    return token;\n  return Object.entries(token).map(([key, value]) => `${key}:${value}`).join(\";\");\n}\n\nconst _grammarStateMap = /* @__PURE__ */ new WeakMap();\nfunction setLastGrammarStateToMap(keys, state) {\n  _grammarStateMap.set(keys, state);\n}\nfunction getLastGrammarStateFromMap(keys) {\n  return _grammarStateMap.get(keys);\n}\nclass GrammarState {\n  /**\n   * Theme to Stack mapping\n   */\n  _stacks = {};\n  lang;\n  get themes() {\n    return Object.keys(this._stacks);\n  }\n  get theme() {\n    return this.themes[0];\n  }\n  get _stack() {\n    return this._stacks[this.theme];\n  }\n  /**\n   * Static method to create a initial grammar state.\n   */\n  static initial(lang, themes) {\n    return new GrammarState(\n      Object.fromEntries(toArray(themes).map((theme) => [theme, INITIAL])),\n      lang\n    );\n  }\n  constructor(...args) {\n    if (args.length === 2) {\n      const [stacksMap, lang] = args;\n      this.lang = lang;\n      this._stacks = stacksMap;\n    } else {\n      const [stack, lang, theme] = args;\n      this.lang = lang;\n      this._stacks = { [theme]: stack };\n    }\n  }\n  /**\n   * Get the internal stack object.\n   * @internal\n   */\n  getInternalStack(theme = this.theme) {\n    return this._stacks[theme];\n  }\n  getScopes(theme = this.theme) {\n    return getScopes(this._stacks[theme]);\n  }\n  toJSON() {\n    return {\n      lang: this.lang,\n      theme: this.theme,\n      themes: this.themes,\n      scopes: this.getScopes()\n    };\n  }\n}\nfunction getScopes(stack) {\n  const scopes = [];\n  const visited = /* @__PURE__ */ new Set();\n  function pushScope(stack2) {\n    if (visited.has(stack2))\n      return;\n    visited.add(stack2);\n    const name = stack2?.nameScopesList?.scopeName;\n    if (name)\n      scopes.push(name);\n    if (stack2.parent)\n      pushScope(stack2.parent);\n  }\n  pushScope(stack);\n  return scopes;\n}\nfunction getGrammarStack(state, theme) {\n  if (!(state instanceof GrammarState))\n    throw new ShikiError$1(\"Invalid grammar state\");\n  return state.getInternalStack(theme);\n}\n\nfunction transformerDecorations() {\n  const map = /* @__PURE__ */ new WeakMap();\n  function getContext(shiki) {\n    if (!map.has(shiki.meta)) {\n      let normalizePosition = function(p) {\n        if (typeof p === \"number\") {\n          if (p < 0 || p > shiki.source.length)\n            throw new ShikiError$1(`Invalid decoration offset: ${p}. Code length: ${shiki.source.length}`);\n          return {\n            ...converter.indexToPos(p),\n            offset: p\n          };\n        } else {\n          const line = converter.lines[p.line];\n          if (line === void 0)\n            throw new ShikiError$1(`Invalid decoration position ${JSON.stringify(p)}. Lines length: ${converter.lines.length}`);\n          if (p.character < 0 || p.character > line.length)\n            throw new ShikiError$1(`Invalid decoration position ${JSON.stringify(p)}. Line ${p.line} length: ${line.length}`);\n          return {\n            ...p,\n            offset: converter.posToIndex(p.line, p.character)\n          };\n        }\n      };\n      const converter = createPositionConverter(shiki.source);\n      const decorations = (shiki.options.decorations || []).map((d) => ({\n        ...d,\n        start: normalizePosition(d.start),\n        end: normalizePosition(d.end)\n      }));\n      verifyIntersections(decorations);\n      map.set(shiki.meta, {\n        decorations,\n        converter,\n        source: shiki.source\n      });\n    }\n    return map.get(shiki.meta);\n  }\n  return {\n    name: \"shiki:decorations\",\n    tokens(tokens) {\n      if (!this.options.decorations?.length)\n        return;\n      const ctx = getContext(this);\n      const breakpoints = ctx.decorations.flatMap((d) => [d.start.offset, d.end.offset]);\n      const splitted = splitTokens(tokens, breakpoints);\n      return splitted;\n    },\n    code(codeEl) {\n      if (!this.options.decorations?.length)\n        return;\n      const ctx = getContext(this);\n      const lines = Array.from(codeEl.children).filter((i) => i.type === \"element\" && i.tagName === \"span\");\n      if (lines.length !== ctx.converter.lines.length)\n        throw new ShikiError$1(`Number of lines in code element (${lines.length}) does not match the number of lines in the source (${ctx.converter.lines.length}). Failed to apply decorations.`);\n      function applyLineSection(line, start, end, decoration) {\n        const lineEl = lines[line];\n        let text = \"\";\n        let startIndex = -1;\n        let endIndex = -1;\n        if (start === 0)\n          startIndex = 0;\n        if (end === 0)\n          endIndex = 0;\n        if (end === Number.POSITIVE_INFINITY)\n          endIndex = lineEl.children.length;\n        if (startIndex === -1 || endIndex === -1) {\n          for (let i = 0; i < lineEl.children.length; i++) {\n            text += stringify(lineEl.children[i]);\n            if (startIndex === -1 && text.length === start)\n              startIndex = i + 1;\n            if (endIndex === -1 && text.length === end)\n              endIndex = i + 1;\n          }\n        }\n        if (startIndex === -1)\n          throw new ShikiError$1(`Failed to find start index for decoration ${JSON.stringify(decoration.start)}`);\n        if (endIndex === -1)\n          throw new ShikiError$1(`Failed to find end index for decoration ${JSON.stringify(decoration.end)}`);\n        const children = lineEl.children.slice(startIndex, endIndex);\n        if (!decoration.alwaysWrap && children.length === lineEl.children.length) {\n          applyDecoration(lineEl, decoration, \"line\");\n        } else if (!decoration.alwaysWrap && children.length === 1 && children[0].type === \"element\") {\n          applyDecoration(children[0], decoration, \"token\");\n        } else {\n          const wrapper = {\n            type: \"element\",\n            tagName: \"span\",\n            properties: {},\n            children\n          };\n          applyDecoration(wrapper, decoration, \"wrapper\");\n          lineEl.children.splice(startIndex, children.length, wrapper);\n        }\n      }\n      function applyLine(line, decoration) {\n        lines[line] = applyDecoration(lines[line], decoration, \"line\");\n      }\n      function applyDecoration(el, decoration, type) {\n        const properties = decoration.properties || {};\n        const transform = decoration.transform || ((i) => i);\n        el.tagName = decoration.tagName || \"span\";\n        el.properties = {\n          ...el.properties,\n          ...properties,\n          class: el.properties.class\n        };\n        if (decoration.properties?.class)\n          addClassToHast(el, decoration.properties.class);\n        el = transform(el, type) || el;\n        return el;\n      }\n      const lineApplies = [];\n      const sorted = ctx.decorations.sort((a, b) => b.start.offset - a.start.offset || a.end.offset - b.end.offset);\n      for (const decoration of sorted) {\n        const { start, end } = decoration;\n        if (start.line === end.line) {\n          applyLineSection(start.line, start.character, end.character, decoration);\n        } else if (start.line < end.line) {\n          applyLineSection(start.line, start.character, Number.POSITIVE_INFINITY, decoration);\n          for (let i = start.line + 1; i < end.line; i++)\n            lineApplies.unshift(() => applyLine(i, decoration));\n          applyLineSection(end.line, 0, end.character, decoration);\n        }\n      }\n      lineApplies.forEach((i) => i());\n    }\n  };\n}\nfunction verifyIntersections(items) {\n  for (let i = 0; i < items.length; i++) {\n    const foo = items[i];\n    if (foo.start.offset > foo.end.offset)\n      throw new ShikiError$1(`Invalid decoration range: ${JSON.stringify(foo.start)} - ${JSON.stringify(foo.end)}`);\n    for (let j = i + 1; j < items.length; j++) {\n      const bar = items[j];\n      const isFooHasBarStart = foo.start.offset <= bar.start.offset && bar.start.offset < foo.end.offset;\n      const isFooHasBarEnd = foo.start.offset < bar.end.offset && bar.end.offset <= foo.end.offset;\n      const isBarHasFooStart = bar.start.offset <= foo.start.offset && foo.start.offset < bar.end.offset;\n      const isBarHasFooEnd = bar.start.offset < foo.end.offset && foo.end.offset <= bar.end.offset;\n      if (isFooHasBarStart || isFooHasBarEnd || isBarHasFooStart || isBarHasFooEnd) {\n        if (isFooHasBarStart && isFooHasBarEnd)\n          continue;\n        if (isBarHasFooStart && isBarHasFooEnd)\n          continue;\n        throw new ShikiError$1(`Decorations ${JSON.stringify(foo.start)} and ${JSON.stringify(bar.start)} intersect.`);\n      }\n    }\n  }\n}\nfunction stringify(el) {\n  if (el.type === \"text\")\n    return el.value;\n  if (el.type === \"element\")\n    return el.children.map(stringify).join(\"\");\n  return \"\";\n}\n\nconst builtInTransformers = [\n  /* @__PURE__ */ transformerDecorations()\n];\nfunction getTransformers(options) {\n  return [\n    ...options.transformers || [],\n    ...builtInTransformers\n  ];\n}\n\n// src/colors.ts\nvar namedColors = [\n  \"black\",\n  \"red\",\n  \"green\",\n  \"yellow\",\n  \"blue\",\n  \"magenta\",\n  \"cyan\",\n  \"white\",\n  \"brightBlack\",\n  \"brightRed\",\n  \"brightGreen\",\n  \"brightYellow\",\n  \"brightBlue\",\n  \"brightMagenta\",\n  \"brightCyan\",\n  \"brightWhite\"\n];\n\n// src/decorations.ts\nvar decorations = {\n  1: \"bold\",\n  2: \"dim\",\n  3: \"italic\",\n  4: \"underline\",\n  7: \"reverse\",\n  8: \"hidden\",\n  9: \"strikethrough\"\n};\n\n// src/parser.ts\nfunction findSequence(value, position) {\n  const nextEscape = value.indexOf(\"\\x1B\", position);\n  if (nextEscape !== -1) {\n    if (value[nextEscape + 1] === \"[\") {\n      const nextClose = value.indexOf(\"m\", nextEscape);\n      if (nextClose !== -1) {\n        return {\n          sequence: value.substring(nextEscape + 2, nextClose).split(\";\"),\n          startPosition: nextEscape,\n          position: nextClose + 1\n        };\n      }\n    }\n  }\n  return {\n    position: value.length\n  };\n}\nfunction parseColor(sequence) {\n  const colorMode = sequence.shift();\n  if (colorMode === \"2\") {\n    const rgb = sequence.splice(0, 3).map((x) => Number.parseInt(x));\n    if (rgb.length !== 3 || rgb.some((x) => Number.isNaN(x)))\n      return;\n    return {\n      type: \"rgb\",\n      rgb\n    };\n  } else if (colorMode === \"5\") {\n    const index = sequence.shift();\n    if (index) {\n      return { type: \"table\", index: Number(index) };\n    }\n  }\n}\nfunction parseSequence(sequence) {\n  const commands = [];\n  while (sequence.length > 0) {\n    const code = sequence.shift();\n    if (!code)\n      continue;\n    const codeInt = Number.parseInt(code);\n    if (Number.isNaN(codeInt))\n      continue;\n    if (codeInt === 0) {\n      commands.push({ type: \"resetAll\" });\n    } else if (codeInt <= 9) {\n      const decoration = decorations[codeInt];\n      if (decoration) {\n        commands.push({\n          type: \"setDecoration\",\n          value: decorations[codeInt]\n        });\n      }\n    } else if (codeInt <= 29) {\n      const decoration = decorations[codeInt - 20];\n      if (decoration) {\n        commands.push({\n          type: \"resetDecoration\",\n          value: decoration\n        });\n        if (decoration === \"dim\") {\n          commands.push({\n            type: \"resetDecoration\",\n            value: \"bold\"\n          });\n        }\n      }\n    } else if (codeInt <= 37) {\n      commands.push({\n        type: \"setForegroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 30] }\n      });\n    } else if (codeInt === 38) {\n      const color = parseColor(sequence);\n      if (color) {\n        commands.push({\n          type: \"setForegroundColor\",\n          value: color\n        });\n      }\n    } else if (codeInt === 39) {\n      commands.push({\n        type: \"resetForegroundColor\"\n      });\n    } else if (codeInt <= 47) {\n      commands.push({\n        type: \"setBackgroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 40] }\n      });\n    } else if (codeInt === 48) {\n      const color = parseColor(sequence);\n      if (color) {\n        commands.push({\n          type: \"setBackgroundColor\",\n          value: color\n        });\n      }\n    } else if (codeInt === 49) {\n      commands.push({\n        type: \"resetBackgroundColor\"\n      });\n    } else if (codeInt === 53) {\n      commands.push({\n        type: \"setDecoration\",\n        value: \"overline\"\n      });\n    } else if (codeInt === 55) {\n      commands.push({\n        type: \"resetDecoration\",\n        value: \"overline\"\n      });\n    } else if (codeInt >= 90 && codeInt <= 97) {\n      commands.push({\n        type: \"setForegroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 90 + 8] }\n      });\n    } else if (codeInt >= 100 && codeInt <= 107) {\n      commands.push({\n        type: \"setBackgroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 100 + 8] }\n      });\n    }\n  }\n  return commands;\n}\nfunction createAnsiSequenceParser() {\n  let foreground = null;\n  let background = null;\n  let decorations2 = /* @__PURE__ */ new Set();\n  return {\n    parse(value) {\n      const tokens = [];\n      let position = 0;\n      do {\n        const findResult = findSequence(value, position);\n        const text = findResult.sequence ? value.substring(position, findResult.startPosition) : value.substring(position);\n        if (text.length > 0) {\n          tokens.push({\n            value: text,\n            foreground,\n            background,\n            decorations: new Set(decorations2)\n          });\n        }\n        if (findResult.sequence) {\n          const commands = parseSequence(findResult.sequence);\n          for (const styleToken of commands) {\n            if (styleToken.type === \"resetAll\") {\n              foreground = null;\n              background = null;\n              decorations2.clear();\n            } else if (styleToken.type === \"resetForegroundColor\") {\n              foreground = null;\n            } else if (styleToken.type === \"resetBackgroundColor\") {\n              background = null;\n            } else if (styleToken.type === \"resetDecoration\") {\n              decorations2.delete(styleToken.value);\n            }\n          }\n          for (const styleToken of commands) {\n            if (styleToken.type === \"setForegroundColor\") {\n              foreground = styleToken.value;\n            } else if (styleToken.type === \"setBackgroundColor\") {\n              background = styleToken.value;\n            } else if (styleToken.type === \"setDecoration\") {\n              decorations2.add(styleToken.value);\n            }\n          }\n        }\n        position = findResult.position;\n      } while (position < value.length);\n      return tokens;\n    }\n  };\n}\n\n// src/palette.ts\nvar defaultNamedColorsMap = {\n  black: \"#000000\",\n  red: \"#bb0000\",\n  green: \"#00bb00\",\n  yellow: \"#bbbb00\",\n  blue: \"#0000bb\",\n  magenta: \"#ff00ff\",\n  cyan: \"#00bbbb\",\n  white: \"#eeeeee\",\n  brightBlack: \"#555555\",\n  brightRed: \"#ff5555\",\n  brightGreen: \"#00ff00\",\n  brightYellow: \"#ffff55\",\n  brightBlue: \"#5555ff\",\n  brightMagenta: \"#ff55ff\",\n  brightCyan: \"#55ffff\",\n  brightWhite: \"#ffffff\"\n};\nfunction createColorPalette(namedColorsMap = defaultNamedColorsMap) {\n  function namedColor(name) {\n    return namedColorsMap[name];\n  }\n  function rgbColor(rgb) {\n    return `#${rgb.map((x) => Math.max(0, Math.min(x, 255)).toString(16).padStart(2, \"0\")).join(\"\")}`;\n  }\n  let colorTable;\n  function getColorTable() {\n    if (colorTable) {\n      return colorTable;\n    }\n    colorTable = [];\n    for (let i = 0; i < namedColors.length; i++) {\n      colorTable.push(namedColor(namedColors[i]));\n    }\n    let levels = [0, 95, 135, 175, 215, 255];\n    for (let r = 0; r < 6; r++) {\n      for (let g = 0; g < 6; g++) {\n        for (let b = 0; b < 6; b++) {\n          colorTable.push(rgbColor([levels[r], levels[g], levels[b]]));\n        }\n      }\n    }\n    let level = 8;\n    for (let i = 0; i < 24; i++, level += 10) {\n      colorTable.push(rgbColor([level, level, level]));\n    }\n    return colorTable;\n  }\n  function tableColor(index) {\n    return getColorTable()[index];\n  }\n  function value(color) {\n    switch (color.type) {\n      case \"named\":\n        return namedColor(color.name);\n      case \"rgb\":\n        return rgbColor(color.rgb);\n      case \"table\":\n        return tableColor(color.index);\n    }\n  }\n  return {\n    value\n  };\n}\n\nfunction tokenizeAnsiWithTheme(theme, fileContents, options) {\n  const colorReplacements = resolveColorReplacements(theme, options);\n  const lines = splitLines(fileContents);\n  const colorPalette = createColorPalette(\n    Object.fromEntries(\n      namedColors.map((name) => [\n        name,\n        theme.colors?.[`terminal.ansi${name[0].toUpperCase()}${name.substring(1)}`]\n      ])\n    )\n  );\n  const parser = createAnsiSequenceParser();\n  return lines.map(\n    (line) => parser.parse(line[0]).map((token) => {\n      let color;\n      let bgColor;\n      if (token.decorations.has(\"reverse\")) {\n        color = token.background ? colorPalette.value(token.background) : theme.bg;\n        bgColor = token.foreground ? colorPalette.value(token.foreground) : theme.fg;\n      } else {\n        color = token.foreground ? colorPalette.value(token.foreground) : theme.fg;\n        bgColor = token.background ? colorPalette.value(token.background) : void 0;\n      }\n      color = applyColorReplacements(color, colorReplacements);\n      bgColor = applyColorReplacements(bgColor, colorReplacements);\n      if (token.decorations.has(\"dim\"))\n        color = dimColor(color);\n      let fontStyle = FontStyle.None;\n      if (token.decorations.has(\"bold\"))\n        fontStyle |= FontStyle.Bold;\n      if (token.decorations.has(\"italic\"))\n        fontStyle |= FontStyle.Italic;\n      if (token.decorations.has(\"underline\"))\n        fontStyle |= FontStyle.Underline;\n      if (token.decorations.has(\"strikethrough\"))\n        fontStyle |= FontStyle.Strikethrough;\n      return {\n        content: token.value,\n        offset: line[1],\n        // TODO: more accurate offset? might need to fork ansi-sequence-parser\n        color,\n        bgColor,\n        fontStyle\n      };\n    })\n  );\n}\nfunction dimColor(color) {\n  const hexMatch = color.match(/#([0-9a-f]{3})([0-9a-f]{3})?([0-9a-f]{2})?/);\n  if (hexMatch) {\n    if (hexMatch[3]) {\n      const alpha = Math.round(Number.parseInt(hexMatch[3], 16) / 2).toString(16).padStart(2, \"0\");\n      return `#${hexMatch[1]}${hexMatch[2]}${alpha}`;\n    } else if (hexMatch[2]) {\n      return `#${hexMatch[1]}${hexMatch[2]}80`;\n    } else {\n      return `#${Array.from(hexMatch[1]).map((x) => `${x}${x}`).join(\"\")}80`;\n    }\n  }\n  const cssVarMatch = color.match(/var\\((--[\\w-]+-ansi-[\\w-]+)\\)/);\n  if (cssVarMatch)\n    return `var(${cssVarMatch[1]}-dim)`;\n  return color;\n}\n\nfunction codeToTokensBase(internal, code, options = {}) {\n  const {\n    lang = \"text\",\n    theme: themeName = internal.getLoadedThemes()[0]\n  } = options;\n  if (isPlainLang(lang) || isNoneTheme(themeName))\n    return splitLines(code).map((line) => [{ content: line[0], offset: line[1] }]);\n  const { theme, colorMap } = internal.setTheme(themeName);\n  if (lang === \"ansi\")\n    return tokenizeAnsiWithTheme(theme, code, options);\n  const _grammar = internal.getLanguage(lang);\n  if (options.grammarState) {\n    if (options.grammarState.lang !== _grammar.name) {\n      throw new ShikiError$1(`Grammar state language \"${options.grammarState.lang}\" does not match highlight language \"${_grammar.name}\"`);\n    }\n    if (!options.grammarState.themes.includes(theme.name)) {\n      throw new ShikiError$1(`Grammar state themes \"${options.grammarState.themes}\" do not contain highlight theme \"${theme.name}\"`);\n    }\n  }\n  return tokenizeWithTheme(code, _grammar, theme, colorMap, options);\n}\nfunction getLastGrammarState(...args) {\n  if (args.length === 2) {\n    return getLastGrammarStateFromMap(args[1]);\n  }\n  const [internal, code, options = {}] = args;\n  const {\n    lang = \"text\",\n    theme: themeName = internal.getLoadedThemes()[0]\n  } = options;\n  if (isPlainLang(lang) || isNoneTheme(themeName))\n    throw new ShikiError$1(\"Plain language does not have grammar state\");\n  if (lang === \"ansi\")\n    throw new ShikiError$1(\"ANSI language does not have grammar state\");\n  const { theme, colorMap } = internal.setTheme(themeName);\n  const _grammar = internal.getLanguage(lang);\n  return new GrammarState(\n    _tokenizeWithTheme(code, _grammar, theme, colorMap, options).stateStack,\n    _grammar.name,\n    theme.name\n  );\n}\nfunction tokenizeWithTheme(code, grammar, theme, colorMap, options) {\n  const result = _tokenizeWithTheme(code, grammar, theme, colorMap, options);\n  const grammarState = new GrammarState(\n    _tokenizeWithTheme(code, grammar, theme, colorMap, options).stateStack,\n    grammar.name,\n    theme.name\n  );\n  setLastGrammarStateToMap(result.tokens, grammarState);\n  return result.tokens;\n}\nfunction _tokenizeWithTheme(code, grammar, theme, colorMap, options) {\n  const colorReplacements = resolveColorReplacements(theme, options);\n  const {\n    tokenizeMaxLineLength = 0,\n    tokenizeTimeLimit = 500\n  } = options;\n  const lines = splitLines(code);\n  let stateStack = options.grammarState ? getGrammarStack(options.grammarState, theme.name) ?? INITIAL : options.grammarContextCode != null ? _tokenizeWithTheme(\n    options.grammarContextCode,\n    grammar,\n    theme,\n    colorMap,\n    {\n      ...options,\n      grammarState: void 0,\n      grammarContextCode: void 0\n    }\n  ).stateStack : INITIAL;\n  let actual = [];\n  const final = [];\n  for (let i = 0, len = lines.length; i < len; i++) {\n    const [line, lineOffset] = lines[i];\n    if (line === \"\") {\n      actual = [];\n      final.push([]);\n      continue;\n    }\n    if (tokenizeMaxLineLength > 0 && line.length >= tokenizeMaxLineLength) {\n      actual = [];\n      final.push([{\n        content: line,\n        offset: lineOffset,\n        color: \"\",\n        fontStyle: 0\n      }]);\n      continue;\n    }\n    let resultWithScopes;\n    let tokensWithScopes;\n    let tokensWithScopesIndex;\n    if (options.includeExplanation) {\n      resultWithScopes = grammar.tokenizeLine(line, stateStack, tokenizeTimeLimit);\n      tokensWithScopes = resultWithScopes.tokens;\n      tokensWithScopesIndex = 0;\n    }\n    const result = grammar.tokenizeLine2(line, stateStack, tokenizeTimeLimit);\n    const tokensLength = result.tokens.length / 2;\n    for (let j = 0; j < tokensLength; j++) {\n      const startIndex = result.tokens[2 * j];\n      const nextStartIndex = j + 1 < tokensLength ? result.tokens[2 * j + 2] : line.length;\n      if (startIndex === nextStartIndex)\n        continue;\n      const metadata = result.tokens[2 * j + 1];\n      const color = applyColorReplacements(\n        colorMap[EncodedTokenMetadata.getForeground(metadata)],\n        colorReplacements\n      );\n      const fontStyle = EncodedTokenMetadata.getFontStyle(metadata);\n      const token = {\n        content: line.substring(startIndex, nextStartIndex),\n        offset: lineOffset + startIndex,\n        color,\n        fontStyle\n      };\n      if (options.includeExplanation) {\n        const themeSettingsSelectors = [];\n        if (options.includeExplanation !== \"scopeName\") {\n          for (const setting of theme.settings) {\n            let selectors;\n            switch (typeof setting.scope) {\n              case \"string\":\n                selectors = setting.scope.split(/,/).map((scope) => scope.trim());\n                break;\n              case \"object\":\n                selectors = setting.scope;\n                break;\n              default:\n                continue;\n            }\n            themeSettingsSelectors.push({\n              settings: setting,\n              selectors: selectors.map((selector) => selector.split(/ /))\n            });\n          }\n        }\n        token.explanation = [];\n        let offset = 0;\n        while (startIndex + offset < nextStartIndex) {\n          const tokenWithScopes = tokensWithScopes[tokensWithScopesIndex];\n          const tokenWithScopesText = line.substring(\n            tokenWithScopes.startIndex,\n            tokenWithScopes.endIndex\n          );\n          offset += tokenWithScopesText.length;\n          token.explanation.push({\n            content: tokenWithScopesText,\n            scopes: options.includeExplanation === \"scopeName\" ? explainThemeScopesNameOnly(\n              tokenWithScopes.scopes\n            ) : explainThemeScopesFull(\n              themeSettingsSelectors,\n              tokenWithScopes.scopes\n            )\n          });\n          tokensWithScopesIndex += 1;\n        }\n      }\n      actual.push(token);\n    }\n    final.push(actual);\n    actual = [];\n    stateStack = result.ruleStack;\n  }\n  return {\n    tokens: final,\n    stateStack\n  };\n}\nfunction explainThemeScopesNameOnly(scopes) {\n  return scopes.map((scope) => ({ scopeName: scope }));\n}\nfunction explainThemeScopesFull(themeSelectors, scopes) {\n  const result = [];\n  for (let i = 0, len = scopes.length; i < len; i++) {\n    const scope = scopes[i];\n    result[i] = {\n      scopeName: scope,\n      themeMatches: explainThemeScope(themeSelectors, scope, scopes.slice(0, i))\n    };\n  }\n  return result;\n}\nfunction matchesOne(selector, scope) {\n  return selector === scope || scope.substring(0, selector.length) === selector && scope[selector.length] === \".\";\n}\nfunction matches(selectors, scope, parentScopes) {\n  if (!matchesOne(selectors[selectors.length - 1], scope))\n    return false;\n  let selectorParentIndex = selectors.length - 2;\n  let parentIndex = parentScopes.length - 1;\n  while (selectorParentIndex >= 0 && parentIndex >= 0) {\n    if (matchesOne(selectors[selectorParentIndex], parentScopes[parentIndex]))\n      selectorParentIndex -= 1;\n    parentIndex -= 1;\n  }\n  if (selectorParentIndex === -1)\n    return true;\n  return false;\n}\nfunction explainThemeScope(themeSettingsSelectors, scope, parentScopes) {\n  const result = [];\n  for (const { selectors, settings } of themeSettingsSelectors) {\n    for (const selectorPieces of selectors) {\n      if (matches(selectorPieces, scope, parentScopes)) {\n        result.push(settings);\n        break;\n      }\n    }\n  }\n  return result;\n}\n\nfunction codeToTokensWithThemes(internal, code, options) {\n  const themes = Object.entries(options.themes).filter((i) => i[1]).map((i) => ({ color: i[0], theme: i[1] }));\n  const themedTokens = themes.map((t) => {\n    const tokens2 = codeToTokensBase(internal, code, {\n      ...options,\n      theme: t.theme\n    });\n    const state = getLastGrammarStateFromMap(tokens2);\n    const theme = typeof t.theme === \"string\" ? t.theme : t.theme.name;\n    return {\n      tokens: tokens2,\n      state,\n      theme\n    };\n  });\n  const tokens = syncThemesTokenization(\n    ...themedTokens.map((i) => i.tokens)\n  );\n  const mergedTokens = tokens[0].map(\n    (line, lineIdx) => line.map((_token, tokenIdx) => {\n      const mergedToken = {\n        content: _token.content,\n        variants: {},\n        offset: _token.offset\n      };\n      if (\"includeExplanation\" in options && options.includeExplanation) {\n        mergedToken.explanation = _token.explanation;\n      }\n      tokens.forEach((t, themeIdx) => {\n        const {\n          content: _,\n          explanation: __,\n          offset: ___,\n          ...styles\n        } = t[lineIdx][tokenIdx];\n        mergedToken.variants[themes[themeIdx].color] = styles;\n      });\n      return mergedToken;\n    })\n  );\n  const mergedGrammarState = themedTokens[0].state ? new GrammarState(\n    Object.fromEntries(themedTokens.map((s) => [s.theme, s.state?.getInternalStack(s.theme)])),\n    themedTokens[0].state.lang\n  ) : void 0;\n  if (mergedGrammarState)\n    setLastGrammarStateToMap(mergedTokens, mergedGrammarState);\n  return mergedTokens;\n}\nfunction syncThemesTokenization(...themes) {\n  const outThemes = themes.map(() => []);\n  const count = themes.length;\n  for (let i = 0; i < themes[0].length; i++) {\n    const lines = themes.map((t) => t[i]);\n    const outLines = outThemes.map(() => []);\n    outThemes.forEach((t, i2) => t.push(outLines[i2]));\n    const indexes = lines.map(() => 0);\n    const current = lines.map((l) => l[0]);\n    while (current.every((t) => t)) {\n      const minLength = Math.min(...current.map((t) => t.content.length));\n      for (let n = 0; n < count; n++) {\n        const token = current[n];\n        if (token.content.length === minLength) {\n          outLines[n].push(token);\n          indexes[n] += 1;\n          current[n] = lines[n][indexes[n]];\n        } else {\n          outLines[n].push({\n            ...token,\n            content: token.content.slice(0, minLength)\n          });\n          current[n] = {\n            ...token,\n            content: token.content.slice(minLength),\n            offset: token.offset + minLength\n          };\n        }\n      }\n    }\n  }\n  return outThemes;\n}\n\nfunction codeToTokens(internal, code, options) {\n  let bg;\n  let fg;\n  let tokens;\n  let themeName;\n  let rootStyle;\n  let grammarState;\n  if (\"themes\" in options) {\n    const {\n      defaultColor = \"light\",\n      cssVariablePrefix = \"--shiki-\",\n      colorsRendering = \"css-vars\"\n    } = options;\n    const themes = Object.entries(options.themes).filter((i) => i[1]).map((i) => ({ color: i[0], theme: i[1] })).sort((a, b) => a.color === defaultColor ? -1 : b.color === defaultColor ? 1 : 0);\n    if (themes.length === 0)\n      throw new ShikiError$1(\"`themes` option must not be empty\");\n    const themeTokens = codeToTokensWithThemes(\n      internal,\n      code,\n      options\n    );\n    grammarState = getLastGrammarStateFromMap(themeTokens);\n    if (defaultColor && DEFAULT_COLOR_LIGHT_DARK !== defaultColor && !themes.find((t) => t.color === defaultColor))\n      throw new ShikiError$1(`\\`themes\\` option must contain the defaultColor key \\`${defaultColor}\\``);\n    const themeRegs = themes.map((t) => internal.getTheme(t.theme));\n    const themesOrder = themes.map((t) => t.color);\n    tokens = themeTokens.map((line) => line.map((token) => flatTokenVariants(token, themesOrder, cssVariablePrefix, defaultColor, colorsRendering)));\n    if (grammarState)\n      setLastGrammarStateToMap(tokens, grammarState);\n    const themeColorReplacements = themes.map((t) => resolveColorReplacements(t.theme, options));\n    fg = mapThemeColors(themes, themeRegs, themeColorReplacements, cssVariablePrefix, defaultColor, \"fg\", colorsRendering);\n    bg = mapThemeColors(themes, themeRegs, themeColorReplacements, cssVariablePrefix, defaultColor, \"bg\", colorsRendering);\n    themeName = `shiki-themes ${themeRegs.map((t) => t.name).join(\" \")}`;\n    rootStyle = defaultColor ? void 0 : [fg, bg].join(\";\");\n  } else if (\"theme\" in options) {\n    const colorReplacements = resolveColorReplacements(options.theme, options);\n    tokens = codeToTokensBase(\n      internal,\n      code,\n      options\n    );\n    const _theme = internal.getTheme(options.theme);\n    bg = applyColorReplacements(_theme.bg, colorReplacements);\n    fg = applyColorReplacements(_theme.fg, colorReplacements);\n    themeName = _theme.name;\n    grammarState = getLastGrammarStateFromMap(tokens);\n  } else {\n    throw new ShikiError$1(\"Invalid options, either `theme` or `themes` must be provided\");\n  }\n  return {\n    tokens,\n    fg,\n    bg,\n    themeName,\n    rootStyle,\n    grammarState\n  };\n}\nfunction mapThemeColors(themes, themeRegs, themeColorReplacements, cssVariablePrefix, defaultColor, property, colorsRendering) {\n  return themes.map((t, idx) => {\n    const value = applyColorReplacements(themeRegs[idx][property], themeColorReplacements[idx]) || \"inherit\";\n    const cssVar = `${cssVariablePrefix + t.color}${property === \"bg\" ? \"-bg\" : \"\"}:${value}`;\n    if (idx === 0 && defaultColor) {\n      if (defaultColor === DEFAULT_COLOR_LIGHT_DARK && themes.length > 1) {\n        const lightIndex = themes.findIndex((t2) => t2.color === \"light\");\n        const darkIndex = themes.findIndex((t2) => t2.color === \"dark\");\n        if (lightIndex === -1 || darkIndex === -1)\n          throw new ShikiError$1('When using `defaultColor: \"light-dark()\"`, you must provide both `light` and `dark` themes');\n        const lightValue = applyColorReplacements(themeRegs[lightIndex][property], themeColorReplacements[lightIndex]) || \"inherit\";\n        const darkValue = applyColorReplacements(themeRegs[darkIndex][property], themeColorReplacements[darkIndex]) || \"inherit\";\n        return `light-dark(${lightValue}, ${darkValue});${cssVar}`;\n      }\n      return value;\n    }\n    if (colorsRendering === \"css-vars\") {\n      return cssVar;\n    }\n    return null;\n  }).filter((i) => !!i).join(\";\");\n}\n\nfunction codeToHast(internal, code, options, transformerContext = {\n  meta: {},\n  options,\n  codeToHast: (_code, _options) => codeToHast(internal, _code, _options),\n  codeToTokens: (_code, _options) => codeToTokens(internal, _code, _options)\n}) {\n  let input = code;\n  for (const transformer of getTransformers(options))\n    input = transformer.preprocess?.call(transformerContext, input, options) || input;\n  let {\n    tokens,\n    fg,\n    bg,\n    themeName,\n    rootStyle,\n    grammarState\n  } = codeToTokens(internal, input, options);\n  const {\n    mergeWhitespaces = true,\n    mergeSameStyleTokens = false\n  } = options;\n  if (mergeWhitespaces === true)\n    tokens = mergeWhitespaceTokens(tokens);\n  else if (mergeWhitespaces === \"never\")\n    tokens = splitWhitespaceTokens(tokens);\n  if (mergeSameStyleTokens) {\n    tokens = mergeAdjacentStyledTokens(tokens);\n  }\n  const contextSource = {\n    ...transformerContext,\n    get source() {\n      return input;\n    }\n  };\n  for (const transformer of getTransformers(options))\n    tokens = transformer.tokens?.call(contextSource, tokens) || tokens;\n  return tokensToHast(\n    tokens,\n    {\n      ...options,\n      fg,\n      bg,\n      themeName,\n      rootStyle\n    },\n    contextSource,\n    grammarState\n  );\n}\nfunction tokensToHast(tokens, options, transformerContext, grammarState = getLastGrammarStateFromMap(tokens)) {\n  const transformers = getTransformers(options);\n  const lines = [];\n  const root = {\n    type: \"root\",\n    children: []\n  };\n  const {\n    structure = \"classic\",\n    tabindex = \"0\"\n  } = options;\n  let preNode = {\n    type: \"element\",\n    tagName: \"pre\",\n    properties: {\n      class: `shiki ${options.themeName || \"\"}`,\n      style: options.rootStyle || `background-color:${options.bg};color:${options.fg}`,\n      ...tabindex !== false && tabindex != null ? {\n        tabindex: tabindex.toString()\n      } : {},\n      ...Object.fromEntries(\n        Array.from(\n          Object.entries(options.meta || {})\n        ).filter(([key]) => !key.startsWith(\"_\"))\n      )\n    },\n    children: []\n  };\n  let codeNode = {\n    type: \"element\",\n    tagName: \"code\",\n    properties: {},\n    children: lines\n  };\n  const lineNodes = [];\n  const context = {\n    ...transformerContext,\n    structure,\n    addClassToHast,\n    get source() {\n      return transformerContext.source;\n    },\n    get tokens() {\n      return tokens;\n    },\n    get options() {\n      return options;\n    },\n    get root() {\n      return root;\n    },\n    get pre() {\n      return preNode;\n    },\n    get code() {\n      return codeNode;\n    },\n    get lines() {\n      return lineNodes;\n    }\n  };\n  tokens.forEach((line, idx) => {\n    if (idx) {\n      if (structure === \"inline\")\n        root.children.push({ type: \"element\", tagName: \"br\", properties: {}, children: [] });\n      else if (structure === \"classic\")\n        lines.push({ type: \"text\", value: \"\\n\" });\n    }\n    let lineNode = {\n      type: \"element\",\n      tagName: \"span\",\n      properties: { class: \"line\" },\n      children: []\n    };\n    let col = 0;\n    for (const token of line) {\n      let tokenNode = {\n        type: \"element\",\n        tagName: \"span\",\n        properties: {\n          ...token.htmlAttrs\n        },\n        children: [{ type: \"text\", value: token.content }]\n      };\n      const style = stringifyTokenStyle(token.htmlStyle || getTokenStyleObject(token));\n      if (style)\n        tokenNode.properties.style = style;\n      for (const transformer of transformers)\n        tokenNode = transformer?.span?.call(context, tokenNode, idx + 1, col, lineNode, token) || tokenNode;\n      if (structure === \"inline\")\n        root.children.push(tokenNode);\n      else if (structure === \"classic\")\n        lineNode.children.push(tokenNode);\n      col += token.content.length;\n    }\n    if (structure === \"classic\") {\n      for (const transformer of transformers)\n        lineNode = transformer?.line?.call(context, lineNode, idx + 1) || lineNode;\n      lineNodes.push(lineNode);\n      lines.push(lineNode);\n    }\n  });\n  if (structure === \"classic\") {\n    for (const transformer of transformers)\n      codeNode = transformer?.code?.call(context, codeNode) || codeNode;\n    preNode.children.push(codeNode);\n    for (const transformer of transformers)\n      preNode = transformer?.pre?.call(context, preNode) || preNode;\n    root.children.push(preNode);\n  }\n  let result = root;\n  for (const transformer of transformers)\n    result = transformer?.root?.call(context, result) || result;\n  if (grammarState)\n    setLastGrammarStateToMap(result, grammarState);\n  return result;\n}\nfunction mergeWhitespaceTokens(tokens) {\n  return tokens.map((line) => {\n    const newLine = [];\n    let carryOnContent = \"\";\n    let firstOffset = 0;\n    line.forEach((token, idx) => {\n      const isDecorated = token.fontStyle && (token.fontStyle & FontStyle.Underline || token.fontStyle & FontStyle.Strikethrough);\n      const couldMerge = !isDecorated;\n      if (couldMerge && token.content.match(/^\\s+$/) && line[idx + 1]) {\n        if (!firstOffset)\n          firstOffset = token.offset;\n        carryOnContent += token.content;\n      } else {\n        if (carryOnContent) {\n          if (couldMerge) {\n            newLine.push({\n              ...token,\n              offset: firstOffset,\n              content: carryOnContent + token.content\n            });\n          } else {\n            newLine.push(\n              {\n                content: carryOnContent,\n                offset: firstOffset\n              },\n              token\n            );\n          }\n          firstOffset = 0;\n          carryOnContent = \"\";\n        } else {\n          newLine.push(token);\n        }\n      }\n    });\n    return newLine;\n  });\n}\nfunction splitWhitespaceTokens(tokens) {\n  return tokens.map((line) => {\n    return line.flatMap((token) => {\n      if (token.content.match(/^\\s+$/))\n        return token;\n      const match = token.content.match(/^(\\s*)(.*?)(\\s*)$/);\n      if (!match)\n        return token;\n      const [, leading, content, trailing] = match;\n      if (!leading && !trailing)\n        return token;\n      const expanded = [{\n        ...token,\n        offset: token.offset + leading.length,\n        content\n      }];\n      if (leading) {\n        expanded.unshift({\n          content: leading,\n          offset: token.offset\n        });\n      }\n      if (trailing) {\n        expanded.push({\n          content: trailing,\n          offset: token.offset + leading.length + content.length\n        });\n      }\n      return expanded;\n    });\n  });\n}\nfunction mergeAdjacentStyledTokens(tokens) {\n  return tokens.map((line) => {\n    const newLine = [];\n    for (const token of line) {\n      if (newLine.length === 0) {\n        newLine.push({ ...token });\n        continue;\n      }\n      const prevToken = newLine[newLine.length - 1];\n      const prevStyle = stringifyTokenStyle(prevToken.htmlStyle || getTokenStyleObject(prevToken));\n      const currentStyle = stringifyTokenStyle(token.htmlStyle || getTokenStyleObject(token));\n      const isPrevDecorated = prevToken.fontStyle && (prevToken.fontStyle & FontStyle.Underline || prevToken.fontStyle & FontStyle.Strikethrough);\n      const isDecorated = token.fontStyle && (token.fontStyle & FontStyle.Underline || token.fontStyle & FontStyle.Strikethrough);\n      if (!isPrevDecorated && !isDecorated && prevStyle === currentStyle) {\n        prevToken.content += token.content;\n      } else {\n        newLine.push({ ...token });\n      }\n    }\n    return newLine;\n  });\n}\n\nconst hastToHtml = toHtml;\nfunction codeToHtml(internal, code, options) {\n  const context = {\n    meta: {},\n    options,\n    codeToHast: (_code, _options) => codeToHast(internal, _code, _options),\n    codeToTokens: (_code, _options) => codeToTokens(internal, _code, _options)\n  };\n  let result = hastToHtml(codeToHast(internal, code, options, context));\n  for (const transformer of getTransformers(options))\n    result = transformer.postprocess?.call(context, result, options) || result;\n  return result;\n}\n\nconst VSCODE_FALLBACK_EDITOR_FG = { light: \"#333333\", dark: \"#bbbbbb\" };\nconst VSCODE_FALLBACK_EDITOR_BG = { light: \"#fffffe\", dark: \"#1e1e1e\" };\nconst RESOLVED_KEY = \"__shiki_resolved\";\nfunction normalizeTheme(rawTheme) {\n  if (rawTheme?.[RESOLVED_KEY])\n    return rawTheme;\n  const theme = {\n    ...rawTheme\n  };\n  if (theme.tokenColors && !theme.settings) {\n    theme.settings = theme.tokenColors;\n    delete theme.tokenColors;\n  }\n  theme.type ||= \"dark\";\n  theme.colorReplacements = { ...theme.colorReplacements };\n  theme.settings ||= [];\n  let { bg, fg } = theme;\n  if (!bg || !fg) {\n    const globalSetting = theme.settings ? theme.settings.find((s) => !s.name && !s.scope) : void 0;\n    if (globalSetting?.settings?.foreground)\n      fg = globalSetting.settings.foreground;\n    if (globalSetting?.settings?.background)\n      bg = globalSetting.settings.background;\n    if (!fg && theme?.colors?.[\"editor.foreground\"])\n      fg = theme.colors[\"editor.foreground\"];\n    if (!bg && theme?.colors?.[\"editor.background\"])\n      bg = theme.colors[\"editor.background\"];\n    if (!fg)\n      fg = theme.type === \"light\" ? VSCODE_FALLBACK_EDITOR_FG.light : VSCODE_FALLBACK_EDITOR_FG.dark;\n    if (!bg)\n      bg = theme.type === \"light\" ? VSCODE_FALLBACK_EDITOR_BG.light : VSCODE_FALLBACK_EDITOR_BG.dark;\n    theme.fg = fg;\n    theme.bg = bg;\n  }\n  if (!(theme.settings[0] && theme.settings[0].settings && !theme.settings[0].scope)) {\n    theme.settings.unshift({\n      settings: {\n        foreground: theme.fg,\n        background: theme.bg\n      }\n    });\n  }\n  let replacementCount = 0;\n  const replacementMap = /* @__PURE__ */ new Map();\n  function getReplacementColor(value) {\n    if (replacementMap.has(value))\n      return replacementMap.get(value);\n    replacementCount += 1;\n    const hex = `#${replacementCount.toString(16).padStart(8, \"0\").toLowerCase()}`;\n    if (theme.colorReplacements?.[`#${hex}`])\n      return getReplacementColor(value);\n    replacementMap.set(value, hex);\n    return hex;\n  }\n  theme.settings = theme.settings.map((setting) => {\n    const replaceFg = setting.settings?.foreground && !setting.settings.foreground.startsWith(\"#\");\n    const replaceBg = setting.settings?.background && !setting.settings.background.startsWith(\"#\");\n    if (!replaceFg && !replaceBg)\n      return setting;\n    const clone = {\n      ...setting,\n      settings: {\n        ...setting.settings\n      }\n    };\n    if (replaceFg) {\n      const replacement = getReplacementColor(setting.settings.foreground);\n      theme.colorReplacements[replacement] = setting.settings.foreground;\n      clone.settings.foreground = replacement;\n    }\n    if (replaceBg) {\n      const replacement = getReplacementColor(setting.settings.background);\n      theme.colorReplacements[replacement] = setting.settings.background;\n      clone.settings.background = replacement;\n    }\n    return clone;\n  });\n  for (const key of Object.keys(theme.colors || {})) {\n    if (key === \"editor.foreground\" || key === \"editor.background\" || key.startsWith(\"terminal.ansi\")) {\n      if (!theme.colors[key]?.startsWith(\"#\")) {\n        const replacement = getReplacementColor(theme.colors[key]);\n        theme.colorReplacements[replacement] = theme.colors[key];\n        theme.colors[key] = replacement;\n      }\n    }\n  }\n  Object.defineProperty(theme, RESOLVED_KEY, {\n    enumerable: false,\n    writable: false,\n    value: true\n  });\n  return theme;\n}\n\nasync function resolveLangs(langs) {\n  return Array.from(new Set((await Promise.all(\n    langs.filter((l) => !isSpecialLang(l)).map(async (lang) => await normalizeGetter(lang).then((r) => Array.isArray(r) ? r : [r]))\n  )).flat()));\n}\nasync function resolveThemes(themes) {\n  const resolved = await Promise.all(\n    themes.map(\n      async (theme) => isSpecialTheme(theme) ? null : normalizeTheme(await normalizeGetter(theme))\n    )\n  );\n  return resolved.filter((i) => !!i);\n}\n\nlet _emitDeprecation = 3;\nlet _emitError = false;\nfunction enableDeprecationWarnings(emitDeprecation = true, emitError = false) {\n  _emitDeprecation = emitDeprecation;\n  _emitError = emitError;\n}\nfunction warnDeprecated(message, version = 3) {\n  if (!_emitDeprecation)\n    return;\n  if (typeof _emitDeprecation === \"number\" && version > _emitDeprecation)\n    return;\n  if (_emitError) {\n    throw new Error(`[SHIKI DEPRECATE]: ${message}`);\n  } else {\n    console.trace(`[SHIKI DEPRECATE]: ${message}`);\n  }\n}\n\nclass ShikiError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"ShikiError\";\n  }\n}\n\nclass Registry extends Registry$1 {\n  constructor(_resolver, _themes, _langs, _alias = {}) {\n    super(_resolver);\n    this._resolver = _resolver;\n    this._themes = _themes;\n    this._langs = _langs;\n    this._alias = _alias;\n    this._themes.map((t) => this.loadTheme(t));\n    this.loadLanguages(this._langs);\n  }\n  _resolvedThemes = /* @__PURE__ */ new Map();\n  _resolvedGrammars = /* @__PURE__ */ new Map();\n  _langMap = /* @__PURE__ */ new Map();\n  _langGraph = /* @__PURE__ */ new Map();\n  _textmateThemeCache = /* @__PURE__ */ new WeakMap();\n  _loadedThemesCache = null;\n  _loadedLanguagesCache = null;\n  getTheme(theme) {\n    if (typeof theme === \"string\")\n      return this._resolvedThemes.get(theme);\n    else\n      return this.loadTheme(theme);\n  }\n  loadTheme(theme) {\n    const _theme = normalizeTheme(theme);\n    if (_theme.name) {\n      this._resolvedThemes.set(_theme.name, _theme);\n      this._loadedThemesCache = null;\n    }\n    return _theme;\n  }\n  getLoadedThemes() {\n    if (!this._loadedThemesCache)\n      this._loadedThemesCache = [...this._resolvedThemes.keys()];\n    return this._loadedThemesCache;\n  }\n  // Override and re-implement this method to cache the textmate themes as `TextMateTheme.createFromRawTheme`\n  // is expensive. Themes can switch often especially for dual-theme support.\n  //\n  // The parent class also accepts `colorMap` as the second parameter, but since we don't use that,\n  // we omit here so it's easier to cache the themes.\n  setTheme(theme) {\n    let textmateTheme = this._textmateThemeCache.get(theme);\n    if (!textmateTheme) {\n      textmateTheme = Theme.createFromRawTheme(theme);\n      this._textmateThemeCache.set(theme, textmateTheme);\n    }\n    this._syncRegistry.setTheme(textmateTheme);\n  }\n  getGrammar(name) {\n    if (this._alias[name]) {\n      const resolved = /* @__PURE__ */ new Set([name]);\n      while (this._alias[name]) {\n        name = this._alias[name];\n        if (resolved.has(name))\n          throw new ShikiError(`Circular alias \\`${Array.from(resolved).join(\" -> \")} -> ${name}\\``);\n        resolved.add(name);\n      }\n    }\n    return this._resolvedGrammars.get(name);\n  }\n  loadLanguage(lang) {\n    if (this.getGrammar(lang.name))\n      return;\n    const embeddedLazilyBy = new Set(\n      [...this._langMap.values()].filter((i) => i.embeddedLangsLazy?.includes(lang.name))\n    );\n    this._resolver.addLanguage(lang);\n    const grammarConfig = {\n      balancedBracketSelectors: lang.balancedBracketSelectors || [\"*\"],\n      unbalancedBracketSelectors: lang.unbalancedBracketSelectors || []\n    };\n    this._syncRegistry._rawGrammars.set(lang.scopeName, lang);\n    const g = this.loadGrammarWithConfiguration(lang.scopeName, 1, grammarConfig);\n    g.name = lang.name;\n    this._resolvedGrammars.set(lang.name, g);\n    if (lang.aliases) {\n      lang.aliases.forEach((alias) => {\n        this._alias[alias] = lang.name;\n      });\n    }\n    this._loadedLanguagesCache = null;\n    if (embeddedLazilyBy.size) {\n      for (const e of embeddedLazilyBy) {\n        this._resolvedGrammars.delete(e.name);\n        this._loadedLanguagesCache = null;\n        this._syncRegistry?._injectionGrammars?.delete(e.scopeName);\n        this._syncRegistry?._grammars?.delete(e.scopeName);\n        this.loadLanguage(this._langMap.get(e.name));\n      }\n    }\n  }\n  dispose() {\n    super.dispose();\n    this._resolvedThemes.clear();\n    this._resolvedGrammars.clear();\n    this._langMap.clear();\n    this._langGraph.clear();\n    this._loadedThemesCache = null;\n  }\n  loadLanguages(langs) {\n    for (const lang of langs)\n      this.resolveEmbeddedLanguages(lang);\n    const langsGraphArray = Array.from(this._langGraph.entries());\n    const missingLangs = langsGraphArray.filter(([_, lang]) => !lang);\n    if (missingLangs.length) {\n      const dependents = langsGraphArray.filter(([_, lang]) => lang && lang.embeddedLangs?.some((l) => missingLangs.map(([name]) => name).includes(l))).filter((lang) => !missingLangs.includes(lang));\n      throw new ShikiError(`Missing languages ${missingLangs.map(([name]) => `\\`${name}\\``).join(\", \")}, required by ${dependents.map(([name]) => `\\`${name}\\``).join(\", \")}`);\n    }\n    for (const [_, lang] of langsGraphArray)\n      this._resolver.addLanguage(lang);\n    for (const [_, lang] of langsGraphArray)\n      this.loadLanguage(lang);\n  }\n  getLoadedLanguages() {\n    if (!this._loadedLanguagesCache) {\n      this._loadedLanguagesCache = [\n        .../* @__PURE__ */ new Set([...this._resolvedGrammars.keys(), ...Object.keys(this._alias)])\n      ];\n    }\n    return this._loadedLanguagesCache;\n  }\n  resolveEmbeddedLanguages(lang) {\n    this._langMap.set(lang.name, lang);\n    this._langGraph.set(lang.name, lang);\n    if (lang.embeddedLangs) {\n      for (const embeddedLang of lang.embeddedLangs)\n        this._langGraph.set(embeddedLang, this._langMap.get(embeddedLang));\n    }\n  }\n}\n\nclass Resolver {\n  _langs = /* @__PURE__ */ new Map();\n  _scopeToLang = /* @__PURE__ */ new Map();\n  _injections = /* @__PURE__ */ new Map();\n  _onigLib;\n  constructor(engine, langs) {\n    this._onigLib = {\n      createOnigScanner: (patterns) => engine.createScanner(patterns),\n      createOnigString: (s) => engine.createString(s)\n    };\n    langs.forEach((i) => this.addLanguage(i));\n  }\n  get onigLib() {\n    return this._onigLib;\n  }\n  getLangRegistration(langIdOrAlias) {\n    return this._langs.get(langIdOrAlias);\n  }\n  loadGrammar(scopeName) {\n    return this._scopeToLang.get(scopeName);\n  }\n  addLanguage(l) {\n    this._langs.set(l.name, l);\n    if (l.aliases) {\n      l.aliases.forEach((a) => {\n        this._langs.set(a, l);\n      });\n    }\n    this._scopeToLang.set(l.scopeName, l);\n    if (l.injectTo) {\n      l.injectTo.forEach((i) => {\n        if (!this._injections.get(i))\n          this._injections.set(i, []);\n        this._injections.get(i).push(l.scopeName);\n      });\n    }\n  }\n  getInjections(scopeName) {\n    const scopeParts = scopeName.split(\".\");\n    let injections = [];\n    for (let i = 1; i <= scopeParts.length; i++) {\n      const subScopeName = scopeParts.slice(0, i).join(\".\");\n      injections = [...injections, ...this._injections.get(subScopeName) || []];\n    }\n    return injections;\n  }\n}\n\nlet instancesCount = 0;\nfunction createShikiInternalSync(options) {\n  instancesCount += 1;\n  if (options.warnings !== false && instancesCount >= 10 && instancesCount % 10 === 0)\n    console.warn(`[Shiki] ${instancesCount} instances have been created. Shiki is supposed to be used as a singleton, consider refactoring your code to cache your highlighter instance; Or call \\`highlighter.dispose()\\` to release unused instances.`);\n  let isDisposed = false;\n  if (!options.engine)\n    throw new ShikiError(\"`engine` option is required for synchronous mode\");\n  const langs = (options.langs || []).flat(1);\n  const themes = (options.themes || []).flat(1).map(normalizeTheme);\n  const resolver = new Resolver(options.engine, langs);\n  const _registry = new Registry(resolver, themes, langs, options.langAlias);\n  let _lastTheme;\n  function getLanguage(name) {\n    ensureNotDisposed();\n    const _lang = _registry.getGrammar(typeof name === \"string\" ? name : name.name);\n    if (!_lang)\n      throw new ShikiError(`Language \\`${name}\\` not found, you may need to load it first`);\n    return _lang;\n  }\n  function getTheme(name) {\n    if (name === \"none\")\n      return { bg: \"\", fg: \"\", name: \"none\", settings: [], type: \"dark\" };\n    ensureNotDisposed();\n    const _theme = _registry.getTheme(name);\n    if (!_theme)\n      throw new ShikiError(`Theme \\`${name}\\` not found, you may need to load it first`);\n    return _theme;\n  }\n  function setTheme(name) {\n    ensureNotDisposed();\n    const theme = getTheme(name);\n    if (_lastTheme !== name) {\n      _registry.setTheme(theme);\n      _lastTheme = name;\n    }\n    const colorMap = _registry.getColorMap();\n    return {\n      theme,\n      colorMap\n    };\n  }\n  function getLoadedThemes() {\n    ensureNotDisposed();\n    return _registry.getLoadedThemes();\n  }\n  function getLoadedLanguages() {\n    ensureNotDisposed();\n    return _registry.getLoadedLanguages();\n  }\n  function loadLanguageSync(...langs2) {\n    ensureNotDisposed();\n    _registry.loadLanguages(langs2.flat(1));\n  }\n  async function loadLanguage(...langs2) {\n    return loadLanguageSync(await resolveLangs(langs2));\n  }\n  function loadThemeSync(...themes2) {\n    ensureNotDisposed();\n    for (const theme of themes2.flat(1)) {\n      _registry.loadTheme(theme);\n    }\n  }\n  async function loadTheme(...themes2) {\n    ensureNotDisposed();\n    return loadThemeSync(await resolveThemes(themes2));\n  }\n  function ensureNotDisposed() {\n    if (isDisposed)\n      throw new ShikiError(\"Shiki instance has been disposed\");\n  }\n  function dispose() {\n    if (isDisposed)\n      return;\n    isDisposed = true;\n    _registry.dispose();\n    instancesCount -= 1;\n  }\n  return {\n    setTheme,\n    getTheme,\n    getLanguage,\n    getLoadedThemes,\n    getLoadedLanguages,\n    loadLanguage,\n    loadLanguageSync,\n    loadTheme,\n    loadThemeSync,\n    dispose,\n    [Symbol.dispose]: dispose\n  };\n}\n\nasync function createShikiInternal(options) {\n  if (!options.engine) {\n    warnDeprecated(\"`engine` option is required. Use `createOnigurumaEngine` or `createJavaScriptRegexEngine` to create an engine.\");\n  }\n  const [\n    themes,\n    langs,\n    engine\n  ] = await Promise.all([\n    resolveThemes(options.themes || []),\n    resolveLangs(options.langs || []),\n    options.engine\n  ]);\n  return createShikiInternalSync({\n    ...options,\n    themes,\n    langs,\n    engine\n  });\n}\n\nasync function createHighlighterCore(options) {\n  const internal = await createShikiInternal(options);\n  return {\n    getLastGrammarState: (...args) => getLastGrammarState(internal, ...args),\n    codeToTokensBase: (code, options2) => codeToTokensBase(internal, code, options2),\n    codeToTokensWithThemes: (code, options2) => codeToTokensWithThemes(internal, code, options2),\n    codeToTokens: (code, options2) => codeToTokens(internal, code, options2),\n    codeToHast: (code, options2) => codeToHast(internal, code, options2),\n    codeToHtml: (code, options2) => codeToHtml(internal, code, options2),\n    getBundledLanguages: () => ({}),\n    getBundledThemes: () => ({}),\n    ...internal,\n    getInternalContext: () => internal\n  };\n}\nfunction createHighlighterCoreSync(options) {\n  const internal = createShikiInternalSync(options);\n  return {\n    getLastGrammarState: (...args) => getLastGrammarState(internal, ...args),\n    codeToTokensBase: (code, options2) => codeToTokensBase(internal, code, options2),\n    codeToTokensWithThemes: (code, options2) => codeToTokensWithThemes(internal, code, options2),\n    codeToTokens: (code, options2) => codeToTokens(internal, code, options2),\n    codeToHast: (code, options2) => codeToHast(internal, code, options2),\n    codeToHtml: (code, options2) => codeToHtml(internal, code, options2),\n    getBundledLanguages: () => ({}),\n    getBundledThemes: () => ({}),\n    ...internal,\n    getInternalContext: () => internal\n  };\n}\nfunction makeSingletonHighlighterCore(createHighlighter) {\n  let _shiki;\n  async function getSingletonHighlighterCore2(options) {\n    if (!_shiki) {\n      _shiki = createHighlighter({\n        ...options,\n        themes: options.themes || [],\n        langs: options.langs || []\n      });\n      return _shiki;\n    } else {\n      const s = await _shiki;\n      await Promise.all([\n        s.loadTheme(...options.themes || []),\n        s.loadLanguage(...options.langs || [])\n      ]);\n      return s;\n    }\n  }\n  return getSingletonHighlighterCore2;\n}\nconst getSingletonHighlighterCore = /* @__PURE__ */ makeSingletonHighlighterCore(createHighlighterCore);\n\nfunction createdBundledHighlighter(options) {\n  const bundledLanguages = options.langs;\n  const bundledThemes = options.themes;\n  const engine = options.engine;\n  async function createHighlighter(options2) {\n    function resolveLang(lang) {\n      if (typeof lang === \"string\") {\n        if (isSpecialLang(lang))\n          return [];\n        const bundle = bundledLanguages[lang];\n        if (!bundle)\n          throw new ShikiError$1(`Language \\`${lang}\\` is not included in this bundle. You may want to load it from external source.`);\n        return bundle;\n      }\n      return lang;\n    }\n    function resolveTheme(theme) {\n      if (isSpecialTheme(theme))\n        return \"none\";\n      if (typeof theme === \"string\") {\n        const bundle = bundledThemes[theme];\n        if (!bundle)\n          throw new ShikiError$1(`Theme \\`${theme}\\` is not included in this bundle. You may want to load it from external source.`);\n        return bundle;\n      }\n      return theme;\n    }\n    const _themes = (options2.themes ?? []).map((i) => resolveTheme(i));\n    const langs = (options2.langs ?? []).map((i) => resolveLang(i));\n    const core = await createHighlighterCore({\n      engine: options2.engine ?? engine(),\n      ...options2,\n      themes: _themes,\n      langs\n    });\n    return {\n      ...core,\n      loadLanguage(...langs2) {\n        return core.loadLanguage(...langs2.map(resolveLang));\n      },\n      loadTheme(...themes) {\n        return core.loadTheme(...themes.map(resolveTheme));\n      },\n      getBundledLanguages() {\n        return bundledLanguages;\n      },\n      getBundledThemes() {\n        return bundledThemes;\n      }\n    };\n  }\n  return createHighlighter;\n}\nfunction makeSingletonHighlighter(createHighlighter) {\n  let _shiki;\n  async function getSingletonHighlighter(options = {}) {\n    if (!_shiki) {\n      _shiki = createHighlighter({\n        ...options,\n        themes: options.themes || [],\n        langs: options.langs || []\n      });\n      return _shiki;\n    } else {\n      const s = await _shiki;\n      await Promise.all([\n        s.loadTheme(...options.themes || []),\n        s.loadLanguage(...options.langs || [])\n      ]);\n      return s;\n    }\n  }\n  return getSingletonHighlighter;\n}\nfunction createSingletonShorthands(createHighlighter, config) {\n  const getSingletonHighlighter = makeSingletonHighlighter(createHighlighter);\n  async function get(code, options) {\n    const shiki = await getSingletonHighlighter({\n      langs: [options.lang],\n      themes: \"theme\" in options ? [options.theme] : Object.values(options.themes)\n    });\n    const langs = await config?.guessEmbeddedLanguages?.(code, options.lang, shiki);\n    if (langs) {\n      await shiki.loadLanguage(...langs);\n    }\n    return shiki;\n  }\n  return {\n    getSingletonHighlighter(options) {\n      return getSingletonHighlighter(options);\n    },\n    async codeToHtml(code, options) {\n      const shiki = await get(code, options);\n      return shiki.codeToHtml(code, options);\n    },\n    async codeToHast(code, options) {\n      const shiki = await get(code, options);\n      return shiki.codeToHast(code, options);\n    },\n    async codeToTokens(code, options) {\n      const shiki = await get(code, options);\n      return shiki.codeToTokens(code, options);\n    },\n    async codeToTokensBase(code, options) {\n      const shiki = await get(code, options);\n      return shiki.codeToTokensBase(code, options);\n    },\n    async codeToTokensWithThemes(code, options) {\n      const shiki = await get(code, options);\n      return shiki.codeToTokensWithThemes(code, options);\n    },\n    async getLastGrammarState(code, options) {\n      const shiki = await getSingletonHighlighter({\n        langs: [options.lang],\n        themes: [options.theme]\n      });\n      return shiki.getLastGrammarState(code, options);\n    }\n  };\n}\n\nfunction createCssVariablesTheme(options = {}) {\n  const {\n    name = \"css-variables\",\n    variablePrefix = \"--shiki-\",\n    fontStyle = true\n  } = options;\n  const variable = (name2) => {\n    if (options.variableDefaults?.[name2])\n      return `var(${variablePrefix}${name2}, ${options.variableDefaults[name2]})`;\n    return `var(${variablePrefix}${name2})`;\n  };\n  const theme = {\n    name,\n    type: \"dark\",\n    colors: {\n      \"editor.foreground\": variable(\"foreground\"),\n      \"editor.background\": variable(\"background\"),\n      \"terminal.ansiBlack\": variable(\"ansi-black\"),\n      \"terminal.ansiRed\": variable(\"ansi-red\"),\n      \"terminal.ansiGreen\": variable(\"ansi-green\"),\n      \"terminal.ansiYellow\": variable(\"ansi-yellow\"),\n      \"terminal.ansiBlue\": variable(\"ansi-blue\"),\n      \"terminal.ansiMagenta\": variable(\"ansi-magenta\"),\n      \"terminal.ansiCyan\": variable(\"ansi-cyan\"),\n      \"terminal.ansiWhite\": variable(\"ansi-white\"),\n      \"terminal.ansiBrightBlack\": variable(\"ansi-bright-black\"),\n      \"terminal.ansiBrightRed\": variable(\"ansi-bright-red\"),\n      \"terminal.ansiBrightGreen\": variable(\"ansi-bright-green\"),\n      \"terminal.ansiBrightYellow\": variable(\"ansi-bright-yellow\"),\n      \"terminal.ansiBrightBlue\": variable(\"ansi-bright-blue\"),\n      \"terminal.ansiBrightMagenta\": variable(\"ansi-bright-magenta\"),\n      \"terminal.ansiBrightCyan\": variable(\"ansi-bright-cyan\"),\n      \"terminal.ansiBrightWhite\": variable(\"ansi-bright-white\")\n    },\n    tokenColors: [\n      {\n        scope: [\n          \"keyword.operator.accessor\",\n          \"meta.group.braces.round.function.arguments\",\n          \"meta.template.expression\",\n          \"markup.fenced_code meta.embedded.block\"\n        ],\n        settings: {\n          foreground: variable(\"foreground\")\n        }\n      },\n      {\n        scope: \"emphasis\",\n        settings: {\n          fontStyle: \"italic\"\n        }\n      },\n      {\n        scope: [\"strong\", \"markup.heading.markdown\", \"markup.bold.markdown\"],\n        settings: {\n          fontStyle: \"bold\"\n        }\n      },\n      {\n        scope: [\"markup.italic.markdown\"],\n        settings: {\n          fontStyle: \"italic\"\n        }\n      },\n      {\n        scope: \"meta.link.inline.markdown\",\n        settings: {\n          fontStyle: \"underline\",\n          foreground: variable(\"token-link\")\n        }\n      },\n      {\n        scope: [\"string\", \"markup.fenced_code\", \"markup.inline\"],\n        settings: {\n          foreground: variable(\"token-string\")\n        }\n      },\n      {\n        scope: [\"comment\", \"string.quoted.docstring.multi\"],\n        settings: {\n          foreground: variable(\"token-comment\")\n        }\n      },\n      {\n        scope: [\n          \"constant.numeric\",\n          \"constant.language\",\n          \"constant.other.placeholder\",\n          \"constant.character.format.placeholder\",\n          \"variable.language.this\",\n          \"variable.other.object\",\n          \"variable.other.class\",\n          \"variable.other.constant\",\n          \"meta.property-name\",\n          \"meta.property-value\",\n          \"support\"\n        ],\n        settings: {\n          foreground: variable(\"token-constant\")\n        }\n      },\n      {\n        scope: [\n          \"keyword\",\n          \"storage.modifier\",\n          \"storage.type\",\n          \"storage.control.clojure\",\n          \"entity.name.function.clojure\",\n          \"entity.name.tag.yaml\",\n          \"support.function.node\",\n          \"support.type.property-name.json\",\n          \"punctuation.separator.key-value\",\n          \"punctuation.definition.template-expression\"\n        ],\n        settings: {\n          foreground: variable(\"token-keyword\")\n        }\n      },\n      {\n        scope: \"variable.parameter.function\",\n        settings: {\n          foreground: variable(\"token-parameter\")\n        }\n      },\n      {\n        scope: [\n          \"support.function\",\n          \"entity.name.type\",\n          \"entity.other.inherited-class\",\n          \"meta.function-call\",\n          \"meta.instance.constructor\",\n          \"entity.other.attribute-name\",\n          \"entity.name.function\",\n          \"constant.keyword.clojure\"\n        ],\n        settings: {\n          foreground: variable(\"token-function\")\n        }\n      },\n      {\n        scope: [\n          \"entity.name.tag\",\n          \"string.quoted\",\n          \"string.regexp\",\n          \"string.interpolated\",\n          \"string.template\",\n          \"string.unquoted.plain.out.yaml\",\n          \"keyword.other.template\"\n        ],\n        settings: {\n          foreground: variable(\"token-string-expression\")\n        }\n      },\n      {\n        scope: [\n          \"punctuation.definition.arguments\",\n          \"punctuation.definition.dict\",\n          \"punctuation.separator\",\n          \"meta.function-call.arguments\"\n        ],\n        settings: {\n          foreground: variable(\"token-punctuation\")\n        }\n      },\n      {\n        // [Custom] Markdown links\n        scope: [\n          \"markup.underline.link\",\n          \"punctuation.definition.metadata.markdown\"\n        ],\n        settings: {\n          foreground: variable(\"token-link\")\n        }\n      },\n      {\n        // [Custom] Markdown list\n        scope: [\"beginning.punctuation.definition.list.markdown\"],\n        settings: {\n          foreground: variable(\"token-string\")\n        }\n      },\n      {\n        // [Custom] Markdown punctuation definition brackets\n        scope: [\n          \"punctuation.definition.string.begin.markdown\",\n          \"punctuation.definition.string.end.markdown\",\n          \"string.other.link.title.markdown\",\n          \"string.other.link.description.markdown\"\n        ],\n        settings: {\n          foreground: variable(\"token-keyword\")\n        }\n      },\n      {\n        // [Custom] Diff\n        scope: [\n          \"markup.inserted\",\n          \"meta.diff.header.to-file\",\n          \"punctuation.definition.inserted\"\n        ],\n        settings: {\n          foreground: variable(\"token-inserted\")\n        }\n      },\n      {\n        scope: [\n          \"markup.deleted\",\n          \"meta.diff.header.from-file\",\n          \"punctuation.definition.deleted\"\n        ],\n        settings: {\n          foreground: variable(\"token-deleted\")\n        }\n      },\n      {\n        scope: [\n          \"markup.changed\",\n          \"punctuation.definition.changed\"\n        ],\n        settings: {\n          foreground: variable(\"token-changed\")\n        }\n      }\n    ]\n  };\n  if (!fontStyle) {\n    theme.tokenColors = theme.tokenColors?.map((tokenColor) => {\n      if (tokenColor.settings?.fontStyle)\n        delete tokenColor.settings.fontStyle;\n      return tokenColor;\n    });\n  }\n  return theme;\n}\n\nexport { addClassToHast, applyColorReplacements, codeToHast, codeToHtml, codeToTokens, codeToTokensBase, codeToTokensWithThemes, createCssVariablesTheme, createHighlighterCore, createHighlighterCoreSync, createPositionConverter, createShikiInternal, createShikiInternalSync, createSingletonShorthands, createdBundledHighlighter, enableDeprecationWarnings, flatTokenVariants, getSingletonHighlighterCore, getTokenStyleObject, guessEmbeddedLanguages, hastToHtml, isNoneTheme, isPlainLang, isSpecialLang, isSpecialTheme, makeSingletonHighlighter, makeSingletonHighlighterCore, normalizeGetter, normalizeTheme, resolveColorReplacements, splitLines, splitToken, splitTokens, stringifyTokenStyle, toArray, tokenizeAnsiWithTheme, tokenizeWithTheme, tokensToHast, transformerDecorations, warnDeprecated };\n", "const bundledLanguagesInfo = [\n  {\n    \"id\": \"abap\",\n    \"name\": \"ABAP\",\n    \"import\": () => import('@shikijs/langs/abap')\n  },\n  {\n    \"id\": \"actionscript-3\",\n    \"name\": \"ActionScript\",\n    \"import\": () => import('@shikijs/langs/actionscript-3')\n  },\n  {\n    \"id\": \"ada\",\n    \"name\": \"Ada\",\n    \"import\": () => import('@shikijs/langs/ada')\n  },\n  {\n    \"id\": \"angular-html\",\n    \"name\": \"Angular HTML\",\n    \"import\": () => import('@shikijs/langs/angular-html')\n  },\n  {\n    \"id\": \"angular-ts\",\n    \"name\": \"Angular TypeScript\",\n    \"import\": () => import('@shikijs/langs/angular-ts')\n  },\n  {\n    \"id\": \"apache\",\n    \"name\": \"Apache Conf\",\n    \"import\": () => import('@shikijs/langs/apache')\n  },\n  {\n    \"id\": \"apex\",\n    \"name\": \"Apex\",\n    \"import\": () => import('@shikijs/langs/apex')\n  },\n  {\n    \"id\": \"apl\",\n    \"name\": \"APL\",\n    \"import\": () => import('@shikijs/langs/apl')\n  },\n  {\n    \"id\": \"applescript\",\n    \"name\": \"AppleScript\",\n    \"import\": () => import('@shikijs/langs/applescript')\n  },\n  {\n    \"id\": \"ara\",\n    \"name\": \"Ara\",\n    \"import\": () => import('@shikijs/langs/ara')\n  },\n  {\n    \"id\": \"asciidoc\",\n    \"name\": \"AsciiDoc\",\n    \"aliases\": [\n      \"adoc\"\n    ],\n    \"import\": () => import('@shikijs/langs/asciidoc')\n  },\n  {\n    \"id\": \"asm\",\n    \"name\": \"Assembly\",\n    \"import\": () => import('@shikijs/langs/asm')\n  },\n  {\n    \"id\": \"astro\",\n    \"name\": \"Astro\",\n    \"import\": () => import('@shikijs/langs/astro')\n  },\n  {\n    \"id\": \"awk\",\n    \"name\": \"AWK\",\n    \"import\": () => import('@shikijs/langs/awk')\n  },\n  {\n    \"id\": \"ballerina\",\n    \"name\": \"Ballerina\",\n    \"import\": () => import('@shikijs/langs/ballerina')\n  },\n  {\n    \"id\": \"bat\",\n    \"name\": \"Batch File\",\n    \"aliases\": [\n      \"batch\"\n    ],\n    \"import\": () => import('@shikijs/langs/bat')\n  },\n  {\n    \"id\": \"beancount\",\n    \"name\": \"Beancount\",\n    \"import\": () => import('@shikijs/langs/beancount')\n  },\n  {\n    \"id\": \"berry\",\n    \"name\": \"Berry\",\n    \"aliases\": [\n      \"be\"\n    ],\n    \"import\": () => import('@shikijs/langs/berry')\n  },\n  {\n    \"id\": \"bibtex\",\n    \"name\": \"BibTeX\",\n    \"import\": () => import('@shikijs/langs/bibtex')\n  },\n  {\n    \"id\": \"bicep\",\n    \"name\": \"Bicep\",\n    \"import\": () => import('@shikijs/langs/bicep')\n  },\n  {\n    \"id\": \"blade\",\n    \"name\": \"Blade\",\n    \"import\": () => import('@shikijs/langs/blade')\n  },\n  {\n    \"id\": \"bsl\",\n    \"name\": \"1C (Enterprise)\",\n    \"aliases\": [\n      \"1c\"\n    ],\n    \"import\": () => import('@shikijs/langs/bsl')\n  },\n  {\n    \"id\": \"c\",\n    \"name\": \"C\",\n    \"import\": () => import('@shikijs/langs/c')\n  },\n  {\n    \"id\": \"cadence\",\n    \"name\": \"Cadence\",\n    \"aliases\": [\n      \"cdc\"\n    ],\n    \"import\": () => import('@shikijs/langs/cadence')\n  },\n  {\n    \"id\": \"cairo\",\n    \"name\": \"Cairo\",\n    \"import\": () => import('@shikijs/langs/cairo')\n  },\n  {\n    \"id\": \"clarity\",\n    \"name\": \"Clarity\",\n    \"import\": () => import('@shikijs/langs/clarity')\n  },\n  {\n    \"id\": \"clojure\",\n    \"name\": \"Clojure\",\n    \"aliases\": [\n      \"clj\"\n    ],\n    \"import\": () => import('@shikijs/langs/clojure')\n  },\n  {\n    \"id\": \"cmake\",\n    \"name\": \"CMake\",\n    \"import\": () => import('@shikijs/langs/cmake')\n  },\n  {\n    \"id\": \"cobol\",\n    \"name\": \"COBOL\",\n    \"import\": () => import('@shikijs/langs/cobol')\n  },\n  {\n    \"id\": \"codeowners\",\n    \"name\": \"CODEOWNERS\",\n    \"import\": () => import('@shikijs/langs/codeowners')\n  },\n  {\n    \"id\": \"codeql\",\n    \"name\": \"CodeQL\",\n    \"aliases\": [\n      \"ql\"\n    ],\n    \"import\": () => import('@shikijs/langs/codeql')\n  },\n  {\n    \"id\": \"coffee\",\n    \"name\": \"CoffeeScript\",\n    \"aliases\": [\n      \"coffeescript\"\n    ],\n    \"import\": () => import('@shikijs/langs/coffee')\n  },\n  {\n    \"id\": \"common-lisp\",\n    \"name\": \"Common Lisp\",\n    \"aliases\": [\n      \"lisp\"\n    ],\n    \"import\": () => import('@shikijs/langs/common-lisp')\n  },\n  {\n    \"id\": \"coq\",\n    \"name\": \"Coq\",\n    \"import\": () => import('@shikijs/langs/coq')\n  },\n  {\n    \"id\": \"cpp\",\n    \"name\": \"C++\",\n    \"aliases\": [\n      \"c++\"\n    ],\n    \"import\": () => import('@shikijs/langs/cpp')\n  },\n  {\n    \"id\": \"crystal\",\n    \"name\": \"Crystal\",\n    \"import\": () => import('@shikijs/langs/crystal')\n  },\n  {\n    \"id\": \"csharp\",\n    \"name\": \"C#\",\n    \"aliases\": [\n      \"c#\",\n      \"cs\"\n    ],\n    \"import\": () => import('@shikijs/langs/csharp')\n  },\n  {\n    \"id\": \"css\",\n    \"name\": \"CSS\",\n    \"import\": () => import('@shikijs/langs/css')\n  },\n  {\n    \"id\": \"csv\",\n    \"name\": \"CSV\",\n    \"import\": () => import('@shikijs/langs/csv')\n  },\n  {\n    \"id\": \"cue\",\n    \"name\": \"CUE\",\n    \"import\": () => import('@shikijs/langs/cue')\n  },\n  {\n    \"id\": \"cypher\",\n    \"name\": \"Cypher\",\n    \"aliases\": [\n      \"cql\"\n    ],\n    \"import\": () => import('@shikijs/langs/cypher')\n  },\n  {\n    \"id\": \"d\",\n    \"name\": \"D\",\n    \"import\": () => import('@shikijs/langs/d')\n  },\n  {\n    \"id\": \"dart\",\n    \"name\": \"Dart\",\n    \"import\": () => import('@shikijs/langs/dart')\n  },\n  {\n    \"id\": \"dax\",\n    \"name\": \"DAX\",\n    \"import\": () => import('@shikijs/langs/dax')\n  },\n  {\n    \"id\": \"desktop\",\n    \"name\": \"Desktop\",\n    \"import\": () => import('@shikijs/langs/desktop')\n  },\n  {\n    \"id\": \"diff\",\n    \"name\": \"Diff\",\n    \"import\": () => import('@shikijs/langs/diff')\n  },\n  {\n    \"id\": \"docker\",\n    \"name\": \"Dockerfile\",\n    \"aliases\": [\n      \"dockerfile\"\n    ],\n    \"import\": () => import('@shikijs/langs/docker')\n  },\n  {\n    \"id\": \"dotenv\",\n    \"name\": \"dotEnv\",\n    \"import\": () => import('@shikijs/langs/dotenv')\n  },\n  {\n    \"id\": \"dream-maker\",\n    \"name\": \"Dream Maker\",\n    \"import\": () => import('@shikijs/langs/dream-maker')\n  },\n  {\n    \"id\": \"edge\",\n    \"name\": \"Edge\",\n    \"import\": () => import('@shikijs/langs/edge')\n  },\n  {\n    \"id\": \"elixir\",\n    \"name\": \"Elixir\",\n    \"import\": () => import('@shikijs/langs/elixir')\n  },\n  {\n    \"id\": \"elm\",\n    \"name\": \"Elm\",\n    \"import\": () => import('@shikijs/langs/elm')\n  },\n  {\n    \"id\": \"emacs-lisp\",\n    \"name\": \"Emacs Lisp\",\n    \"aliases\": [\n      \"elisp\"\n    ],\n    \"import\": () => import('@shikijs/langs/emacs-lisp')\n  },\n  {\n    \"id\": \"erb\",\n    \"name\": \"ERB\",\n    \"import\": () => import('@shikijs/langs/erb')\n  },\n  {\n    \"id\": \"erlang\",\n    \"name\": \"Erlang\",\n    \"aliases\": [\n      \"erl\"\n    ],\n    \"import\": () => import('@shikijs/langs/erlang')\n  },\n  {\n    \"id\": \"fennel\",\n    \"name\": \"Fennel\",\n    \"import\": () => import('@shikijs/langs/fennel')\n  },\n  {\n    \"id\": \"fish\",\n    \"name\": \"Fish\",\n    \"import\": () => import('@shikijs/langs/fish')\n  },\n  {\n    \"id\": \"fluent\",\n    \"name\": \"Fluent\",\n    \"aliases\": [\n      \"ftl\"\n    ],\n    \"import\": () => import('@shikijs/langs/fluent')\n  },\n  {\n    \"id\": \"fortran-fixed-form\",\n    \"name\": \"Fortran (Fixed Form)\",\n    \"aliases\": [\n      \"f\",\n      \"for\",\n      \"f77\"\n    ],\n    \"import\": () => import('@shikijs/langs/fortran-fixed-form')\n  },\n  {\n    \"id\": \"fortran-free-form\",\n    \"name\": \"Fortran (Free Form)\",\n    \"aliases\": [\n      \"f90\",\n      \"f95\",\n      \"f03\",\n      \"f08\",\n      \"f18\"\n    ],\n    \"import\": () => import('@shikijs/langs/fortran-free-form')\n  },\n  {\n    \"id\": \"fsharp\",\n    \"name\": \"F#\",\n    \"aliases\": [\n      \"f#\",\n      \"fs\"\n    ],\n    \"import\": () => import('@shikijs/langs/fsharp')\n  },\n  {\n    \"id\": \"gdresource\",\n    \"name\": \"GDResource\",\n    \"import\": () => import('@shikijs/langs/gdresource')\n  },\n  {\n    \"id\": \"gdscript\",\n    \"name\": \"GDScript\",\n    \"import\": () => import('@shikijs/langs/gdscript')\n  },\n  {\n    \"id\": \"gdshader\",\n    \"name\": \"GDShader\",\n    \"import\": () => import('@shikijs/langs/gdshader')\n  },\n  {\n    \"id\": \"genie\",\n    \"name\": \"Genie\",\n    \"import\": () => import('@shikijs/langs/genie')\n  },\n  {\n    \"id\": \"gherkin\",\n    \"name\": \"Gherkin\",\n    \"import\": () => import('@shikijs/langs/gherkin')\n  },\n  {\n    \"id\": \"git-commit\",\n    \"name\": \"Git Commit Message\",\n    \"import\": () => import('@shikijs/langs/git-commit')\n  },\n  {\n    \"id\": \"git-rebase\",\n    \"name\": \"Git Rebase Message\",\n    \"import\": () => import('@shikijs/langs/git-rebase')\n  },\n  {\n    \"id\": \"gleam\",\n    \"name\": \"Gleam\",\n    \"import\": () => import('@shikijs/langs/gleam')\n  },\n  {\n    \"id\": \"glimmer-js\",\n    \"name\": \"Glimmer JS\",\n    \"aliases\": [\n      \"gjs\"\n    ],\n    \"import\": () => import('@shikijs/langs/glimmer-js')\n  },\n  {\n    \"id\": \"glimmer-ts\",\n    \"name\": \"Glimmer TS\",\n    \"aliases\": [\n      \"gts\"\n    ],\n    \"import\": () => import('@shikijs/langs/glimmer-ts')\n  },\n  {\n    \"id\": \"glsl\",\n    \"name\": \"GLSL\",\n    \"import\": () => import('@shikijs/langs/glsl')\n  },\n  {\n    \"id\": \"gnuplot\",\n    \"name\": \"Gnuplot\",\n    \"import\": () => import('@shikijs/langs/gnuplot')\n  },\n  {\n    \"id\": \"go\",\n    \"name\": \"Go\",\n    \"import\": () => import('@shikijs/langs/go')\n  },\n  {\n    \"id\": \"graphql\",\n    \"name\": \"GraphQL\",\n    \"aliases\": [\n      \"gql\"\n    ],\n    \"import\": () => import('@shikijs/langs/graphql')\n  },\n  {\n    \"id\": \"groovy\",\n    \"name\": \"Groovy\",\n    \"import\": () => import('@shikijs/langs/groovy')\n  },\n  {\n    \"id\": \"hack\",\n    \"name\": \"Hack\",\n    \"import\": () => import('@shikijs/langs/hack')\n  },\n  {\n    \"id\": \"haml\",\n    \"name\": \"Ruby Haml\",\n    \"import\": () => import('@shikijs/langs/haml')\n  },\n  {\n    \"id\": \"handlebars\",\n    \"name\": \"Handlebars\",\n    \"aliases\": [\n      \"hbs\"\n    ],\n    \"import\": () => import('@shikijs/langs/handlebars')\n  },\n  {\n    \"id\": \"haskell\",\n    \"name\": \"Haskell\",\n    \"aliases\": [\n      \"hs\"\n    ],\n    \"import\": () => import('@shikijs/langs/haskell')\n  },\n  {\n    \"id\": \"haxe\",\n    \"name\": \"Haxe\",\n    \"import\": () => import('@shikijs/langs/haxe')\n  },\n  {\n    \"id\": \"hcl\",\n    \"name\": \"HashiCorp HCL\",\n    \"import\": () => import('@shikijs/langs/hcl')\n  },\n  {\n    \"id\": \"hjson\",\n    \"name\": \"Hjson\",\n    \"import\": () => import('@shikijs/langs/hjson')\n  },\n  {\n    \"id\": \"hlsl\",\n    \"name\": \"HLSL\",\n    \"import\": () => import('@shikijs/langs/hlsl')\n  },\n  {\n    \"id\": \"html\",\n    \"name\": \"HTML\",\n    \"import\": () => import('@shikijs/langs/html')\n  },\n  {\n    \"id\": \"html-derivative\",\n    \"name\": \"HTML (Derivative)\",\n    \"import\": () => import('@shikijs/langs/html-derivative')\n  },\n  {\n    \"id\": \"http\",\n    \"name\": \"HTTP\",\n    \"import\": () => import('@shikijs/langs/http')\n  },\n  {\n    \"id\": \"hxml\",\n    \"name\": \"HXML\",\n    \"import\": () => import('@shikijs/langs/hxml')\n  },\n  {\n    \"id\": \"hy\",\n    \"name\": \"Hy\",\n    \"import\": () => import('@shikijs/langs/hy')\n  },\n  {\n    \"id\": \"imba\",\n    \"name\": \"Imba\",\n    \"import\": () => import('@shikijs/langs/imba')\n  },\n  {\n    \"id\": \"ini\",\n    \"name\": \"INI\",\n    \"aliases\": [\n      \"properties\"\n    ],\n    \"import\": () => import('@shikijs/langs/ini')\n  },\n  {\n    \"id\": \"java\",\n    \"name\": \"Java\",\n    \"import\": () => import('@shikijs/langs/java')\n  },\n  {\n    \"id\": \"javascript\",\n    \"name\": \"JavaScript\",\n    \"aliases\": [\n      \"js\"\n    ],\n    \"import\": () => import('@shikijs/langs/javascript')\n  },\n  {\n    \"id\": \"jinja\",\n    \"name\": \"Jinja\",\n    \"import\": () => import('@shikijs/langs/jinja')\n  },\n  {\n    \"id\": \"jison\",\n    \"name\": \"Jison\",\n    \"import\": () => import('@shikijs/langs/jison')\n  },\n  {\n    \"id\": \"json\",\n    \"name\": \"JSON\",\n    \"import\": () => import('@shikijs/langs/json')\n  },\n  {\n    \"id\": \"json5\",\n    \"name\": \"JSON5\",\n    \"import\": () => import('@shikijs/langs/json5')\n  },\n  {\n    \"id\": \"jsonc\",\n    \"name\": \"JSON with Comments\",\n    \"import\": () => import('@shikijs/langs/jsonc')\n  },\n  {\n    \"id\": \"jsonl\",\n    \"name\": \"JSON Lines\",\n    \"import\": () => import('@shikijs/langs/jsonl')\n  },\n  {\n    \"id\": \"jsonnet\",\n    \"name\": \"Jsonnet\",\n    \"import\": () => import('@shikijs/langs/jsonnet')\n  },\n  {\n    \"id\": \"jssm\",\n    \"name\": \"JSSM\",\n    \"aliases\": [\n      \"fsl\"\n    ],\n    \"import\": () => import('@shikijs/langs/jssm')\n  },\n  {\n    \"id\": \"jsx\",\n    \"name\": \"JSX\",\n    \"import\": () => import('@shikijs/langs/jsx')\n  },\n  {\n    \"id\": \"julia\",\n    \"name\": \"Julia\",\n    \"aliases\": [\n      \"jl\"\n    ],\n    \"import\": () => import('@shikijs/langs/julia')\n  },\n  {\n    \"id\": \"kotlin\",\n    \"name\": \"Kotlin\",\n    \"aliases\": [\n      \"kt\",\n      \"kts\"\n    ],\n    \"import\": () => import('@shikijs/langs/kotlin')\n  },\n  {\n    \"id\": \"kusto\",\n    \"name\": \"Kusto\",\n    \"aliases\": [\n      \"kql\"\n    ],\n    \"import\": () => import('@shikijs/langs/kusto')\n  },\n  {\n    \"id\": \"latex\",\n    \"name\": \"LaTeX\",\n    \"import\": () => import('@shikijs/langs/latex')\n  },\n  {\n    \"id\": \"lean\",\n    \"name\": \"Lean 4\",\n    \"aliases\": [\n      \"lean4\"\n    ],\n    \"import\": () => import('@shikijs/langs/lean')\n  },\n  {\n    \"id\": \"less\",\n    \"name\": \"Less\",\n    \"import\": () => import('@shikijs/langs/less')\n  },\n  {\n    \"id\": \"liquid\",\n    \"name\": \"Liquid\",\n    \"import\": () => import('@shikijs/langs/liquid')\n  },\n  {\n    \"id\": \"llvm\",\n    \"name\": \"LLVM IR\",\n    \"import\": () => import('@shikijs/langs/llvm')\n  },\n  {\n    \"id\": \"log\",\n    \"name\": \"Log file\",\n    \"import\": () => import('@shikijs/langs/log')\n  },\n  {\n    \"id\": \"logo\",\n    \"name\": \"Logo\",\n    \"import\": () => import('@shikijs/langs/logo')\n  },\n  {\n    \"id\": \"lua\",\n    \"name\": \"Lua\",\n    \"import\": () => import('@shikijs/langs/lua')\n  },\n  {\n    \"id\": \"luau\",\n    \"name\": \"Luau\",\n    \"import\": () => import('@shikijs/langs/luau')\n  },\n  {\n    \"id\": \"make\",\n    \"name\": \"Makefile\",\n    \"aliases\": [\n      \"makefile\"\n    ],\n    \"import\": () => import('@shikijs/langs/make')\n  },\n  {\n    \"id\": \"markdown\",\n    \"name\": \"Markdown\",\n    \"aliases\": [\n      \"md\"\n    ],\n    \"import\": () => import('@shikijs/langs/markdown')\n  },\n  {\n    \"id\": \"marko\",\n    \"name\": \"Marko\",\n    \"import\": () => import('@shikijs/langs/marko')\n  },\n  {\n    \"id\": \"matlab\",\n    \"name\": \"MATLAB\",\n    \"import\": () => import('@shikijs/langs/matlab')\n  },\n  {\n    \"id\": \"mdc\",\n    \"name\": \"MDC\",\n    \"import\": () => import('@shikijs/langs/mdc')\n  },\n  {\n    \"id\": \"mdx\",\n    \"name\": \"MDX\",\n    \"import\": () => import('@shikijs/langs/mdx')\n  },\n  {\n    \"id\": \"mermaid\",\n    \"name\": \"Mermaid\",\n    \"aliases\": [\n      \"mmd\"\n    ],\n    \"import\": () => import('@shikijs/langs/mermaid')\n  },\n  {\n    \"id\": \"mipsasm\",\n    \"name\": \"MIPS Assembly\",\n    \"aliases\": [\n      \"mips\"\n    ],\n    \"import\": () => import('@shikijs/langs/mipsasm')\n  },\n  {\n    \"id\": \"mojo\",\n    \"name\": \"Mojo\",\n    \"import\": () => import('@shikijs/langs/mojo')\n  },\n  {\n    \"id\": \"move\",\n    \"name\": \"Move\",\n    \"import\": () => import('@shikijs/langs/move')\n  },\n  {\n    \"id\": \"narrat\",\n    \"name\": \"Narrat Language\",\n    \"aliases\": [\n      \"nar\"\n    ],\n    \"import\": () => import('@shikijs/langs/narrat')\n  },\n  {\n    \"id\": \"nextflow\",\n    \"name\": \"Nextflow\",\n    \"aliases\": [\n      \"nf\"\n    ],\n    \"import\": () => import('@shikijs/langs/nextflow')\n  },\n  {\n    \"id\": \"nginx\",\n    \"name\": \"Nginx\",\n    \"import\": () => import('@shikijs/langs/nginx')\n  },\n  {\n    \"id\": \"nim\",\n    \"name\": \"Nim\",\n    \"import\": () => import('@shikijs/langs/nim')\n  },\n  {\n    \"id\": \"nix\",\n    \"name\": \"Nix\",\n    \"import\": () => import('@shikijs/langs/nix')\n  },\n  {\n    \"id\": \"nushell\",\n    \"name\": \"nushell\",\n    \"aliases\": [\n      \"nu\"\n    ],\n    \"import\": () => import('@shikijs/langs/nushell')\n  },\n  {\n    \"id\": \"objective-c\",\n    \"name\": \"Objective-C\",\n    \"aliases\": [\n      \"objc\"\n    ],\n    \"import\": () => import('@shikijs/langs/objective-c')\n  },\n  {\n    \"id\": \"objective-cpp\",\n    \"name\": \"Objective-C++\",\n    \"import\": () => import('@shikijs/langs/objective-cpp')\n  },\n  {\n    \"id\": \"ocaml\",\n    \"name\": \"OCaml\",\n    \"import\": () => import('@shikijs/langs/ocaml')\n  },\n  {\n    \"id\": \"pascal\",\n    \"name\": \"Pascal\",\n    \"import\": () => import('@shikijs/langs/pascal')\n  },\n  {\n    \"id\": \"perl\",\n    \"name\": \"Perl\",\n    \"import\": () => import('@shikijs/langs/perl')\n  },\n  {\n    \"id\": \"php\",\n    \"name\": \"PHP\",\n    \"import\": () => import('@shikijs/langs/php')\n  },\n  {\n    \"id\": \"plsql\",\n    \"name\": \"PL/SQL\",\n    \"import\": () => import('@shikijs/langs/plsql')\n  },\n  {\n    \"id\": \"po\",\n    \"name\": \"Gettext PO\",\n    \"aliases\": [\n      \"pot\",\n      \"potx\"\n    ],\n    \"import\": () => import('@shikijs/langs/po')\n  },\n  {\n    \"id\": \"polar\",\n    \"name\": \"Polar\",\n    \"import\": () => import('@shikijs/langs/polar')\n  },\n  {\n    \"id\": \"postcss\",\n    \"name\": \"PostCSS\",\n    \"import\": () => import('@shikijs/langs/postcss')\n  },\n  {\n    \"id\": \"powerquery\",\n    \"name\": \"PowerQuery\",\n    \"import\": () => import('@shikijs/langs/powerquery')\n  },\n  {\n    \"id\": \"powershell\",\n    \"name\": \"PowerShell\",\n    \"aliases\": [\n      \"ps\",\n      \"ps1\"\n    ],\n    \"import\": () => import('@shikijs/langs/powershell')\n  },\n  {\n    \"id\": \"prisma\",\n    \"name\": \"Prisma\",\n    \"import\": () => import('@shikijs/langs/prisma')\n  },\n  {\n    \"id\": \"prolog\",\n    \"name\": \"Prolog\",\n    \"import\": () => import('@shikijs/langs/prolog')\n  },\n  {\n    \"id\": \"proto\",\n    \"name\": \"Protocol Buffer 3\",\n    \"aliases\": [\n      \"protobuf\"\n    ],\n    \"import\": () => import('@shikijs/langs/proto')\n  },\n  {\n    \"id\": \"pug\",\n    \"name\": \"Pug\",\n    \"aliases\": [\n      \"jade\"\n    ],\n    \"import\": () => import('@shikijs/langs/pug')\n  },\n  {\n    \"id\": \"puppet\",\n    \"name\": \"Puppet\",\n    \"import\": () => import('@shikijs/langs/puppet')\n  },\n  {\n    \"id\": \"purescript\",\n    \"name\": \"PureScript\",\n    \"import\": () => import('@shikijs/langs/purescript')\n  },\n  {\n    \"id\": \"python\",\n    \"name\": \"Python\",\n    \"aliases\": [\n      \"py\"\n    ],\n    \"import\": () => import('@shikijs/langs/python')\n  },\n  {\n    \"id\": \"qml\",\n    \"name\": \"QML\",\n    \"import\": () => import('@shikijs/langs/qml')\n  },\n  {\n    \"id\": \"qmldir\",\n    \"name\": \"QML Directory\",\n    \"import\": () => import('@shikijs/langs/qmldir')\n  },\n  {\n    \"id\": \"qss\",\n    \"name\": \"Qt Style Sheets\",\n    \"import\": () => import('@shikijs/langs/qss')\n  },\n  {\n    \"id\": \"r\",\n    \"name\": \"R\",\n    \"import\": () => import('@shikijs/langs/r')\n  },\n  {\n    \"id\": \"racket\",\n    \"name\": \"Racket\",\n    \"import\": () => import('@shikijs/langs/racket')\n  },\n  {\n    \"id\": \"raku\",\n    \"name\": \"Raku\",\n    \"aliases\": [\n      \"perl6\"\n    ],\n    \"import\": () => import('@shikijs/langs/raku')\n  },\n  {\n    \"id\": \"razor\",\n    \"name\": \"ASP.NET Razor\",\n    \"import\": () => import('@shikijs/langs/razor')\n  },\n  {\n    \"id\": \"reg\",\n    \"name\": \"Windows Registry Script\",\n    \"import\": () => import('@shikijs/langs/reg')\n  },\n  {\n    \"id\": \"regexp\",\n    \"name\": \"RegExp\",\n    \"aliases\": [\n      \"regex\"\n    ],\n    \"import\": () => import('@shikijs/langs/regexp')\n  },\n  {\n    \"id\": \"rel\",\n    \"name\": \"Rel\",\n    \"import\": () => import('@shikijs/langs/rel')\n  },\n  {\n    \"id\": \"riscv\",\n    \"name\": \"RISC-V\",\n    \"import\": () => import('@shikijs/langs/riscv')\n  },\n  {\n    \"id\": \"rst\",\n    \"name\": \"reStructuredText\",\n    \"import\": () => import('@shikijs/langs/rst')\n  },\n  {\n    \"id\": \"ruby\",\n    \"name\": \"Ruby\",\n    \"aliases\": [\n      \"rb\"\n    ],\n    \"import\": () => import('@shikijs/langs/ruby')\n  },\n  {\n    \"id\": \"rust\",\n    \"name\": \"Rust\",\n    \"aliases\": [\n      \"rs\"\n    ],\n    \"import\": () => import('@shikijs/langs/rust')\n  },\n  {\n    \"id\": \"sas\",\n    \"name\": \"SAS\",\n    \"import\": () => import('@shikijs/langs/sas')\n  },\n  {\n    \"id\": \"sass\",\n    \"name\": \"Sass\",\n    \"import\": () => import('@shikijs/langs/sass')\n  },\n  {\n    \"id\": \"scala\",\n    \"name\": \"Scala\",\n    \"import\": () => import('@shikijs/langs/scala')\n  },\n  {\n    \"id\": \"scheme\",\n    \"name\": \"Scheme\",\n    \"import\": () => import('@shikijs/langs/scheme')\n  },\n  {\n    \"id\": \"scss\",\n    \"name\": \"SCSS\",\n    \"import\": () => import('@shikijs/langs/scss')\n  },\n  {\n    \"id\": \"sdbl\",\n    \"name\": \"1C (Query)\",\n    \"aliases\": [\n      \"1c-query\"\n    ],\n    \"import\": () => import('@shikijs/langs/sdbl')\n  },\n  {\n    \"id\": \"shaderlab\",\n    \"name\": \"ShaderLab\",\n    \"aliases\": [\n      \"shader\"\n    ],\n    \"import\": () => import('@shikijs/langs/shaderlab')\n  },\n  {\n    \"id\": \"shellscript\",\n    \"name\": \"Shell\",\n    \"aliases\": [\n      \"bash\",\n      \"sh\",\n      \"shell\",\n      \"zsh\"\n    ],\n    \"import\": () => import('@shikijs/langs/shellscript')\n  },\n  {\n    \"id\": \"shellsession\",\n    \"name\": \"Shell Session\",\n    \"aliases\": [\n      \"console\"\n    ],\n    \"import\": () => import('@shikijs/langs/shellsession')\n  },\n  {\n    \"id\": \"smalltalk\",\n    \"name\": \"Smalltalk\",\n    \"import\": () => import('@shikijs/langs/smalltalk')\n  },\n  {\n    \"id\": \"solidity\",\n    \"name\": \"Solidity\",\n    \"import\": () => import('@shikijs/langs/solidity')\n  },\n  {\n    \"id\": \"soy\",\n    \"name\": \"Closure Templates\",\n    \"aliases\": [\n      \"closure-templates\"\n    ],\n    \"import\": () => import('@shikijs/langs/soy')\n  },\n  {\n    \"id\": \"sparql\",\n    \"name\": \"SPARQL\",\n    \"import\": () => import('@shikijs/langs/sparql')\n  },\n  {\n    \"id\": \"splunk\",\n    \"name\": \"Splunk Query Language\",\n    \"aliases\": [\n      \"spl\"\n    ],\n    \"import\": () => import('@shikijs/langs/splunk')\n  },\n  {\n    \"id\": \"sql\",\n    \"name\": \"SQL\",\n    \"import\": () => import('@shikijs/langs/sql')\n  },\n  {\n    \"id\": \"ssh-config\",\n    \"name\": \"SSH Config\",\n    \"import\": () => import('@shikijs/langs/ssh-config')\n  },\n  {\n    \"id\": \"stata\",\n    \"name\": \"Stata\",\n    \"import\": () => import('@shikijs/langs/stata')\n  },\n  {\n    \"id\": \"stylus\",\n    \"name\": \"Stylus\",\n    \"aliases\": [\n      \"styl\"\n    ],\n    \"import\": () => import('@shikijs/langs/stylus')\n  },\n  {\n    \"id\": \"svelte\",\n    \"name\": \"Svelte\",\n    \"import\": () => import('@shikijs/langs/svelte')\n  },\n  {\n    \"id\": \"swift\",\n    \"name\": \"Swift\",\n    \"import\": () => import('@shikijs/langs/swift')\n  },\n  {\n    \"id\": \"system-verilog\",\n    \"name\": \"SystemVerilog\",\n    \"import\": () => import('@shikijs/langs/system-verilog')\n  },\n  {\n    \"id\": \"systemd\",\n    \"name\": \"Systemd Units\",\n    \"import\": () => import('@shikijs/langs/systemd')\n  },\n  {\n    \"id\": \"talonscript\",\n    \"name\": \"TalonScript\",\n    \"aliases\": [\n      \"talon\"\n    ],\n    \"import\": () => import('@shikijs/langs/talonscript')\n  },\n  {\n    \"id\": \"tasl\",\n    \"name\": \"Tasl\",\n    \"import\": () => import('@shikijs/langs/tasl')\n  },\n  {\n    \"id\": \"tcl\",\n    \"name\": \"Tcl\",\n    \"import\": () => import('@shikijs/langs/tcl')\n  },\n  {\n    \"id\": \"templ\",\n    \"name\": \"Templ\",\n    \"import\": () => import('@shikijs/langs/templ')\n  },\n  {\n    \"id\": \"terraform\",\n    \"name\": \"Terraform\",\n    \"aliases\": [\n      \"tf\",\n      \"tfvars\"\n    ],\n    \"import\": () => import('@shikijs/langs/terraform')\n  },\n  {\n    \"id\": \"tex\",\n    \"name\": \"TeX\",\n    \"import\": () => import('@shikijs/langs/tex')\n  },\n  {\n    \"id\": \"toml\",\n    \"name\": \"TOML\",\n    \"import\": () => import('@shikijs/langs/toml')\n  },\n  {\n    \"id\": \"ts-tags\",\n    \"name\": \"TypeScript with Tags\",\n    \"aliases\": [\n      \"lit\"\n    ],\n    \"import\": () => import('@shikijs/langs/ts-tags')\n  },\n  {\n    \"id\": \"tsv\",\n    \"name\": \"TSV\",\n    \"import\": () => import('@shikijs/langs/tsv')\n  },\n  {\n    \"id\": \"tsx\",\n    \"name\": \"TSX\",\n    \"import\": () => import('@shikijs/langs/tsx')\n  },\n  {\n    \"id\": \"turtle\",\n    \"name\": \"Turtle\",\n    \"import\": () => import('@shikijs/langs/turtle')\n  },\n  {\n    \"id\": \"twig\",\n    \"name\": \"Twig\",\n    \"import\": () => import('@shikijs/langs/twig')\n  },\n  {\n    \"id\": \"typescript\",\n    \"name\": \"TypeScript\",\n    \"aliases\": [\n      \"ts\"\n    ],\n    \"import\": () => import('@shikijs/langs/typescript')\n  },\n  {\n    \"id\": \"typespec\",\n    \"name\": \"TypeSpec\",\n    \"aliases\": [\n      \"tsp\"\n    ],\n    \"import\": () => import('@shikijs/langs/typespec')\n  },\n  {\n    \"id\": \"typst\",\n    \"name\": \"Typst\",\n    \"aliases\": [\n      \"typ\"\n    ],\n    \"import\": () => import('@shikijs/langs/typst')\n  },\n  {\n    \"id\": \"v\",\n    \"name\": \"V\",\n    \"import\": () => import('@shikijs/langs/v')\n  },\n  {\n    \"id\": \"vala\",\n    \"name\": \"Vala\",\n    \"import\": () => import('@shikijs/langs/vala')\n  },\n  {\n    \"id\": \"vb\",\n    \"name\": \"Visual Basic\",\n    \"aliases\": [\n      \"cmd\"\n    ],\n    \"import\": () => import('@shikijs/langs/vb')\n  },\n  {\n    \"id\": \"verilog\",\n    \"name\": \"Verilog\",\n    \"import\": () => import('@shikijs/langs/verilog')\n  },\n  {\n    \"id\": \"vhdl\",\n    \"name\": \"VHDL\",\n    \"import\": () => import('@shikijs/langs/vhdl')\n  },\n  {\n    \"id\": \"viml\",\n    \"name\": \"Vim Script\",\n    \"aliases\": [\n      \"vim\",\n      \"vimscript\"\n    ],\n    \"import\": () => import('@shikijs/langs/viml')\n  },\n  {\n    \"id\": \"vue\",\n    \"name\": \"Vue\",\n    \"import\": () => import('@shikijs/langs/vue')\n  },\n  {\n    \"id\": \"vue-html\",\n    \"name\": \"Vue HTML\",\n    \"import\": () => import('@shikijs/langs/vue-html')\n  },\n  {\n    \"id\": \"vyper\",\n    \"name\": \"Vyper\",\n    \"aliases\": [\n      \"vy\"\n    ],\n    \"import\": () => import('@shikijs/langs/vyper')\n  },\n  {\n    \"id\": \"wasm\",\n    \"name\": \"WebAssembly\",\n    \"import\": () => import('@shikijs/langs/wasm')\n  },\n  {\n    \"id\": \"wenyan\",\n    \"name\": \"Wenyan\",\n    \"aliases\": [\n      \"\\u6587\\u8A00\"\n    ],\n    \"import\": () => import('@shikijs/langs/wenyan')\n  },\n  {\n    \"id\": \"wgsl\",\n    \"name\": \"WGSL\",\n    \"import\": () => import('@shikijs/langs/wgsl')\n  },\n  {\n    \"id\": \"wikitext\",\n    \"name\": \"Wikitext\",\n    \"aliases\": [\n      \"mediawiki\",\n      \"wiki\"\n    ],\n    \"import\": () => import('@shikijs/langs/wikitext')\n  },\n  {\n    \"id\": \"wit\",\n    \"name\": \"WebAssembly Interface Types\",\n    \"import\": () => import('@shikijs/langs/wit')\n  },\n  {\n    \"id\": \"wolfram\",\n    \"name\": \"Wolfram\",\n    \"aliases\": [\n      \"wl\"\n    ],\n    \"import\": () => import('@shikijs/langs/wolfram')\n  },\n  {\n    \"id\": \"xml\",\n    \"name\": \"XML\",\n    \"import\": () => import('@shikijs/langs/xml')\n  },\n  {\n    \"id\": \"xsl\",\n    \"name\": \"XSL\",\n    \"import\": () => import('@shikijs/langs/xsl')\n  },\n  {\n    \"id\": \"yaml\",\n    \"name\": \"YAML\",\n    \"aliases\": [\n      \"yml\"\n    ],\n    \"import\": () => import('@shikijs/langs/yaml')\n  },\n  {\n    \"id\": \"zenscript\",\n    \"name\": \"ZenScript\",\n    \"import\": () => import('@shikijs/langs/zenscript')\n  },\n  {\n    \"id\": \"zig\",\n    \"name\": \"Zig\",\n    \"import\": () => import('@shikijs/langs/zig')\n  }\n];\nconst bundledLanguagesBase = Object.fromEntries(bundledLanguagesInfo.map((i) => [i.id, i.import]));\nconst bundledLanguagesAlias = Object.fromEntries(bundledLanguagesInfo.flatMap((i) => i.aliases?.map((a) => [a, i.import]) || []));\nconst bundledLanguages = {\n  ...bundledLanguagesBase,\n  ...bundledLanguagesAlias\n};\n\nexport { bundledLanguages, bundledLanguagesAlias, bundledLanguagesBase, bundledLanguagesInfo };\n", "const bundledThemesInfo = [\n  {\n    \"id\": \"andromeeda\",\n    \"displayName\": \"Andromeeda\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/andromeeda')\n  },\n  {\n    \"id\": \"aurora-x\",\n    \"displayName\": \"Aurora X\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/aurora-x')\n  },\n  {\n    \"id\": \"ayu-dark\",\n    \"displayName\": \"Ayu Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/ayu-dark')\n  },\n  {\n    \"id\": \"catppuccin-frappe\",\n    \"displayName\": \"Catppuccin Frapp\\xE9\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/catppuccin-frappe')\n  },\n  {\n    \"id\": \"catppuccin-latte\",\n    \"displayName\": \"Catppuccin Latte\",\n    \"type\": \"light\",\n    \"import\": () => import('@shikijs/themes/catppuccin-latte')\n  },\n  {\n    \"id\": \"catppuccin-macchiato\",\n    \"displayName\": \"Catppuccin Macchiato\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/catppuccin-macchiato')\n  },\n  {\n    \"id\": \"catppuccin-mocha\",\n    \"displayName\": \"Catppuccin Mocha\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/catppuccin-mocha')\n  },\n  {\n    \"id\": \"dark-plus\",\n    \"displayName\": \"Dark Plus\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/dark-plus')\n  },\n  {\n    \"id\": \"dracula\",\n    \"displayName\": \"Dracula Theme\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/dracula')\n  },\n  {\n    \"id\": \"dracula-soft\",\n    \"displayName\": \"Dracula Theme Soft\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/dracula-soft')\n  },\n  {\n    \"id\": \"everforest-dark\",\n    \"displayName\": \"Everforest Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/everforest-dark')\n  },\n  {\n    \"id\": \"everforest-light\",\n    \"displayName\": \"Everforest Light\",\n    \"type\": \"light\",\n    \"import\": () => import('@shikijs/themes/everforest-light')\n  },\n  {\n    \"id\": \"github-dark\",\n    \"displayName\": \"GitHub Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/github-dark')\n  },\n  {\n    \"id\": \"github-dark-default\",\n    \"displayName\": \"GitHub Dark Default\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/github-dark-default')\n  },\n  {\n    \"id\": \"github-dark-dimmed\",\n    \"displayName\": \"GitHub Dark Dimmed\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/github-dark-dimmed')\n  },\n  {\n    \"id\": \"github-dark-high-contrast\",\n    \"displayName\": \"GitHub Dark High Contrast\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/github-dark-high-contrast')\n  },\n  {\n    \"id\": \"github-light\",\n    \"displayName\": \"GitHub Light\",\n    \"type\": \"light\",\n    \"import\": () => import('@shikijs/themes/github-light')\n  },\n  {\n    \"id\": \"github-light-default\",\n    \"displayName\": \"GitHub Light Default\",\n    \"type\": \"light\",\n    \"import\": () => import('@shikijs/themes/github-light-default')\n  },\n  {\n    \"id\": \"github-light-high-contrast\",\n    \"displayName\": \"GitHub Light High Contrast\",\n    \"type\": \"light\",\n    \"import\": () => import('@shikijs/themes/github-light-high-contrast')\n  },\n  {\n    \"id\": \"gruvbox-dark-hard\",\n    \"displayName\": \"Gruvbox Dark Hard\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/gruvbox-dark-hard')\n  },\n  {\n    \"id\": \"gruvbox-dark-medium\",\n    \"displayName\": \"Gruvbox Dark Medium\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/gruvbox-dark-medium')\n  },\n  {\n    \"id\": \"gruvbox-dark-soft\",\n    \"displayName\": \"Gruvbox Dark Soft\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/gruvbox-dark-soft')\n  },\n  {\n    \"id\": \"gruvbox-light-hard\",\n    \"displayName\": \"Gruvbox Light Hard\",\n    \"type\": \"light\",\n    \"import\": () => import('@shikijs/themes/gruvbox-light-hard')\n  },\n  {\n    \"id\": \"gruvbox-light-medium\",\n    \"displayName\": \"Gruvbox Light Medium\",\n    \"type\": \"light\",\n    \"import\": () => import('@shikijs/themes/gruvbox-light-medium')\n  },\n  {\n    \"id\": \"gruvbox-light-soft\",\n    \"displayName\": \"Gruvbox Light Soft\",\n    \"type\": \"light\",\n    \"import\": () => import('@shikijs/themes/gruvbox-light-soft')\n  },\n  {\n    \"id\": \"houston\",\n    \"displayName\": \"Houston\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/houston')\n  },\n  {\n    \"id\": \"kanagawa-dragon\",\n    \"displayName\": \"Kanagawa Dragon\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/kanagawa-dragon')\n  },\n  {\n    \"id\": \"kanagawa-lotus\",\n    \"displayName\": \"Kanagawa Lotus\",\n    \"type\": \"light\",\n    \"import\": () => import('@shikijs/themes/kanagawa-lotus')\n  },\n  {\n    \"id\": \"kanagawa-wave\",\n    \"displayName\": \"Kanagawa Wave\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/kanagawa-wave')\n  },\n  {\n    \"id\": \"laserwave\",\n    \"displayName\": \"LaserWave\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/laserwave')\n  },\n  {\n    \"id\": \"light-plus\",\n    \"displayName\": \"Light Plus\",\n    \"type\": \"light\",\n    \"import\": () => import('@shikijs/themes/light-plus')\n  },\n  {\n    \"id\": \"material-theme\",\n    \"displayName\": \"Material Theme\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/material-theme')\n  },\n  {\n    \"id\": \"material-theme-darker\",\n    \"displayName\": \"Material Theme Darker\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/material-theme-darker')\n  },\n  {\n    \"id\": \"material-theme-lighter\",\n    \"displayName\": \"Material Theme Lighter\",\n    \"type\": \"light\",\n    \"import\": () => import('@shikijs/themes/material-theme-lighter')\n  },\n  {\n    \"id\": \"material-theme-ocean\",\n    \"displayName\": \"Material Theme Ocean\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/material-theme-ocean')\n  },\n  {\n    \"id\": \"material-theme-palenight\",\n    \"displayName\": \"Material Theme Palenight\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/material-theme-palenight')\n  },\n  {\n    \"id\": \"min-dark\",\n    \"displayName\": \"Min Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/min-dark')\n  },\n  {\n    \"id\": \"min-light\",\n    \"displayName\": \"Min Light\",\n    \"type\": \"light\",\n    \"import\": () => import('@shikijs/themes/min-light')\n  },\n  {\n    \"id\": \"monokai\",\n    \"displayName\": \"Monokai\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/monokai')\n  },\n  {\n    \"id\": \"night-owl\",\n    \"displayName\": \"Night Owl\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/night-owl')\n  },\n  {\n    \"id\": \"nord\",\n    \"displayName\": \"Nord\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/nord')\n  },\n  {\n    \"id\": \"one-dark-pro\",\n    \"displayName\": \"One Dark Pro\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/one-dark-pro')\n  },\n  {\n    \"id\": \"one-light\",\n    \"displayName\": \"One Light\",\n    \"type\": \"light\",\n    \"import\": () => import('@shikijs/themes/one-light')\n  },\n  {\n    \"id\": \"plastic\",\n    \"displayName\": \"Plastic\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/plastic')\n  },\n  {\n    \"id\": \"poimandres\",\n    \"displayName\": \"Poimandres\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/poimandres')\n  },\n  {\n    \"id\": \"red\",\n    \"displayName\": \"Red\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/red')\n  },\n  {\n    \"id\": \"rose-pine\",\n    \"displayName\": \"Ros\\xE9 Pine\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/rose-pine')\n  },\n  {\n    \"id\": \"rose-pine-dawn\",\n    \"displayName\": \"Ros\\xE9 Pine Dawn\",\n    \"type\": \"light\",\n    \"import\": () => import('@shikijs/themes/rose-pine-dawn')\n  },\n  {\n    \"id\": \"rose-pine-moon\",\n    \"displayName\": \"Ros\\xE9 Pine Moon\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/rose-pine-moon')\n  },\n  {\n    \"id\": \"slack-dark\",\n    \"displayName\": \"Slack Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/slack-dark')\n  },\n  {\n    \"id\": \"slack-ochin\",\n    \"displayName\": \"Slack Ochin\",\n    \"type\": \"light\",\n    \"import\": () => import('@shikijs/themes/slack-ochin')\n  },\n  {\n    \"id\": \"snazzy-light\",\n    \"displayName\": \"Snazzy Light\",\n    \"type\": \"light\",\n    \"import\": () => import('@shikijs/themes/snazzy-light')\n  },\n  {\n    \"id\": \"solarized-dark\",\n    \"displayName\": \"Solarized Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/solarized-dark')\n  },\n  {\n    \"id\": \"solarized-light\",\n    \"displayName\": \"Solarized Light\",\n    \"type\": \"light\",\n    \"import\": () => import('@shikijs/themes/solarized-light')\n  },\n  {\n    \"id\": \"synthwave-84\",\n    \"displayName\": \"Synthwave '84\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/synthwave-84')\n  },\n  {\n    \"id\": \"tokyo-night\",\n    \"displayName\": \"Tokyo Night\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/tokyo-night')\n  },\n  {\n    \"id\": \"vesper\",\n    \"displayName\": \"Vesper\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/vesper')\n  },\n  {\n    \"id\": \"vitesse-black\",\n    \"displayName\": \"Vitesse Black\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/vitesse-black')\n  },\n  {\n    \"id\": \"vitesse-dark\",\n    \"displayName\": \"Vitesse Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('@shikijs/themes/vitesse-dark')\n  },\n  {\n    \"id\": \"vitesse-light\",\n    \"displayName\": \"Vitesse Light\",\n    \"type\": \"light\",\n    \"import\": () => import('@shikijs/themes/vitesse-light')\n  }\n];\nconst bundledThemes = Object.fromEntries(bundledThemesInfo.map((i) => [i.id, i.import]));\n\nexport { bundledThemes, bundledThemesInfo };\n", "class ShikiError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"ShikiError\";\n  }\n}\n\nfunction getHeapMax() {\n  return 2147483648;\n}\nfunction _emscripten_get_now() {\n  return typeof performance !== \"undefined\" ? performance.now() : Date.now();\n}\nconst alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\nasync function main(init) {\n  let wasmMemory;\n  let buffer;\n  const binding = {};\n  function updateGlobalBufferAndViews(buf) {\n    buffer = buf;\n    binding.HEAPU8 = new Uint8Array(buf);\n    binding.HEAPU32 = new Uint32Array(buf);\n  }\n  function _emscripten_memcpy_big(dest, src, num) {\n    binding.HEAPU8.copyWithin(dest, src, src + num);\n  }\n  function emscripten_realloc_buffer(size) {\n    try {\n      wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n      updateGlobalBufferAndViews(wasmMemory.buffer);\n      return 1;\n    } catch {\n    }\n  }\n  function _emscripten_resize_heap(requestedSize) {\n    const oldSize = binding.HEAPU8.length;\n    requestedSize = requestedSize >>> 0;\n    const maxHeapSize = getHeapMax();\n    if (requestedSize > maxHeapSize)\n      return false;\n    for (let cutDown = 1; cutDown <= 4; cutDown *= 2) {\n      let overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n      overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n      const newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n      const replacement = emscripten_realloc_buffer(newSize);\n      if (replacement)\n        return true;\n    }\n    return false;\n  }\n  const UTF8Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf8\") : void 0;\n  function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead = 1024) {\n    const endIdx = idx + maxBytesToRead;\n    let endPtr = idx;\n    while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n    if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n      return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n    }\n    let str = \"\";\n    while (idx < endPtr) {\n      let u0 = heapOrArray[idx++];\n      if (!(u0 & 128)) {\n        str += String.fromCharCode(u0);\n        continue;\n      }\n      const u1 = heapOrArray[idx++] & 63;\n      if ((u0 & 224) === 192) {\n        str += String.fromCharCode((u0 & 31) << 6 | u1);\n        continue;\n      }\n      const u2 = heapOrArray[idx++] & 63;\n      if ((u0 & 240) === 224) {\n        u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n      } else {\n        u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;\n      }\n      if (u0 < 65536) {\n        str += String.fromCharCode(u0);\n      } else {\n        const ch = u0 - 65536;\n        str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n      }\n    }\n    return str;\n  }\n  function UTF8ToString(ptr, maxBytesToRead) {\n    return ptr ? UTF8ArrayToString(binding.HEAPU8, ptr, maxBytesToRead) : \"\";\n  }\n  const asmLibraryArg = {\n    emscripten_get_now: _emscripten_get_now,\n    emscripten_memcpy_big: _emscripten_memcpy_big,\n    emscripten_resize_heap: _emscripten_resize_heap,\n    fd_write: () => 0\n  };\n  async function createWasm() {\n    const info = {\n      env: asmLibraryArg,\n      wasi_snapshot_preview1: asmLibraryArg\n    };\n    const exports = await init(info);\n    wasmMemory = exports.memory;\n    updateGlobalBufferAndViews(wasmMemory.buffer);\n    Object.assign(binding, exports);\n    binding.UTF8ToString = UTF8ToString;\n  }\n  await createWasm();\n  return binding;\n}\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nlet onigBinding = null;\nfunction throwLastOnigError(onigBinding2) {\n  throw new ShikiError(onigBinding2.UTF8ToString(onigBinding2.getLastOnigError()));\n}\nclass UtfString {\n  constructor(str) {\n    __publicField(this, \"utf16Length\");\n    __publicField(this, \"utf8Length\");\n    __publicField(this, \"utf16Value\");\n    __publicField(this, \"utf8Value\");\n    __publicField(this, \"utf16OffsetToUtf8\");\n    __publicField(this, \"utf8OffsetToUtf16\");\n    const utf16Length = str.length;\n    const utf8Length = UtfString._utf8ByteLength(str);\n    const computeIndicesMapping = utf8Length !== utf16Length;\n    const utf16OffsetToUtf8 = computeIndicesMapping ? new Uint32Array(utf16Length + 1) : null;\n    if (computeIndicesMapping)\n      utf16OffsetToUtf8[utf16Length] = utf8Length;\n    const utf8OffsetToUtf16 = computeIndicesMapping ? new Uint32Array(utf8Length + 1) : null;\n    if (computeIndicesMapping)\n      utf8OffsetToUtf16[utf8Length] = utf16Length;\n    const utf8Value = new Uint8Array(utf8Length);\n    let i8 = 0;\n    for (let i16 = 0; i16 < utf16Length; i16++) {\n      const charCode = str.charCodeAt(i16);\n      let codePoint = charCode;\n      let wasSurrogatePair = false;\n      if (charCode >= 55296 && charCode <= 56319) {\n        if (i16 + 1 < utf16Length) {\n          const nextCharCode = str.charCodeAt(i16 + 1);\n          if (nextCharCode >= 56320 && nextCharCode <= 57343) {\n            codePoint = (charCode - 55296 << 10) + 65536 | nextCharCode - 56320;\n            wasSurrogatePair = true;\n          }\n        }\n      }\n      if (computeIndicesMapping) {\n        utf16OffsetToUtf8[i16] = i8;\n        if (wasSurrogatePair)\n          utf16OffsetToUtf8[i16 + 1] = i8;\n        if (codePoint <= 127) {\n          utf8OffsetToUtf16[i8 + 0] = i16;\n        } else if (codePoint <= 2047) {\n          utf8OffsetToUtf16[i8 + 0] = i16;\n          utf8OffsetToUtf16[i8 + 1] = i16;\n        } else if (codePoint <= 65535) {\n          utf8OffsetToUtf16[i8 + 0] = i16;\n          utf8OffsetToUtf16[i8 + 1] = i16;\n          utf8OffsetToUtf16[i8 + 2] = i16;\n        } else {\n          utf8OffsetToUtf16[i8 + 0] = i16;\n          utf8OffsetToUtf16[i8 + 1] = i16;\n          utf8OffsetToUtf16[i8 + 2] = i16;\n          utf8OffsetToUtf16[i8 + 3] = i16;\n        }\n      }\n      if (codePoint <= 127) {\n        utf8Value[i8++] = codePoint;\n      } else if (codePoint <= 2047) {\n        utf8Value[i8++] = 192 | (codePoint & 1984) >>> 6;\n        utf8Value[i8++] = 128 | (codePoint & 63) >>> 0;\n      } else if (codePoint <= 65535) {\n        utf8Value[i8++] = 224 | (codePoint & 61440) >>> 12;\n        utf8Value[i8++] = 128 | (codePoint & 4032) >>> 6;\n        utf8Value[i8++] = 128 | (codePoint & 63) >>> 0;\n      } else {\n        utf8Value[i8++] = 240 | (codePoint & 1835008) >>> 18;\n        utf8Value[i8++] = 128 | (codePoint & 258048) >>> 12;\n        utf8Value[i8++] = 128 | (codePoint & 4032) >>> 6;\n        utf8Value[i8++] = 128 | (codePoint & 63) >>> 0;\n      }\n      if (wasSurrogatePair)\n        i16++;\n    }\n    this.utf16Length = utf16Length;\n    this.utf8Length = utf8Length;\n    this.utf16Value = str;\n    this.utf8Value = utf8Value;\n    this.utf16OffsetToUtf8 = utf16OffsetToUtf8;\n    this.utf8OffsetToUtf16 = utf8OffsetToUtf16;\n  }\n  static _utf8ByteLength(str) {\n    let result = 0;\n    for (let i = 0, len = str.length; i < len; i++) {\n      const charCode = str.charCodeAt(i);\n      let codepoint = charCode;\n      let wasSurrogatePair = false;\n      if (charCode >= 55296 && charCode <= 56319) {\n        if (i + 1 < len) {\n          const nextCharCode = str.charCodeAt(i + 1);\n          if (nextCharCode >= 56320 && nextCharCode <= 57343) {\n            codepoint = (charCode - 55296 << 10) + 65536 | nextCharCode - 56320;\n            wasSurrogatePair = true;\n          }\n        }\n      }\n      if (codepoint <= 127)\n        result += 1;\n      else if (codepoint <= 2047)\n        result += 2;\n      else if (codepoint <= 65535)\n        result += 3;\n      else\n        result += 4;\n      if (wasSurrogatePair)\n        i++;\n    }\n    return result;\n  }\n  createString(onigBinding2) {\n    const result = onigBinding2.omalloc(this.utf8Length);\n    onigBinding2.HEAPU8.set(this.utf8Value, result);\n    return result;\n  }\n}\nconst _OnigString = class _OnigString {\n  constructor(str) {\n    __publicField(this, \"id\", ++_OnigString.LAST_ID);\n    __publicField(this, \"_onigBinding\");\n    __publicField(this, \"content\");\n    __publicField(this, \"utf16Length\");\n    __publicField(this, \"utf8Length\");\n    __publicField(this, \"utf16OffsetToUtf8\");\n    __publicField(this, \"utf8OffsetToUtf16\");\n    __publicField(this, \"ptr\");\n    if (!onigBinding)\n      throw new ShikiError(\"Must invoke loadWasm first.\");\n    this._onigBinding = onigBinding;\n    this.content = str;\n    const utfString = new UtfString(str);\n    this.utf16Length = utfString.utf16Length;\n    this.utf8Length = utfString.utf8Length;\n    this.utf16OffsetToUtf8 = utfString.utf16OffsetToUtf8;\n    this.utf8OffsetToUtf16 = utfString.utf8OffsetToUtf16;\n    if (this.utf8Length < 1e4 && !_OnigString._sharedPtrInUse) {\n      if (!_OnigString._sharedPtr)\n        _OnigString._sharedPtr = onigBinding.omalloc(1e4);\n      _OnigString._sharedPtrInUse = true;\n      onigBinding.HEAPU8.set(utfString.utf8Value, _OnigString._sharedPtr);\n      this.ptr = _OnigString._sharedPtr;\n    } else {\n      this.ptr = utfString.createString(onigBinding);\n    }\n  }\n  convertUtf8OffsetToUtf16(utf8Offset) {\n    if (this.utf8OffsetToUtf16) {\n      if (utf8Offset < 0)\n        return 0;\n      if (utf8Offset > this.utf8Length)\n        return this.utf16Length;\n      return this.utf8OffsetToUtf16[utf8Offset];\n    }\n    return utf8Offset;\n  }\n  convertUtf16OffsetToUtf8(utf16Offset) {\n    if (this.utf16OffsetToUtf8) {\n      if (utf16Offset < 0)\n        return 0;\n      if (utf16Offset > this.utf16Length)\n        return this.utf8Length;\n      return this.utf16OffsetToUtf8[utf16Offset];\n    }\n    return utf16Offset;\n  }\n  dispose() {\n    if (this.ptr === _OnigString._sharedPtr)\n      _OnigString._sharedPtrInUse = false;\n    else\n      this._onigBinding.ofree(this.ptr);\n  }\n};\n__publicField(_OnigString, \"LAST_ID\", 0);\n__publicField(_OnigString, \"_sharedPtr\", 0);\n// a pointer to a string of 10000 bytes\n__publicField(_OnigString, \"_sharedPtrInUse\", false);\nlet OnigString = _OnigString;\nclass OnigScanner {\n  constructor(patterns) {\n    __publicField(this, \"_onigBinding\");\n    __publicField(this, \"_ptr\");\n    if (!onigBinding)\n      throw new ShikiError(\"Must invoke loadWasm first.\");\n    const strPtrsArr = [];\n    const strLenArr = [];\n    for (let i = 0, len = patterns.length; i < len; i++) {\n      const utfString = new UtfString(patterns[i]);\n      strPtrsArr[i] = utfString.createString(onigBinding);\n      strLenArr[i] = utfString.utf8Length;\n    }\n    const strPtrsPtr = onigBinding.omalloc(4 * patterns.length);\n    onigBinding.HEAPU32.set(strPtrsArr, strPtrsPtr / 4);\n    const strLenPtr = onigBinding.omalloc(4 * patterns.length);\n    onigBinding.HEAPU32.set(strLenArr, strLenPtr / 4);\n    const scannerPtr = onigBinding.createOnigScanner(strPtrsPtr, strLenPtr, patterns.length);\n    for (let i = 0, len = patterns.length; i < len; i++)\n      onigBinding.ofree(strPtrsArr[i]);\n    onigBinding.ofree(strLenPtr);\n    onigBinding.ofree(strPtrsPtr);\n    if (scannerPtr === 0)\n      throwLastOnigError(onigBinding);\n    this._onigBinding = onigBinding;\n    this._ptr = scannerPtr;\n  }\n  dispose() {\n    this._onigBinding.freeOnigScanner(this._ptr);\n  }\n  findNextMatchSync(string, startPosition, arg) {\n    let options = 0 /* None */;\n    if (typeof arg === \"number\") {\n      options = arg;\n    }\n    if (typeof string === \"string\") {\n      string = new OnigString(string);\n      const result = this._findNextMatchSync(string, startPosition, false, options);\n      string.dispose();\n      return result;\n    }\n    return this._findNextMatchSync(string, startPosition, false, options);\n  }\n  _findNextMatchSync(string, startPosition, debugCall, options) {\n    const onigBinding2 = this._onigBinding;\n    const resultPtr = onigBinding2.findNextOnigScannerMatch(this._ptr, string.id, string.ptr, string.utf8Length, string.convertUtf16OffsetToUtf8(startPosition), options);\n    if (resultPtr === 0) {\n      return null;\n    }\n    const HEAPU32 = onigBinding2.HEAPU32;\n    let offset = resultPtr / 4;\n    const index = HEAPU32[offset++];\n    const count = HEAPU32[offset++];\n    const captureIndices = [];\n    for (let i = 0; i < count; i++) {\n      const beg = string.convertUtf8OffsetToUtf16(HEAPU32[offset++]);\n      const end = string.convertUtf8OffsetToUtf16(HEAPU32[offset++]);\n      captureIndices[i] = {\n        start: beg,\n        end,\n        length: end - beg\n      };\n    }\n    return {\n      index,\n      captureIndices\n    };\n  }\n}\nfunction isInstantiatorOptionsObject(dataOrOptions) {\n  return typeof dataOrOptions.instantiator === \"function\";\n}\nfunction isInstantiatorModule(dataOrOptions) {\n  return typeof dataOrOptions.default === \"function\";\n}\nfunction isDataOptionsObject(dataOrOptions) {\n  return typeof dataOrOptions.data !== \"undefined\";\n}\nfunction isResponse(dataOrOptions) {\n  return typeof Response !== \"undefined\" && dataOrOptions instanceof Response;\n}\nfunction isArrayBuffer(data) {\n  return typeof ArrayBuffer !== \"undefined\" && (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) || typeof Buffer !== \"undefined\" && Buffer.isBuffer?.(data) || typeof SharedArrayBuffer !== \"undefined\" && data instanceof SharedArrayBuffer || typeof Uint32Array !== \"undefined\" && data instanceof Uint32Array;\n}\nlet initPromise;\nfunction loadWasm(options) {\n  if (initPromise)\n    return initPromise;\n  async function _load() {\n    onigBinding = await main(async (info) => {\n      let instance = options;\n      instance = await instance;\n      if (typeof instance === \"function\")\n        instance = await instance(info);\n      if (typeof instance === \"function\")\n        instance = await instance(info);\n      if (isInstantiatorOptionsObject(instance)) {\n        instance = await instance.instantiator(info);\n      } else if (isInstantiatorModule(instance)) {\n        instance = await instance.default(info);\n      } else {\n        if (isDataOptionsObject(instance))\n          instance = instance.data;\n        if (isResponse(instance)) {\n          if (typeof WebAssembly.instantiateStreaming === \"function\")\n            instance = await _makeResponseStreamingLoader(instance)(info);\n          else\n            instance = await _makeResponseNonStreamingLoader(instance)(info);\n        } else if (isArrayBuffer(instance)) {\n          instance = await _makeArrayBufferLoader(instance)(info);\n        } else if (instance instanceof WebAssembly.Module) {\n          instance = await _makeArrayBufferLoader(instance)(info);\n        } else if (\"default\" in instance && instance.default instanceof WebAssembly.Module) {\n          instance = await _makeArrayBufferLoader(instance.default)(info);\n        }\n      }\n      if (\"instance\" in instance)\n        instance = instance.instance;\n      if (\"exports\" in instance)\n        instance = instance.exports;\n      return instance;\n    });\n  }\n  initPromise = _load();\n  return initPromise;\n}\nfunction _makeArrayBufferLoader(data) {\n  return (importObject) => WebAssembly.instantiate(data, importObject);\n}\nfunction _makeResponseStreamingLoader(data) {\n  return (importObject) => WebAssembly.instantiateStreaming(data, importObject);\n}\nfunction _makeResponseNonStreamingLoader(data) {\n  return async (importObject) => {\n    const arrayBuffer = await data.arrayBuffer();\n    return WebAssembly.instantiate(arrayBuffer, importObject);\n  };\n}\n\nlet _defaultWasmLoader;\nfunction setDefaultWasmLoader(_loader) {\n  _defaultWasmLoader = _loader;\n}\nfunction getDefaultWasmLoader() {\n  return _defaultWasmLoader;\n}\nasync function createOnigurumaEngine(options) {\n  if (options)\n    await loadWasm(options);\n  return {\n    createScanner(patterns) {\n      return new OnigScanner(patterns.map((p) => typeof p === \"string\" ? p : p.source));\n    },\n    createString(s) {\n      return new OnigString(s);\n    }\n  };\n}\n\nexport { createOnigurumaEngine, getDefaultWasmLoader, loadWasm, setDefaultWasmLoader };\n", "import { createSingletonShorthands, createdBundledHighlighter, guessEmbeddedLanguages } from '@shikijs/core';\nexport * from '@shikijs/core';\nimport { bundledLanguages } from './langs.mjs';\nexport { bundledLanguagesAlias, bundledLanguagesBase, bundledLanguagesInfo } from './langs.mjs';\nimport { bundledThemes } from './themes.mjs';\nexport { bundledThemesInfo } from './themes.mjs';\nimport { createOnigurumaEngine } from '@shikijs/engine-oniguruma';\n\nconst createHighlighter = /* @__PURE__ */ createdBundledHighlighter({\n  langs: bundledLanguages,\n  themes: bundledThemes,\n  engine: () => createOnigurumaEngine(import('shiki/wasm'))\n});\nconst {\n  codeToHtml,\n  codeToHast,\n  codeToTokens,\n  codeToTokensBase,\n  codeToTokensWithThemes,\n  getSingletonHighlighter,\n  getLastGrammarState\n} = /* @__PURE__ */ createSingletonShorthands(\n  createHighlighter,\n  { guessEmbeddedLanguages }\n);\n\nexport { bundledLanguages, bundledThemes, codeToHast, codeToHtml, codeToTokens, codeToTokensBase, codeToTokensWithThemes, createHighlighter, getLastGrammarState, getSingletonHighlighter };\n", "function cpOf(char: string): number {\n  // Count code point length\n  if ([...char].length !== 1) {\n    throw new Error(`Expected \"${char}\" to be a single code point`);\n  }\n  return char.codePointAt(0)!;\n}\n\nfunction getOrInsert<Key, Value>(map: Map<Key, Value>, key: Key, defaultValue: Value): Value {\n  if (!map.has(key)) {\n    map.set(key, defaultValue);\n  }\n  return map.get(key)!;\n}\n\nconst PosixClassNames = new Set([\n  'alnum',\n  'alpha',\n  'ascii',\n  'blank',\n  'cntrl',\n  'digit',\n  'graph',\n  'lower',\n  'print',\n  'punct',\n  'space',\n  'upper',\n  'word',\n  'xdigit',\n]);\n\nconst r = String.raw;\n\nfunction throwIfNullish<Value>(value: Value, msg?: string): NonNullable<Value> {\n  if (value == null) {\n    throw new Error(msg ?? 'Value expected');\n  }\n  return value;\n}\n\nexport {\n  cpOf,\n  getOrInsert,\n  PosixClassNames,\n  r,\n  throwIfNullish,\n};\n", "import {cpOf, PosixClassNames, r, throwIfNullish} from '../utils.js';\n\ntype Token =\n  AlternatorToken |\n  AssertionToken |\n  BackreferenceToken |\n  CharacterToken |\n  CharacterClassCloseToken |\n  CharacterClassHyphenToken |\n  CharacterClassIntersectorToken |\n  CharacterClassOpenToken |\n  CharacterSetToken |\n  DirectiveToken |\n  GroupCloseToken |\n  GroupOpenToken |\n  NamedCalloutToken |\n  QuantifierToken |\n  SubroutineToken;\n\ntype IntermediateToken =\n  EscapedNumberToken;\n\ntype TokenCharacterSetKind =\n  'any' |\n  'digit' |\n  'dot' |\n  'hex' |\n  'newline' |\n  'posix' |\n  'property' |\n  'space' |\n  'text_segment' |\n  'word';\n\ntype TokenDirectiveKind =\n  'flags' |\n  'keep';\n\ntype TokenGroupOpenKind =\n  'absence_repeater' |\n  'atomic' |\n  'capturing' |\n  'group' |\n  'lookahead' |\n  'lookbehind';\n\ntype TokenQuantifierKind =\n  'greedy' |\n  'lazy' |\n  'possessive';\n\ntype TokenNamedCalloutKind =\n  'count' |\n  'cmp' |\n  'error' |\n  'fail' |\n  'max' |\n  'mismatch' |\n  'skip' |\n  'total_count' |\n  'custom';\n\nconst charClassOpenPattern = r`\\[\\^?`;\nconst sharedEscapesPattern = `${\n  // Control char\n  'c.? | C(?:-.?)?'\n}|${\n  // Unicode property; Onig considers `\\p` an identity escape, but e.g. `\\p{`, `\\p{ ^L}`, and\n  // `\\p{gc=L}` are invalid\n  r`[pP]\\{(?:\\^?[-\\x20_]*[A-Za-z][-\\x20\\w]*\\})?`\n}|${\n  // Hex encoded byte sequence; attempt match before other `\\xNN` hex char\n  r`x[89A-Fa-f]\\p{AHex}(?:\\\\x[89A-Fa-f]\\p{AHex})*`\n}|${\n  // Hex char\n  r`u(?:\\p{AHex}{4})? | x\\{[^\\}]*\\}? | x\\p{AHex}{0,2}`\n}|${\n  // Enclosed octal code point\n  r`o\\{[^\\}]*\\}?`\n}|${\n  // Escaped number\n  r`\\d{1,3}`\n}`;\n// Even with flag x, Onig doesn't allow whitespace to separate a quantifier from the `?` or `+`\n// that makes it lazy or possessive. Possessive suffixes don't apply to interval quantifiers\nconst quantifierRe = /[?*+][?+]?|\\{(?:\\d+(?:,\\d*)?|,\\d+)\\}\\??/;\nconst tokenRe = new RegExp(r`\n  \\\\ (?:\n    ${sharedEscapesPattern}\n    | [gk]<[^>]*>?\n    | [gk]'[^']*'?\n    | .\n  )\n  | \\( (?:\n    \\? (?:\n      [:=!>({]\n      | <[=!]\n      | <[^>]*>\n      | '[^']*'\n      | ~\\|?\n      | #(?:[^)\\\\]|\\\\.?)*\n      | [^:)]*[:)]\n    )?\n    | \\*[^\\)]*\\)?\n  )?\n  | (?:${quantifierRe.source})+\n  | ${charClassOpenPattern}\n  | .\n`.replace(/\\s+/g, ''), 'gsu');\nconst charClassTokenRe = new RegExp(r`\n  \\\\ (?:\n    ${sharedEscapesPattern}\n    | .\n  )\n  | \\[:(?:\\^?\\p{Alpha}+|\\^):\\]\n  | ${charClassOpenPattern}\n  | &&\n  | .\n`.replace(/\\s+/g, ''), 'gsu');\n\ntype Context = {\n  captureGroup: boolean;\n  getCurrentModX(): boolean;\n  numOpenGroups: number;\n  popModX(): void;\n  pushModX(isXOn: boolean): void;\n  replaceCurrentModX(isXOn: boolean): void;\n  singleline: boolean;\n};\n\ntype TokenizeOptions = {\n  flags?: string;\n  rules?: {\n    captureGroup?: boolean;\n    singleline?: boolean;\n  };\n};\n\nfunction tokenize(pattern: string, options: TokenizeOptions = {}): {\n  tokens: Array<Token>;\n  flags: FlagProperties;\n} {\n  const opts = {\n    flags: '',\n    ...options,\n    rules: {\n      captureGroup: false, // `ONIG_OPTION_CAPTURE_GROUP`\n      singleline: false, // `ONIG_OPTION_SINGLELINE`\n      ...options.rules,\n    },\n  };\n  if (typeof pattern !== 'string') {\n    throw new Error('String expected as pattern');\n  }\n  const flagProperties = getFlagProperties(opts.flags);\n  const xStack = [flagProperties.extended];\n  const context: Context = {\n    captureGroup: opts.rules.captureGroup,\n    // Always at least has the top-level flag x\n    getCurrentModX() {return xStack.at(-1)!},\n    numOpenGroups: 0,\n    popModX() {xStack.pop()},\n    pushModX(isXOn) {xStack.push(isXOn)},\n    replaceCurrentModX(isXOn) {xStack[xStack.length - 1] = isXOn},\n    singleline: opts.rules.singleline,\n  };\n  let tokens: Array<Token | IntermediateToken> = [];\n  let match: RegExpExecArray | null;\n  tokenRe.lastIndex = 0;\n  while ((match = tokenRe.exec(pattern))) {\n    const result = getTokenWithDetails(context, pattern, match[0], tokenRe.lastIndex);\n    if (result.tokens) {\n      tokens.push(...result.tokens);\n    } else if (result.token) {\n      tokens.push(result.token);\n    }\n    if (result.lastIndex !== undefined) {\n      tokenRe.lastIndex = result.lastIndex;\n    }\n  }\n\n  const potentialUnnamedCaptureTokens: Array<GroupOpenToken> = [];\n  let numNamedAndOptInUnnamedCaptures = 0;\n  tokens.filter(t => t.type === 'GroupOpen').forEach(t => {\n    if (t.kind === 'capturing') {\n      t.number = ++numNamedAndOptInUnnamedCaptures;\n    } else if (t.raw === '(') {\n      potentialUnnamedCaptureTokens.push(t);\n    }\n  });\n  // Enable unnamed capturing groups if no named captures (when `captureGroup` not enabled)\n  if (!numNamedAndOptInUnnamedCaptures) {\n    potentialUnnamedCaptureTokens.forEach((t, i) => {\n      t.kind = 'capturing';\n      t.number = i + 1;\n    });\n  }\n  const numCaptures = numNamedAndOptInUnnamedCaptures || potentialUnnamedCaptureTokens.length;\n  // Can now split escaped nums accurately, accounting for number of captures\n  const tokensWithoutIntermediate = tokens.map(\n    t => t.type === 'EscapedNumber' ? splitEscapedNumberToken(t, numCaptures) : t\n  ).flat();\n\n  return {\n    tokens: tokensWithoutIntermediate,\n    flags: flagProperties,\n  };\n}\n\nfunction getTokenWithDetails(context: Context, pattern: string, m: string, lastIndex: number): {\n  token: Token | IntermediateToken;\n  tokens?: never;\n  lastIndex?: number;\n} | {\n  token?: never;\n  tokens: Array<Token | IntermediateToken>;\n  lastIndex?: number;\n} | {\n  token?: never;\n  tokens?: never;\n  lastIndex: number;\n} {\n  const [m0, m1] = m;\n\n  if (m === '[' || m === '[^') {\n    const result = getAllTokensForCharClass(pattern, m, lastIndex);\n    return {\n      // Array of all of the char class's tokens\n      tokens: result.tokens,\n      // Jump forward to the end of the char class\n      lastIndex: result.lastIndex,\n    };\n  }\n\n  if (m0 === '\\\\') {\n    if ('AbBGyYzZ'.includes(m1)) {\n      return {\n        token: createAssertionToken(m, m),\n      };\n    }\n    if (/^\\\\g[<']/.test(m)) {\n      if (!/^\\\\g(?:<[^>]+>|'[^']+')$/.test(m)) {\n        throw new Error(`Invalid group name \"${m}\"`);\n      }\n      return {\n        token: createSubroutineToken(m),\n      };\n    }\n    if (/^\\\\k[<']/.test(m)) {\n      if (!/^\\\\k(?:<[^>]+>|'[^']+')$/.test(m)) {\n        throw new Error(`Invalid group name \"${m}\"`);\n      }\n      return {\n        token: createBackreferenceToken(m),\n      };\n    }\n    if (m1 === 'K') {\n      return {\n        token: createDirectiveToken('keep', m),\n      };\n    }\n    if (m1 === 'N' || m1 === 'R') {\n      return {\n        token: createCharacterSetToken('newline', m, {\n          // `\\N` and `\\R` are not actually opposites since the former only excludes `\\n`\n          negate: m1 === 'N',\n        }),\n      };\n    }\n    if (m1 === 'O') {\n      return {\n        token: createCharacterSetToken('any', m),\n      };\n    }\n    if (m1 === 'X') {\n      return {\n        token: createCharacterSetToken('text_segment', m),\n      };\n    }\n    // Run last since it assumes an identity escape as final condition\n    const result = tokenizeSharedEscape(m, {inCharClass: false});\n    return Array.isArray(result) ? {tokens: result} : {token: result};\n  }\n\n  if (m0 === '(') {\n    if (m1 === '*') {\n      return {\n        token: tokenizeNamedCallout(m),\n      };\n    }\n    if (m === '(?{') {\n      throw new Error(`Unsupported callout \"${m}\"`);\n    }\n    // Comment group\n    if (m.startsWith('(?#')) {\n      // Everything except the closing unescaped `)` is included in the match\n      if (pattern[lastIndex] !== ')') {\n        throw new Error('Unclosed comment group \"(?#\"');\n      }\n      return {\n        // Jump forward to after the closing paren\n        lastIndex: lastIndex + 1,\n      };\n    }\n    // Flag modifier (directive or group opener)\n    if (/^\\(\\?[-imx]+[:)]$/.test(m)) {\n      return {\n        token: tokenizeFlagModifier(m, context),\n      };\n    }\n    // --- Remaining group types all reuse current flag x status ---\n    context.pushModX(context.getCurrentModX());\n    context.numOpenGroups++;\n    if (\n      // Unnamed capture if no named captures present and `captureGroup` not enabled, else\n      // noncapturing group\n      (m === '(' && !context.captureGroup) ||\n      // Noncapturing group\n      m === '(?:'\n    ) {\n      return {\n        // For `(`, will later change to `capturing` and add `number` prop if no named captures\n        token: createGroupOpenToken('group', m),\n      };\n    }\n    // Atomic group\n    if (m === '(?>') {\n      return {\n        token: createGroupOpenToken('atomic', m),\n      };\n    }\n    // Lookaround\n    if (m === '(?=' || m === '(?!' || m === '(?<=' || m === '(?<!') {\n      return {\n        token: createGroupOpenToken(m[2] === '<' ? 'lookbehind' : 'lookahead', m, {\n          negate: m.endsWith('!'),\n        }),\n      };\n    }\n    // Unnamed capture when `captureGroup` enabled, or named capture (checked after lookbehind due\n    // to similar syntax)\n    if (\n      (m === '(' && context.captureGroup) ||\n      (m.startsWith('(?<') && m.endsWith('>')) ||\n      (m.startsWith(\"(?'\") && m.endsWith(\"'\"))\n    ) {\n      return {\n        token: createGroupOpenToken('capturing', m, {\n          // Will add `number` prop in a second pass\n          ...(m !== '(' && {name: m.slice(3, -1)}),\n        }),\n      };\n    }\n    if (m.startsWith('(?~')) {\n      if (m === '(?~|') {\n        throw new Error(`Unsupported absence function kind \"${m}\"`);\n      }\n      return {\n        token: createGroupOpenToken('absence_repeater', m),\n      };\n    }\n    if (m === '(?(') {\n      // TODO: Add support\n      throw new Error(`Unsupported conditional \"${m}\"`);\n    }\n    throw new Error(`Invalid or unsupported group option \"${m}\"`);\n  }\n  if (m === ')') {\n    context.popModX();\n    context.numOpenGroups--;\n    if (context.numOpenGroups < 0) {\n      throw new Error('Unmatched \")\"');\n    }\n    return {\n      token: createGroupCloseToken(m),\n    };\n  }\n\n  if (context.getCurrentModX()) {\n    if (m === '#') {\n      // Onig's only line break char is line feed\n      const end = pattern.indexOf('\\n', lastIndex);\n      return {\n        // Jump forward to the end of the comment\n        lastIndex: end === -1 ? pattern.length : end,\n      };\n    }\n    if (/^\\s$/.test(m)) {\n      const re = /\\s+/y;\n      re.lastIndex = lastIndex;\n      const rest = re.exec(pattern);\n      return {\n        // Jump forward to the end of the whitespace\n        lastIndex: rest ? re.lastIndex : lastIndex,\n      };\n    }\n  }\n\n  if (m === '.') {\n    return {\n      token: createCharacterSetToken('dot', m),\n    };\n  }\n\n  if (m === '^' || m === '$') {\n    const kind = context.singleline ? {\n      '^': r`\\A`,\n      '$': r`\\Z`,\n    }[m] : m;\n    return {\n      token: createAssertionToken(kind, m),\n    };\n  }\n\n  if (m === '|') {\n    return {\n      token: createAlternatorToken(m),\n    };\n  }\n\n  if (quantifierRe.test(m)) {\n    return {\n      tokens: splitQuantifierMatch(m),\n    };\n  }\n\n  // `cpOf` asserts that it's a single code point\n  return {\n    token: createCharacterToken(cpOf(m), m),\n  };\n}\n\nfunction getAllTokensForCharClass(pattern: string, opener: CharacterClassOpener, lastIndex: number): {\n  tokens: Array<Token | IntermediateToken>;\n  lastIndex: number;\n} {\n  const tokens: Array<Token | IntermediateToken> = [createCharacterClassOpenToken(opener[1] === '^', opener)];\n  let numCharClassesOpen = 1;\n  let match: RegExpExecArray | null;\n  charClassTokenRe.lastIndex = lastIndex;\n  while ((match = charClassTokenRe.exec(pattern))) {\n    const m = match[0];\n    // Start of nested char class\n    // POSIX classes are handled as a single token; not as a nested char class\n    if (m[0] === '[' && m[1] !== ':') {\n      numCharClassesOpen++;\n      tokens.push(createCharacterClassOpenToken(m[1] === '^', m as CharacterClassOpener));\n    } else if (m === ']') {\n      // Always at least includes the char class opener\n      if (tokens.at(-1)!.type === 'CharacterClassOpen') {\n        // Allow unescaped `]` as leading char\n        tokens.push(createCharacterToken(93, m));\n      } else {\n        numCharClassesOpen--;\n        tokens.push(createCharacterClassCloseToken(m));\n        if (!numCharClassesOpen) {\n          break;\n        }\n      }\n    } else {\n      const result = tokenizeAnyTokenWithinCharClass(m);\n      if (Array.isArray(result)) {\n        tokens.push(...result);\n      } else {\n        tokens.push(result);\n      }\n    }\n  }\n  return {\n    tokens,\n    lastIndex: charClassTokenRe.lastIndex || pattern.length,\n  };\n}\n\nfunction tokenizeAnyTokenWithinCharClass(raw: string): Token | IntermediateToken | Array<Token> {\n  if (raw[0] === '\\\\') {\n    // Assumes an identity escape as final condition\n    return tokenizeSharedEscape(raw, {inCharClass: true});\n  }\n  // POSIX class: `[:name:]` or `[:^name:]`\n  if (raw[0] === '[') {\n    const posix = /\\[:(?<negate>\\^?)(?<name>[a-z]+):\\]/.exec(raw);\n    if (!posix || !PosixClassNames.has(posix.groups!.name)) {\n      throw new Error(`Invalid POSIX class \"${raw}\"`);\n    }\n    return createCharacterSetToken('posix', raw, {\n      value: posix.groups!.name,\n      negate: !!posix.groups!.negate,\n    });\n  }\n  // Range (possibly invalid) or literal hyphen\n  if (raw === '-') {\n    return createCharacterClassHyphenToken(raw);\n  }\n  if (raw === '&&') {\n    return createCharacterClassIntersectorToken(raw);\n  }\n  // `cpOf` asserts that it's a single code point\n  return createCharacterToken(cpOf(raw), raw);\n}\n\n// Tokens shared by base syntax and char class syntax that start with `\\`\nfunction tokenizeSharedEscape(raw: string, {inCharClass}: {inCharClass: boolean}): Token | IntermediateToken | Array<Token> {\n  const char1 = raw[1];\n  if (char1 === 'c' || char1 === 'C') {\n    return tokenizeControlCharacter(raw);\n  }\n  if ('dDhHsSwW'.includes(char1)) {\n    return tokenizeShorthand(raw);\n  }\n  if (raw.startsWith(r`\\o{`)) {\n    throw new Error(`Incomplete, invalid, or unsupported octal code point \"${raw}\"`);\n  }\n  if (/^\\\\[pP]\\{/.test(raw)) {\n    if (raw.length === 3) {\n      throw new Error(`Incomplete or invalid Unicode property \"${raw}\"`);\n    }\n    return tokenizeUnicodeProperty(raw);\n  }\n  // Hex UTF-8 encoded byte sequence\n  if (/^\\\\x[89A-Fa-f]\\p{AHex}/u.test(raw)) {\n    try {\n      const bytes = raw.split(/\\\\x/).slice(1).map(hex => parseInt(hex, 16));\n      const decoded = new TextDecoder('utf-8', {\n        ignoreBOM: true,\n        fatal: true,\n      }).decode(new Uint8Array(bytes));\n      const encoder = new TextEncoder();\n      const tokens = [...decoded].map(char => {\n        // Since this regenerates `raw`, it might have different casing for hex A-F than the input\n        const raw = [...encoder.encode(char)].map(byte => `\\\\x${byte.toString(16)}`).join('');\n        return createCharacterToken(cpOf(char), raw);\n      });\n      return tokens;\n    } catch {\n      throw new Error(`Multibyte code \"${raw}\" incomplete or invalid in Oniguruma`);\n    }\n  }\n  if (char1 === 'u' || char1 === 'x') {\n    return createCharacterToken(getValidatedHexCharCode(raw), raw);\n  }\n  if (EscapeCharCodes.has(char1)) {\n    return createCharacterToken(EscapeCharCodes.get(char1)!, raw);\n  }\n  // Escaped number: backref (possibly invalid), null, octal, or identity escape, possibly followed\n  // by 1-2 literal digits\n  if (/\\d/.test(char1)) {\n    return createEscapedNumberToken(inCharClass, raw);\n  }\n  if (raw === '\\\\') {\n    throw new Error(r`Incomplete escape \"\\\"`);\n  }\n  // Meta `\\M-x` and `\\M-\\C-x` are unsupported; avoid treating as an identity escape\n  if (char1 === 'M') {\n    // TODO: Add support. See:\n    // - <github.com/kkos/oniguruma/blob/master/doc/SYNTAX.md#12-onig_syn_op2_esc_capital_m_bar_meta-enable-m-x>\n    // - <github.com/kkos/oniguruma/blob/43a8c3f3daf263091f3a74019d4b32ebb6417093/src/regparse.c#L4695>\n    // - <github.com/ammar/regexp_parser/blob/8851030feda68223d74f502335fb254a20d77016/lib/regexp_parser/expression/classes/escape_sequence.rb#L75>\n    throw new Error(`Unsupported meta \"${raw}\"`);\n  }\n  // Identity escape; count code point length\n  if ([...raw].length === 2) {\n    return createCharacterToken(raw.codePointAt(1)!, raw);\n  }\n  throw new Error(`Unexpected escape \"${raw}\"`);\n}\n\n// --------------------------------\n// --- Token creation and types ---\n// --------------------------------\n\ntype AlternatorToken = {\n  type: 'Alternator';\n  raw: '|';\n};\nfunction createAlternatorToken(raw: '|'): AlternatorToken {\n  return {\n    type: 'Alternator',\n    raw,\n  };\n}\n\ntype AssertionToken = {\n  type: 'Assertion';\n  kind: string;\n  raw: string;\n};\nfunction createAssertionToken(kind: string, raw: string): AssertionToken {\n  return {\n    type: 'Assertion',\n    kind,\n    raw,\n  };\n}\n\ntype BackreferenceToken = {\n  type: 'Backreference';\n  raw: string;\n};\nfunction createBackreferenceToken(raw: string): BackreferenceToken {\n  return {\n    type: 'Backreference',\n    raw,\n  };\n}\n\ntype CharacterToken = {\n  type: 'Character';\n  value: number;\n  raw: string;\n};\nfunction createCharacterToken(value: number, raw: string): CharacterToken {\n  return {\n    type: 'Character',\n    value,\n    raw,\n  };\n}\n\ntype CharacterClassCloseToken = {\n  type: 'CharacterClassClose';\n  raw: ']';\n};\nfunction createCharacterClassCloseToken(raw: ']'): CharacterClassCloseToken {\n  return {\n    type: 'CharacterClassClose',\n    raw,\n  };\n}\n\ntype CharacterClassHyphenToken = {\n  type: 'CharacterClassHyphen';\n  raw: '-';\n};\nfunction createCharacterClassHyphenToken(raw: '-'): CharacterClassHyphenToken {\n  return {\n    type: 'CharacterClassHyphen',\n    raw,\n  };\n}\n\ntype CharacterClassIntersectorToken = {\n  type: 'CharacterClassIntersector';\n  raw: '&&';\n};\nfunction createCharacterClassIntersectorToken(raw: '&&'): CharacterClassIntersectorToken {\n  return {\n    type: 'CharacterClassIntersector',\n    raw,\n  };\n}\n\ntype CharacterClassOpenToken = {\n  type: 'CharacterClassOpen';\n  negate: boolean;\n  raw: CharacterClassOpener;\n};\ntype CharacterClassOpener = '[' | '[^';\nfunction createCharacterClassOpenToken(negate: boolean, raw: CharacterClassOpener): CharacterClassOpenToken {\n  return {\n    type: 'CharacterClassOpen',\n    negate,\n    raw,\n  };\n}\n\ntype CharacterSetToken = {\n  type: 'CharacterSet';\n  kind: TokenCharacterSetKind;\n  value?: string;\n  negate?: boolean;\n  raw: string;\n};\nfunction createCharacterSetToken(\n  kind: TokenCharacterSetKind,\n  raw: string,\n  options: {\n    value?: string;\n    negate?: boolean;\n  } = {}\n): CharacterSetToken {\n  return {\n    type: 'CharacterSet',\n    kind,\n    ...options,\n    raw,\n  };\n}\n\ntype DirectiveToken = {\n  type: 'Directive';\n  raw: string;\n} & ({\n  kind: 'keep';\n  flags?: never;\n} | {\n  kind: 'flags';\n  flags: FlagGroupModifiers;\n});\nfunction createDirectiveToken(kind: TokenDirectiveKind, raw: string, options: {flags?: FlagGroupModifiers} = {}): DirectiveToken {\n  if (kind === 'keep') {\n    return {\n      type: 'Directive',\n      kind,\n      raw,\n    };\n  }\n  return {\n    type: 'Directive',\n    kind,\n    flags: throwIfNullish(options.flags),\n    raw,\n  };\n}\n\ntype EscapedNumberToken = {\n  type: 'EscapedNumber';\n  inCharClass: boolean;\n  raw: string;\n};\n/**\nIntermediate representation only; will become a `Backreference` or one or more `Character`s.\n*/\nfunction createEscapedNumberToken(inCharClass: boolean, raw: string): EscapedNumberToken {\n  return {\n    type: 'EscapedNumber',\n    inCharClass,\n    raw,\n  };\n}\n\ntype GroupCloseToken = {\n  type: 'GroupClose';\n  raw: ')';\n};\nfunction createGroupCloseToken(raw: ')'): GroupCloseToken {\n  return {\n    type: 'GroupClose',\n    raw,\n  };\n}\n\ntype GroupOpenToken = {\n  type: 'GroupOpen';\n  kind: TokenGroupOpenKind;\n  flags?: FlagGroupModifiers;\n  name?: string;\n  number?: number;\n  negate?: boolean;\n  raw: string;\n};\nfunction createGroupOpenToken(\n  kind: TokenGroupOpenKind,\n  raw: string,\n  options: {\n    flags?: FlagGroupModifiers;\n    name?: string;\n    number?: number;\n    negate?: boolean;\n  } = {}\n): GroupOpenToken {\n  return {\n    type: 'GroupOpen',\n    kind,\n    ...options,\n    raw,\n  };\n}\n\ntype NamedCalloutToken = {\n  type: 'NamedCallout';\n  kind: TokenNamedCalloutKind;\n  tag: string | null;\n  arguments: Array<string | number> | null;\n  raw: string;\n};\nfunction createNamedCalloutToken(\n  kind: TokenNamedCalloutKind,\n  tag: string | null,\n  args: Array<string | number> | null,\n  raw: string\n): NamedCalloutToken {\n  return {\n    type: 'NamedCallout',\n    kind,\n    tag,\n    arguments: args,\n    raw,\n  };\n};\n\ntype QuantifierToken = {\n  type: 'Quantifier';\n  kind: TokenQuantifierKind;\n  min: number;\n  max: number;\n  raw: string;\n};\nfunction createQuantifierToken(\n  kind: TokenQuantifierKind,\n  min: number,\n  max: number,\n  raw: string\n): QuantifierToken {\n  return {\n    type: 'Quantifier',\n    kind,\n    min,\n    max,\n    raw,\n  };\n}\n\ntype SubroutineToken = {\n  type: 'Subroutine';\n  raw: string;\n};\nfunction createSubroutineToken(raw: string): SubroutineToken {\n  return {\n    type: 'Subroutine',\n    raw,\n  };\n}\n\n// ---------------\n// --- Helpers ---\n// ---------------\n\ntype FlagProperties = {\n  ignoreCase: boolean;\n  dotAll: boolean;\n  extended: boolean;\n  digitIsAscii: boolean;\n  posixIsAscii: boolean;\n  spaceIsAscii: boolean;\n  wordIsAscii: boolean;\n  textSegmentMode: 'grapheme' | 'word' | null;\n};\n\ntype FlagGroupModifiers = {\n  enable?: FlagGroupSwitches;\n  disable?: FlagGroupSwitches;\n};\n\ntype FlagGroupSwitches = {\n  ignoreCase?: true;\n  dotAll?: true;\n  extended?: true;\n};\n\nconst CalloutNames = new Set<Uppercase<Exclude<TokenNamedCalloutKind, 'custom'>>>([\n  'COUNT',\n  'CMP',\n  'ERROR',\n  'FAIL',\n  'MAX',\n  'MISMATCH',\n  'SKIP',\n  'TOTAL_COUNT',\n]);\n\nconst EscapeCharCodes = new Map([\n  ['a',  7], // alert/bell (Not available in JS)\n  ['b',  8], // backspace (only in char classes)\n  ['e', 27], // escape (Not available in JS)\n  ['f', 12], // form feed\n  ['n', 10], // line feed\n  ['r', 13], // carriage return\n  ['t',  9], // horizontal tab\n  ['v', 11], // vertical tab\n]);\n\n// Expects `\\cx` or `\\C-x`\nfunction tokenizeControlCharacter(raw: string): CharacterToken {\n  const char = raw[1] === 'c' ? raw[2] : raw[3];\n  if (!char || !/[A-Za-z]/.test(char)) {\n    // Unlike JS, Onig allows any char to follow `\\c` or `\\C-`, but this is an extreme edge case\n    // TODO: Add support. See:\n    // - <github.com/kkos/oniguruma/blob/master/doc/SYNTAX.md#11-onig_syn_op2_esc_capital_c_bar_control-enable-c-x>\n    // - <github.com/kkos/oniguruma/blob/43a8c3f3daf263091f3a74019d4b32ebb6417093/src/regparse.c#L4695>\n    throw new Error(`Unsupported control character \"${raw}\"`);\n  }\n  return createCharacterToken(cpOf(char.toUpperCase()) - 64, raw);\n}\n\nfunction tokenizeFlagModifier(raw: string, context: Context): DirectiveToken | GroupOpenToken {\n  // Allows multiple `-` and solo `-` without `on` or `off` flags\n  let {on, off} = /^\\(\\?(?<on>[imx]*)(?:-(?<off>[-imx]*))?/.exec(raw)!.groups as {on: string, off: string | undefined};\n  off ??= '';\n  // Flag x is used directly by the tokenizer since it changes how to interpret the pattern\n  const isXOn = (context.getCurrentModX() || on.includes('x')) && !off.includes('x');\n  const enabledFlags = getFlagGroupSwitches(on);\n  const disabledFlags = getFlagGroupSwitches(off);\n  const flagChanges: FlagGroupModifiers = {};\n  enabledFlags && (flagChanges.enable = enabledFlags);\n  disabledFlags && (flagChanges.disable = disabledFlags);\n  // Flag directive; ex: `(?im-x)`\n  if (raw.endsWith(')')) {\n    // Replace flag x value until the end of the current group\n    context.replaceCurrentModX(isXOn);\n    // Can't remove flag directives without flags like `(?-)`; they affect following quantifiers\n    return createDirectiveToken('flags', raw, {\n      flags: flagChanges,\n    });\n  }\n  // Flag group opener; ex: `(?im-x:`\n  if (raw.endsWith(':')) {\n    context.pushModX(isXOn);\n    context.numOpenGroups++;\n    return createGroupOpenToken('group', raw, {\n      ...((enabledFlags || disabledFlags) && {flags: flagChanges}),\n    });\n  }\n  throw new Error(`Unexpected flag modifier \"${raw}\"`);\n}\n\nfunction tokenizeNamedCallout(raw: string): NamedCalloutToken {\n  const callout = /\\(\\*(?<name>[A-Za-z_]\\w*)?(?:\\[(?<tag>(?:[A-Za-z_]\\w*)?)\\])?(?:\\{(?<args>[^}]*)\\})?\\)/.exec(raw);\n  if (!callout) {\n    throw new Error(`Incomplete or invalid named callout \"${raw}\"`);\n  }\n  const {name, tag, args} = callout.groups as Partial<{\n    name: string;\n    tag: string;\n    args: string;\n  }>;\n  if (!name) {\n    throw new Error(`Invalid named callout \"${raw}\"`);\n  }\n  if (tag === '') {\n    throw new Error(`Named callout tag with empty value not allowed \"${raw}\"`);\n  }\n  const argsArray: Array<string | number> = args ?\n    args.split(',').\n      // Onig skips over/ignores redundant/unnecessary commas\n      filter(arg => arg !== '').\n      map(arg => /^[+-]?\\d+$/.test(arg) ? +arg : arg) :\n    [];\n  const [arg0, arg1, arg2] = argsArray;\n  const kind: TokenNamedCalloutKind = CalloutNames.has(name as Uppercase<Exclude<TokenNamedCalloutKind, 'custom'>>) ?\n    name.toLowerCase() as TokenNamedCalloutKind :\n    'custom';\n  switch (kind) {\n    case 'fail':\n    case 'mismatch':\n    case 'skip':\n      if (argsArray.length > 0) {\n        throw new Error(`Named callout arguments not allowed \"${argsArray}\"`);\n      }\n      break;\n    case 'error':\n      if (argsArray.length > 1) {\n        throw new Error(`Named callout allows only one argument \"${argsArray}\"`);\n      }\n      if (typeof arg0 === 'string') {\n        throw new Error(`Named callout argument must be a number \"${arg0}\"`);\n      }\n      break;\n    case 'max':\n      if (!argsArray.length || argsArray.length > 2) {\n        throw new Error(`Named callout must have one or two arguments \"${argsArray}\"`);\n      }\n      if (typeof arg0 === 'string' && !/^[A-Za-z_]\\w*$/.test(arg0)) {\n        throw new Error(`Named callout argument one must be a tag or number \"${arg0}\"`);\n      }\n      if (argsArray.length === 2 && (typeof arg1 === 'number' || !/^[<>X]$/.test(arg1))) {\n        throw new Error(`Named callout optional argument two must be '<', '>', or 'X' \"${arg1}\"`);\n      }\n      break;\n    case 'count':\n    case 'total_count':\n      if (argsArray.length > 1) {\n        throw new Error(`Named callout allows only one argument \"${argsArray}\"`);\n      }\n      if (argsArray.length === 1 && (typeof arg0 === 'number' || !/^[<>X]$/.test(arg0))) {\n        throw new Error(`Named callout optional argument must be '<', '>', or 'X' \"${arg0}\"`);\n      }\n      break;\n    case 'cmp':\n      if (argsArray.length !== 3) {\n        throw new Error(`Named callout must have three arguments \"${argsArray}\"`);\n      }\n      if (typeof arg0 === 'string' && !/^[A-Za-z_]\\w*$/.test(arg0)) {\n        throw new Error(`Named callout argument one must be a tag or number \"${arg0}\"`);\n      }\n      if (typeof arg1 === 'number' || !/^(?:[<>!=]=|[<>])$/.test(arg1)) {\n        throw new Error(`Named callout argument two must be '==', '!=', '>', '<', '>=', or '<=' \"${arg1}\"`);\n      }\n      if (typeof arg2 === 'string' && !/^[A-Za-z_]\\w*$/.test(arg2)) {\n        throw new Error(`Named callout argument three must be a tag or number \"${arg2}\"`);\n      }\n      break;\n    case 'custom':\n      // TODO: Can support custom callout names via a new option that allows providing a list of\n      // allowed, non-built-in names\n      throw new Error(`Undefined callout name \"${name}\"`);\n    default:\n      throw new Error(`Unexpected named callout kind \"${kind}\"`);\n  }\n  // TODO: If supporting custom callout names in the future (with an added `name` property for\n  // `NamedCalloutToken`), will need to set `name` to `null` if `kind` isn't `'custom'`\n  return createNamedCalloutToken(kind, tag ?? null, args?.split(',') ?? null, raw);\n}\n\nfunction tokenizeQuantifier(raw: string): QuantifierToken {\n  let kind: TokenQuantifierKind = null!;\n  let min: number;\n  let max: number;\n  if (raw[0] === '{') {\n    const {minStr, maxStr} =\n      /^\\{(?<minStr>\\d*)(?:,(?<maxStr>\\d*))?/.exec(raw)!.groups as {minStr: string, maxStr: string | undefined};\n    const limit = 100_000;\n    if (+minStr > limit || (maxStr && +maxStr > limit)) {\n      throw new Error('Quantifier value unsupported in Oniguruma');\n    }\n    min = +minStr;\n    max = maxStr === undefined ? +minStr : (maxStr === '' ? Infinity : +maxStr);\n    // By default, Onig doesn't support making interval quantifiers possessive with a `+` suffix;\n    // uses reversed range instead\n    if (min > max) {\n      kind = 'possessive';\n      [min, max] = [max, min];\n    }\n    if (raw.endsWith('?')) {\n      if (kind === 'possessive') {\n        // TODO: <github.com/slevithan/oniguruma-parser/issues/10>\n        throw new Error('Unsupported possessive interval quantifier chain with \"?\"');\n      }\n      kind = 'lazy';\n    } else if (!kind) {\n      kind = 'greedy';\n    }\n  } else {\n    min = raw[0] === '+' ? 1 : 0;\n    max = raw[0] === '?' ? 1 : Infinity;\n    kind = raw[1] === '+' ? 'possessive' : (raw[1] === '?' ? 'lazy' : 'greedy');\n  }\n  return createQuantifierToken(kind, min, max, raw);\n}\n\nfunction tokenizeShorthand(raw: string): CharacterSetToken {\n  const lower = raw[1].toLowerCase();\n  return createCharacterSetToken({\n    'd': 'digit',\n    'h': 'hex',\n    's': 'space',\n    'w': 'word',\n  }[lower] as TokenCharacterSetKind, raw, {\n    negate: raw[1] !== lower,\n  });\n}\n\nfunction tokenizeUnicodeProperty(raw: string): CharacterSetToken {\n  const {p, neg, value} = /^\\\\(?<p>[pP])\\{(?<neg>\\^?)(?<value>[^}]+)/.exec(raw)!.groups!;\n  const negate = (p === 'P' && !neg) || (p === 'p' && !!neg);\n  return createCharacterSetToken('property', raw, {\n    value,\n    negate,\n  });\n}\n\nfunction getFlagGroupSwitches(flags: string): FlagGroupSwitches | null {\n  // Don't include `false` for flags that aren't included\n  const obj: FlagGroupSwitches = {};\n  if (flags.includes('i')) {\n    obj.ignoreCase = true;\n  }\n  if (flags.includes('m')) {\n    // Onig flag m is equivalent to JS flag s\n    obj.dotAll = true;\n  }\n  if (flags.includes('x')) {\n    obj.extended = true;\n  }\n  return Object.keys(obj).length ? obj : null;\n}\n\nfunction getFlagProperties(flags: string): FlagProperties {\n  const flagProperties: FlagProperties = {\n    ignoreCase: false,\n    dotAll: false,\n    extended: false,\n    digitIsAscii: false,\n    posixIsAscii: false,\n    spaceIsAscii: false,\n    wordIsAscii: false,\n    textSegmentMode: null,\n  };\n  for (let i = 0; i < flags.length; i++) {\n    const char = flags[i];\n    if (!'imxDPSWy'.includes(char)) {\n      throw new Error(`Invalid flag \"${char}\"`);\n    }\n    // Flags y{g}, y{w} are currently only supported via the top-level `flags` option\n    if (char === 'y') {\n      if (!/^y{[gw]}/.test(flags.slice(i))) {\n        throw new Error('Invalid or unspecified flag \"y\" mode');\n      }\n      // If text segment mode flags appear multiple times, use the last one\n      flagProperties.textSegmentMode = flags[i + 2] === 'g' ? 'grapheme' : 'word';\n      i += 3;\n      continue;\n    }\n    flagProperties[{\n      i: 'ignoreCase',\n      // Flag m is called `multiline` in Onig, but that has a different meaning in JS. Onig flag m\n      // is equivalent to JS flag s\n      m: 'dotAll',\n      // Flag x is fully handled during tokenization\n      x: 'extended',\n      // Flags D, P, S, W are currently only supported via the top-level `flags` option\n      D: 'digitIsAscii',\n      P: 'posixIsAscii',\n      S: 'spaceIsAscii',\n      W: 'wordIsAscii',\n    }[char] as Exclude<keyof FlagProperties, 'textSegmentMode'>] = true;\n  }\n  return flagProperties;\n}\n\n// - Unenclosed `\\xNN` above 0x7F is handled elsewhere as a UTF-8 encoded byte sequence\n// - Enclosed `\\x{}` with value above 0x10FFFF is allowed here; handled in the parser\nfunction getValidatedHexCharCode(raw: string): number {\n  // Note: Onig 6.9.10 and earlier have a bug where pattern-terminating `\\u` and `\\x` are treated\n  // as identity escapes; see <github.com/kkos/oniguruma/issues/343>. Don't emulate these bugs.\n  // Additionally, Onig treats bare `\\x` as equivalent to `\\0`, and treats incomplete `\\x{` (with\n  // the brace but not immediately followed by a hex digit) as an identity escape, so e.g. `\\x{`\n  // matches `x{` and `^\\x{,2}$` matches `xx`, but `\\x{2,}` and `\\x{0,2}` are errors. Currently,\n  // this library treats all such cases as errors\n  if (/^(?:\\\\u(?!\\p{AHex}{4})|\\\\x(?!\\p{AHex}{1,2}|\\{\\p{AHex}{1,8}\\}))/u.test(raw)) {\n    throw new Error(`Incomplete or invalid escape \"${raw}\"`);\n  }\n  // Might include leading 0s\n  const hex = raw[2] === '{' ?\n    /^\\\\x\\{\\s*(?<hex>\\p{AHex}+)/u.exec(raw)!.groups!.hex :\n    raw.slice(2);\n  return parseInt(hex, 16);\n}\n\n// Value is 1-3 digits, which can be a backref (possibly invalid), null, octal, or identity escape,\n// possibly followed by 1-2 literal digits\nfunction splitEscapedNumberToken(token: EscapedNumberToken, numCaptures: number): Array<BackreferenceToken> | Array<CharacterToken> {\n  const {raw, inCharClass} = token;\n  // Keep any leading 0s since they indicate octal\n  const value = raw.slice(1);\n  // Backref (possibly invalid)\n  if (\n    !inCharClass &&\n    ( // Single digit 1-9 outside a char class is always treated as a backref\n      (value !== '0' && value.length === 1) ||\n      // Leading 0 makes it octal; backrefs can't include following literal digits\n      (value[0] !== '0' && +value <= numCaptures)\n    )\n  ) {\n    return [createBackreferenceToken(raw)];\n  }\n  const tokens: Array<CharacterToken> = [];\n  // Returns 1-3 matches; the first (only) might be octal\n  const matches = value.match(/^[0-7]+|\\d/g)!;\n  for (let i = 0; i < matches.length; i++) {\n    const m = matches[i];\n    let value: number;\n    // Octal digits are 0-7\n    if (i === 0 && m !== '8' && m !== '9') {\n      value = parseInt(m, 8);\n      if (value > 0o177) {\n        // Octal UTF-8 encoded byte sequence; not yet supported\n        throw new Error(r`Octal encoded byte above 177 unsupported \"${raw}\"`);\n      }\n    } else {\n      value = cpOf(m);\n    }\n    tokens.push(createCharacterToken(value, (i === 0 ? '\\\\' : '') + m));\n  }\n  return tokens;\n}\n\nfunction splitQuantifierMatch(str: string): Array<QuantifierToken> {\n  const tokens: Array<QuantifierToken> = [];\n  // `str` is one or more quantifiers in a chain. It can't be split by a regex because of one edge\n  // case where we have to compare numeric values: although `{1,2}?` is a single, lazy quantifier,\n  // a reversed (possessive) interval quantifier like `{2,1}` can't be both possessive and lazy, so\n  // any following `?`, `??`, or `?+` is a second, chained quantifier (i.e., `{2,1}?` is equivalent\n  // to `{2,1}{0,1}` or `{2,0}`)\n  const withG = new RegExp(quantifierRe, 'gy');\n  let match: RegExpExecArray | null;\n  while ((match = withG.exec(str))) {\n    const m = match[0];\n    if (m[0] === '{') {\n      // Doesn't need to handle fixed `{n}`, infinite max `{n,}`, or implicit zero min `{,n}`\n      // since, according to Onig syntax rules, those can't be possessive\n      const parts = /^\\{(?<min>\\d+),(?<max>\\d+)\\}\\??$/.exec(m);\n      if (parts) {\n        const {min, max} = parts.groups as {min: string, max: string};\n        if (+min > +max && m.endsWith('?')) {\n          // Leave the trailing `?` for the next match\n          withG.lastIndex--;\n          tokens.push(tokenizeQuantifier(m.slice(0, -1)));\n          continue;\n        }\n      }\n    }\n    tokens.push(tokenizeQuantifier(m));\n  }\n  return tokens;\n}\n\nexport {\n  type AlternatorToken,\n  type AssertionToken,\n  type BackreferenceToken,\n  type CharacterToken,\n  type CharacterClassCloseToken,\n  type CharacterClassHyphenToken,\n  type CharacterClassIntersectorToken,\n  type CharacterClassOpenToken,\n  type CharacterSetToken,\n  type DirectiveToken,\n  type FlagGroupModifiers,\n  type FlagProperties,\n  type GroupCloseToken,\n  type GroupOpenToken,\n  type NamedCalloutToken,\n  type QuantifierToken,\n  type SubroutineToken,\n  type Token,\n  type TokenCharacterSetKind,\n  type TokenDirectiveKind,\n  type TokenNamedCalloutKind,\n  type TokenQuantifierKind,\n  tokenize,\n};\n", "import type {AlternativeContainerNode, Node, ParentNode, QuantifiableNode} from './parse.js';\n\ntype KeysOfUnion<T> = T extends T ? keyof T: never;\ntype Props = {[key in KeysOfUnion<Node>]?: any} & {type?: Node['type']};\n\nfunction hasOnlyChild(node: ParentNode & {body: Array<Node>}, props?: Props): boolean {\n  if (!Array.isArray(node.body)) {\n    throw new Error('Expected node with body array');\n  }\n  if (node.body.length !== 1) {\n    return false;\n  }\n  const kid = node.body[0] as Props;\n  return !props || Object.keys(props).every(key => props[key as keyof Props] === kid[key as keyof Props]);\n}\n\nfunction isAlternativeContainer(node: Node): node is AlternativeContainerNode {\n  if (\n    !alternativeContainerTypes.has(node.type) ||\n    (node.type === 'AbsenceFunction' && node.kind !== 'repeater')\n  ) {\n    return false;\n  }\n  return true;\n}\nconst alternativeContainerTypes = new Set<Node['type']>([\n  'AbsenceFunction',\n  'CapturingGroup',\n  'Group',\n  'LookaroundAssertion',\n  'Regex',\n]);\n\nfunction isQuantifiable(node: Node): node is QuantifiableNode {\n  return quantifiableTypes.has(node.type);\n}\nconst quantifiableTypes = new Set<Node['type']>([\n  'AbsenceFunction',\n  'Backreference',\n  'CapturingGroup',\n  'Character',\n  'CharacterClass',\n  'CharacterSet',\n  'Group',\n  'Quantifier',\n  'Subroutine',\n]);\n\nexport {\n  hasOnlyChild,\n  isAlternativeContainer,\n  isQuantifiable,\n};\n", "import type {AssertionToken, BackreferenceToken, CharacterClassHyphenToken, CharacterClassOpenToken, CharacterSetToken, FlagGroupModifiers, FlagProperties, GroupOpenToken, QuantifierToken, SubroutineToken, Token, TokenCharacterSetKind, TokenDirectiveKind, TokenNamedCalloutKind, TokenQuantifierKind} from '../tokenizer/tokenize.js';\nimport {tokenize} from '../tokenizer/tokenize.js';\nimport {cpOf, getOrInsert, PosixClassNames, r, throwIfNullish} from '../utils.js';\nimport {hasOnlyChild, isAlternativeContainer, isQuantifiable} from './node-utils.js';\n\n// Watch out for the DOM `Node` interface!\ntype Node =\n  AbsenceFunctionNode |\n  AlternativeNode |\n  AssertionNode |\n  BackreferenceNode |\n  CapturingGroupNode |\n  CharacterNode |\n  CharacterClassNode |\n  CharacterClassRangeNode |\n  CharacterSetNode |\n  DirectiveNode |\n  FlagsNode |\n  GroupNode |\n  LookaroundAssertionNode |\n  NamedCalloutNode |\n  QuantifierNode |\n  RegexNode |\n  SubroutineNode;\n\ntype OnigurumaAst = RegexNode;\n\ntype ParentNode =\n  AlternativeContainerNode |\n  AlternativeNode |\n  CharacterClassNode |\n  CharacterClassRangeNode |\n  QuantifierNode;\n\n// See also `isAlternativeContainer`\ntype AlternativeContainerNode =\n  AbsenceFunctionNode | // Some sub-kinds aren't alternative containers\n  CapturingGroupNode |\n  GroupNode |\n  LookaroundAssertionNode |\n  RegexNode;\n\ntype AlternativeElementNode =\n  AbsenceFunctionNode |\n  AssertionNode |\n  BackreferenceNode |\n  CapturingGroupNode |\n  CharacterNode |\n  CharacterClassNode |\n  CharacterSetNode |\n  DirectiveNode |\n  GroupNode |\n  LookaroundAssertionNode |\n  NamedCalloutNode |\n  QuantifierNode |\n  SubroutineNode;\n\ntype CharacterClassElementNode =\n  CharacterNode |\n  CharacterClassNode |\n  CharacterClassRangeNode |\n  CharacterSetNode;\n\n// See also `isQuantifiable`\ntype QuantifiableNode =\n  AbsenceFunctionNode |\n  BackreferenceNode |\n  CapturingGroupNode |\n  CharacterNode |\n  CharacterClassNode |\n  CharacterSetNode |\n  GroupNode |\n  QuantifierNode |\n  SubroutineNode;\n\n// TODO: Support remaining kinds; see <github.com/slevithan/oniguruma-to-es/issues/13>\ntype NodeAbsenceFunctionKind =\n  'repeater';\n\ntype NodeAssertionKind =\n  'line_end' |\n  'line_start' |\n  'search_start' |\n  'string_end' |\n  'string_end_newline' |\n  'string_start' |\n  'text_segment_boundary' |\n  'word_boundary';\n\ntype NodeCharacterClassKind =\n  'union' |\n  'intersection';\n\ntype NodeCharacterSetKind = TokenCharacterSetKind;\n\ntype NodeDirectiveKind = TokenDirectiveKind;\n\ntype NodeLookaroundAssertionKind =\n  'lookahead' |\n  'lookbehind';\n\ntype NodeNamedCalloutKind = TokenNamedCalloutKind;\n\ntype NodeQuantifierKind = TokenQuantifierKind;\n\ntype UnicodePropertyMap = Map<string, string>;\n\ntype Context = {\n  capturingGroups: Array<CapturingGroupNode>;\n  hasNumberedRef: boolean;\n  namedGroupsByName: Map<string, Array<CapturingGroupNode>>;\n  nextIndex: number;\n  normalizeUnknownPropertyNames: boolean;\n  parent: ParentNode;\n  skipBackrefValidation: boolean;\n  skipLookbehindValidation: boolean;\n  skipPropertyNameValidation: boolean;\n  subroutines: Array<SubroutineNode>;\n  tokens: Array<Token>;\n  unicodePropertyMap: UnicodePropertyMap | null;\n  walk: (parent: ParentNode, state: State) => Node;\n};\n\n// Top-level `walk` calls are given empty state; nested calls can add data specific to their `walk`\ntype State = {\n  isCheckingRangeEnd?: boolean;\n  isInAbsenceFunction?: boolean;\n  isInLookbehind?: boolean;\n  isInNegLookbehind?: boolean;\n};\n\ntype ParseOptions = {\n  flags?: string;\n  normalizeUnknownPropertyNames?: boolean;\n  rules?: {\n    captureGroup?: boolean;\n    singleline?: boolean;\n  };\n  skipBackrefValidation?: boolean;\n  skipLookbehindValidation?: boolean;\n  skipPropertyNameValidation?: boolean;\n  unicodePropertyMap?: UnicodePropertyMap | null;\n};\n\nfunction parse(pattern: string, options: ParseOptions = {}): OnigurumaAst {\n  const opts: Required<ParseOptions> = {\n    flags: '',\n    normalizeUnknownPropertyNames: false,\n    skipBackrefValidation: false,\n    skipLookbehindValidation: false,\n    skipPropertyNameValidation: false,\n    // `toOnigurumaAst` provides `OnigUnicodePropertyMap`, but it can be custom or `null`\n    unicodePropertyMap: null,\n    ...options,\n    rules: {\n      captureGroup: false, // `ONIG_OPTION_CAPTURE_GROUP`\n      singleline: false, // `ONIG_OPTION_SINGLELINE`\n      ...options.rules,\n    },\n  };\n  const tokenized = tokenize(pattern, {\n    // Limit to the tokenizer's options\n    flags: opts.flags,\n    rules: {\n      captureGroup: opts.rules.captureGroup,\n      singleline: opts.rules.singleline,\n    },\n  });\n  const walk: Context['walk'] = (parent, state) => {\n    const token = tokenized.tokens[context.nextIndex];\n    context.parent = parent;\n    // Advance for the next iteration\n    context.nextIndex++;\n    switch (token.type) {\n      case 'Alternator':\n        // Top-level only; groups handle their own alternators\n        return createAlternative();\n      case 'Assertion':\n        return parseAssertion(token);\n      case 'Backreference':\n        return parseBackreference(token, context);\n      case 'Character':\n        return createCharacter(token.value, {useLastValid: !!state.isCheckingRangeEnd});\n      case 'CharacterClassHyphen':\n        return parseCharacterClassHyphen(token, context, state);\n      case 'CharacterClassOpen':\n        return parseCharacterClassOpen(token, context, state);\n      case 'CharacterSet':\n        return parseCharacterSet(token, context);\n      case 'Directive':\n        return createDirective(token.kind, {flags: token.flags});\n      case 'GroupOpen':\n        return parseGroupOpen(token, context, state);\n      case 'NamedCallout':\n        return createNamedCallout(token.kind, token.tag, token.arguments);\n      case 'Quantifier':\n        return parseQuantifier(token, context);\n      case 'Subroutine':\n        return parseSubroutine(token, context);\n      default:\n        throw new Error(`Unexpected token type \"${token.type}\"`);\n    }\n  }\n  const context: Context = {\n    capturingGroups: [],\n    hasNumberedRef: false,\n    namedGroupsByName: new Map(),\n    nextIndex: 0,\n    normalizeUnknownPropertyNames: opts.normalizeUnknownPropertyNames,\n    parent: null!, // Assigned by `walk`\n    skipBackrefValidation: opts.skipBackrefValidation,\n    skipLookbehindValidation: opts.skipLookbehindValidation,\n    skipPropertyNameValidation: opts.skipPropertyNameValidation,\n    subroutines: [],\n    tokens: tokenized.tokens,\n    unicodePropertyMap: opts.unicodePropertyMap,\n    walk,\n  };\n\n  // ## AST construction from tokens\n  const ast = createRegex(createFlags(tokenized.flags));\n  let top = ast.body[0]; // First alt\n  while (context.nextIndex < tokenized.tokens.length) {\n    const node = walk(top, {});\n    if (node.type === 'Alternative') {\n      ast.body.push(node);\n      top = node;\n    } else {\n      top.body.push(node as AlternativeElementNode);\n    }\n  }\n\n  // ## Validation that requires knowledge about the complete pattern\n  // `context` updated by the preceding `walk` loop\n  const {capturingGroups, hasNumberedRef, namedGroupsByName, subroutines} = context;\n  if (hasNumberedRef && namedGroupsByName.size && !opts.rules.captureGroup) {\n    throw new Error('Numbered backref/subroutine not allowed when using named capture');\n  }\n  for (const {ref} of subroutines) {\n    if (typeof ref === 'number') {\n      // Relative nums are already resolved\n      if (ref > capturingGroups.length) {\n        throw new Error(`Subroutine uses a group number that's not defined`);\n      }\n      if (ref) {\n        capturingGroups[ref - 1].isSubroutined = true;\n      }\n    } else if (!namedGroupsByName.has(ref)) {\n      throw new Error(r`Subroutine uses a group name that's not defined \"\\g<${ref}>\"`);\n    } else if (namedGroupsByName.get(ref)!.length > 1) {\n      throw new Error(r`Subroutine uses a duplicate group name \"\\g<${ref}>\"`);\n    } else {\n      namedGroupsByName.get(ref)![0].isSubroutined = true;\n    }\n  }\n\n  return ast;\n}\n\nfunction parseAssertion({kind}: AssertionToken): AssertionNode {\n  return createAssertion(\n    throwIfNullish({\n      '^': 'line_start',\n      '$': 'line_end',\n      '\\\\A': 'string_start',\n      '\\\\b': 'word_boundary',\n      '\\\\B': 'word_boundary',\n      '\\\\G': 'search_start',\n      '\\\\y': 'text_segment_boundary',\n      '\\\\Y': 'text_segment_boundary',\n      '\\\\z': 'string_end',\n      '\\\\Z': 'string_end_newline',\n    }[kind], `Unexpected assertion kind \"${kind}\"`) as NodeAssertionKind,\n    {negate: kind === r`\\B` || kind === r`\\Y`}\n  );\n}\n\n// Supported (if the backref appears to the right of the reffed capture's opening paren):\n// - `\\k<name>`, `\\k'name'`\n// - When named capture not used:\n//   - `\\n`, `\\nn`, `\\nnn`\n//   - `\\k<n>`, `\\k'n'\n//   - `\\k<-n>`, `\\k'-n'`\n// Unsupported:\n// - `\\k<+n>`, `\\k'+n'` - Note that, Unlike Oniguruma, Onigmo doesn't support this as special\n//   syntax and therefore considers it a valid group name.\n// - Backref with recursion level (with num or name): `\\k<n+level>`, `\\k<n-level>`, etc.\n//   (Onigmo also supports `\\k<-n+level>`, `\\k<-n-level>`, etc.)\n// Backrefs in Onig use multiplexing for duplicate group names (the rules can be complicated when\n// overlapping with subroutines), but a `Backreference`'s simple `ref` prop doesn't capture these\n// details so multiplexed ref pointers need to be derived when working with the AST\nfunction parseBackreference({raw}: BackreferenceToken, context: Context): BackreferenceNode {\n  const hasKWrapper = /^\\\\k[<']/.test(raw);\n  const ref = hasKWrapper ? raw.slice(3, -1) : raw.slice(1);\n  const fromNum = (num: number, isRelative = false) => {\n    const numCapturesToLeft = context.capturingGroups.length;\n    let orphan = false;\n    // Note: It's not an error for numbered backrefs to come before their referenced group in Onig,\n    // but it's currently an error in this library.\n    // - Most such placements are mistakes and can never match, due to Onig's behavior for backrefs\n    //   to nonparticipating groups.\n    //   - The edge cases where they're matchable rely on rules for backref resetting within\n    //     quantified groups that are different in JS (thus not emulatable in `oniguruma-to-es`).\n    // - Erroring matches the correct behavior of named backrefs.\n    // - For unenclosed backrefs, this only affects `\\1`-`\\9` since it's not a backref in the first\n    //   place if using `\\10` or higher and not as many capturing groups are defined to the left\n    //   (it's an octal or identity escape).\n    // TODO: Ideally this would be refactored to include the backref in the AST when it's not an\n    // error in Onig (due to the reffed group being defined to the right), and the error handling\n    // would move to the `oniguruma-to-es` transformer\n    if (num > numCapturesToLeft) {\n      // Skipping the error breaks assumptions and might create edge case issues, since backrefs\n      // are required to come after their captures; unfortunately this option is needed for\n      // TextMate grammars\n      if (context.skipBackrefValidation) {\n        orphan = true;\n      } else {\n        throw new Error(`Not enough capturing groups defined to the left \"${raw}\"`);\n      }\n    }\n    context.hasNumberedRef = true;\n    return createBackreference(isRelative ? numCapturesToLeft + 1 - num : num, {orphan});\n  };\n  if (hasKWrapper) {\n    const numberedRef = /^(?<sign>-?)0*(?<num>[1-9]\\d*)$/.exec(ref);\n    if (numberedRef) {\n      return fromNum(+numberedRef.groups!.num, !!numberedRef.groups!.sign);\n    }\n    // Invalid in a backref name even when valid in a group name\n    if (/[-+]/.test(ref)) {\n      throw new Error(`Invalid backref name \"${raw}\"`);\n    }\n    if (!context.namedGroupsByName.has(ref)) {\n      throw new Error(`Group name not defined to the left \"${raw}\"`);\n    }\n    return createBackreference(ref);\n  }\n  return fromNum(+ref);\n}\n\nfunction parseCharacterClassHyphen(_: CharacterClassHyphenToken, context: Context, state: State): CharacterNode | CharacterClassRangeNode {\n  const {tokens, walk} = context;\n  const parent = context.parent as CharacterClassNode;\n  const prevSiblingNode = parent.body.at(-1);\n  const nextToken = tokens[context.nextIndex];\n  if (\n    !state.isCheckingRangeEnd &&\n    prevSiblingNode &&\n    prevSiblingNode.type !== 'CharacterClass' &&\n    prevSiblingNode.type !== 'CharacterClassRange' &&\n    nextToken &&\n    nextToken.type !== 'CharacterClassOpen' &&\n    nextToken.type !== 'CharacterClassClose' &&\n    nextToken.type !== 'CharacterClassIntersector'\n  ) {\n    const nextNode = walk(parent, {\n      ...state,\n      isCheckingRangeEnd: true,\n    });\n    if (prevSiblingNode.type === 'Character' && nextNode.type === 'Character') {\n      parent.body.pop();\n      return createCharacterClassRange(prevSiblingNode, nextNode);\n    }\n    throw new Error('Invalid character class range');\n  }\n  return createCharacter(cpOf('-'));\n}\n\nfunction parseCharacterClassOpen({negate}: CharacterClassOpenToken, context: Context, state: State): CharacterClassNode {\n  const {tokens, walk} = context;\n  const firstClassToken = tokens[context.nextIndex];\n  const intersections = [createCharacterClass()];\n  let nextToken = throwIfUnclosedCharacterClass(firstClassToken);\n  while (nextToken.type !== 'CharacterClassClose') {\n    if (nextToken.type === 'CharacterClassIntersector') {\n      intersections.push(createCharacterClass());\n      // Skip the intersector\n      context.nextIndex++;\n    } else {\n      const cc = intersections.at(-1)!; // Always at least one\n      cc.body.push(walk(cc, state) as CharacterClassElementNode);\n    }\n    nextToken = throwIfUnclosedCharacterClass(tokens[context.nextIndex], firstClassToken);\n  }\n  const node = createCharacterClass({negate});\n  if (intersections.length === 1) {\n    node.body = intersections[0].body;\n  } else {\n    node.kind = 'intersection';\n    node.body = intersections.map(cc => cc.body.length === 1 ? cc.body[0] : cc);\n  }\n  // Skip the closing square bracket\n  context.nextIndex++;\n  return node;\n}\n\nfunction parseCharacterSet({kind, negate, value}: CharacterSetToken, context: Context): CharacterSetNode {\n  const {normalizeUnknownPropertyNames, skipPropertyNameValidation, unicodePropertyMap} = context;\n  if (kind === 'property') {\n    const normalized = slug(value!);\n    // Don't treat as POSIX if it's in the provided list of Unicode property names\n    if (PosixClassNames.has(normalized) && !unicodePropertyMap?.has(normalized)) {\n      kind = 'posix';\n      value = normalized;\n    } else {\n      return createUnicodeProperty(value!, {\n        negate,\n        normalizeUnknownPropertyNames,\n        skipPropertyNameValidation,\n        unicodePropertyMap,\n      });\n    }\n  }\n  if (kind === 'posix') {\n    return createPosixClass(value!, {negate});\n  }\n  return createCharacterSet(kind, {negate});\n}\n\nfunction parseGroupOpen(token: GroupOpenToken, context: Context, state: State): AbsenceFunctionNode | CapturingGroupNode | GroupNode | LookaroundAssertionNode {\n  const {tokens, capturingGroups, namedGroupsByName, skipLookbehindValidation, walk} = context;\n  const node = createByGroupKind(token);\n  const isThisAbsenceFunction = node.type === 'AbsenceFunction';\n  const isThisLookbehind = isLookbehind(node);\n  const isThisNegLookbehind = isThisLookbehind && node.negate;\n  // Track capturing group details for backrefs and subroutines (before parsing the group's\n  // contents so nested groups with the same name are tracked in order)\n  if (node.type === 'CapturingGroup') {\n    capturingGroups.push(node);\n    if (node.name) {\n      getOrInsert(namedGroupsByName, node.name, []).push(node);\n    }\n  }\n  // Don't allow nested absence functions\n  if (isThisAbsenceFunction && state.isInAbsenceFunction) {\n    // Is officially unsupported in Onig but doesn't throw, gives strange results\n    throw new Error('Nested absence function not supported by Oniguruma');\n  }\n  let nextToken = throwIfUnclosedGroup(tokens[context.nextIndex]);\n  while (nextToken.type !== 'GroupClose') {\n    if (nextToken.type === 'Alternator') {\n      node.body.push(createAlternative());\n      // Skip the alternator\n      context.nextIndex++;\n    } else {\n      const alt = node.body.at(-1)!; // Always at least one\n      const child = walk(alt, {\n        ...state,\n        isInAbsenceFunction: state.isInAbsenceFunction || isThisAbsenceFunction,\n        isInLookbehind: state.isInLookbehind || isThisLookbehind,\n        isInNegLookbehind: state.isInNegLookbehind || isThisNegLookbehind,\n      }) as AlternativeElementNode;\n      alt.body.push(child);\n      // Centralized validation of lookbehind contents\n      if ((isThisLookbehind || state.isInLookbehind) && !skipLookbehindValidation) {\n        // JS supports all features within lookbehind, but Onig doesn't. Absence functions of form\n        // `(?~|)` and `(?~|\u2026)` are also invalid in lookbehind (the `(?~\u2026)` and `(?~|\u2026|\u2026)` forms\n        // are allowed), but all forms with `(?~|` throw since they aren't yet supported\n        const msg = 'Lookbehind includes a pattern not allowed by Oniguruma';\n        if (isThisNegLookbehind || state.isInNegLookbehind) {\n          // - Invalid: `(?=\u2026)`, `(?!\u2026)`, capturing groups\n          // - Valid: `(?<=\u2026)`, `(?<!\u2026)`\n          if (isLookahead(child) || child.type === 'CapturingGroup') {\n            throw new Error(msg);\n          }\n        } else {\n          // - Invalid: `(?=\u2026)`, `(?!\u2026)`, `(?<!\u2026)`\n          // - Valid: `(?<=\u2026)`, capturing groups\n          if (isLookahead(child) || (isLookbehind(child) && child.negate)) {\n            throw new Error(msg);\n          }\n        }\n      }\n    }\n    nextToken = throwIfUnclosedGroup(tokens[context.nextIndex]);\n  }\n  // Skip the closing parenthesis\n  context.nextIndex++;\n  return node;\n}\n\nfunction parseQuantifier({kind, min, max}: QuantifierToken, context: Context): QuantifierNode {\n  const parent = context.parent as AlternativeNode;\n  const quantifiedNode = parent.body.at(-1);\n  if (!quantifiedNode || !isQuantifiable(quantifiedNode)) {\n    throw new Error('Quantifier requires a repeatable token');\n  }\n  const node = createQuantifier(kind, min, max, quantifiedNode);\n  parent.body.pop();\n  return node;\n}\n\n// Onig subroutine behavior:\n// - Subroutines can appear before the groups they reference; ex: `\\g<1>(a)` is valid.\n// - Multiple subroutines can reference the same group.\n// - Subroutines can reference groups that themselves contain subroutines, followed to any depth.\n// - Subroutines can be used recursively, and `\\g<0>` recursively references the whole pattern.\n// - Subroutines can use relative references (backward or forward); ex: `\\g<+1>(.)\\g<-1>`.\n// - Subroutines don't get their own capturing group numbers; ex: `(.)\\g<1>\\2` is invalid.\n// - Subroutines use the flags that apply to their referenced group, so e.g.\n//   `(?-i)(?<a>a)(?i)\\g<a>` is fully case sensitive.\n// - Differences from PCRE/Perl/Regex+ subroutines:\n//   - Subroutines can't reference duplicate group names (though duplicate names are valid if no\n//     subroutines reference them).\n//   - Subroutines can't use absolute or relative numbers if named capture is used anywhere.\n//   - Named backrefs must be to the right of their group definition, so the backref in\n//     `\\g<a>\\k<a>(?<a>)` is invalid (not directly related to subroutines).\n//   - Subroutines don't restore capturing group match values (for backrefs) upon exit, so e.g.\n//     `(?<a>(?<b>[ab]))\\g<a>\\k<b>` matches `abb` but not `aba`; same for numbered.\n// The interaction of backref multiplexing (an Onig-specific feature) and subroutines is complex:\n// - Only the most recent value matched by a capturing group and its subroutines is considered for\n//   backref multiplexing, and this also applies to capturing groups nested within a group that's\n//   referenced by a subroutine.\n// - Although a subroutine can't reference a group with a duplicate name, it can reference a group\n//   with a nested capture whose name is duplicated (e.g. outside of the referenced group).\n//   - These duplicate names can then multiplex; but only the most recent value matched from within\n//     the outer group (or the subroutines that reference it) is available for multiplexing.\n//   - Ex: With `(?<a>(?<b>[123]))\\g<a>\\g<a>(?<b>0)\\k<b>`, the backref `\\k<b>` can only match `0`\n//     or whatever was matched by the most recently matched subroutine. If you took out `(?<b>0)`,\n//     no multiplexing would occur.\nfunction parseSubroutine({raw}: SubroutineToken, context: Context): SubroutineNode {\n  const {capturingGroups, subroutines} = context;\n  let ref: string | number = raw.slice(3, -1);\n  const numberedRef = /^(?<sign>[-+]?)0*(?<num>[1-9]\\d*)$/.exec(ref);\n  if (numberedRef) {\n    const num = +numberedRef.groups!.num;\n    const numCapturesToLeft = capturingGroups.length;\n    context.hasNumberedRef = true;\n    ref = {\n      '': num,\n      '+': numCapturesToLeft + num,\n      '-': numCapturesToLeft + 1 - num,\n    }[numberedRef.groups!.sign]!;\n    if (ref < 1) {\n      throw new Error('Invalid subroutine number');\n    }\n  // Special case for full-pattern recursion; can't be `+0`, `-0`, `00`, etc.\n  } else if (ref === '0') {\n    ref = 0;\n  }\n  const node = createSubroutine(ref);\n  subroutines.push(node);\n  return node;\n}\n\n// -------------------------------\n// --- Node creation and types ---\n// -------------------------------\n\ntype AbsenceFunctionNode = {\n  type: 'AbsenceFunction';\n  kind: NodeAbsenceFunctionKind;\n  body: Array<AlternativeNode>;\n};\nfunction createAbsenceFunction(kind: NodeAbsenceFunctionKind, options?: {\n  body?: Array<AlternativeNode>;\n}): AbsenceFunctionNode {\n  if (kind !== 'repeater') {\n    throw new Error(`Unexpected absence function kind \"${kind}\"`);\n  }\n  return {\n    type: 'AbsenceFunction',\n    kind,\n    body: getBodyForAlternativeContainer(options?.body),\n  };\n}\n\ntype AlternativeNode = {\n  type: 'Alternative';\n  body: Array<AlternativeElementNode>;\n};\nfunction createAlternative(options?: {\n  body?: Array<AlternativeElementNode>;\n}): AlternativeNode {\n  return {\n    type: 'Alternative',\n    body: getBodyForElementContainer(options?.body) as Array<AlternativeElementNode>,\n  };\n}\n\ntype AssertionNode = {\n  type: 'Assertion';\n  kind: NodeAssertionKind;\n  negate?: boolean;\n};\nfunction createAssertion(kind: NodeAssertionKind, options?: {\n  negate?: boolean;\n}): AssertionNode {\n  const node: AssertionNode = {\n    type: 'Assertion',\n    kind,\n  };\n  if (kind === 'word_boundary' || kind === 'text_segment_boundary') {\n    node.negate = !!options?.negate;\n  }\n  return node;\n}\n\ntype BackreferenceNode = {\n  type: 'Backreference';\n  ref: string | number;\n  orphan?: boolean;\n};\nfunction createBackreference(ref: string | number, options?: {\n  orphan?: boolean;\n}): BackreferenceNode {\n  const orphan = !!options?.orphan;\n  return {\n    type: 'Backreference',\n    ref,\n    ...(orphan && {orphan}),\n  };\n}\n\ntype CapturingGroupNode = {\n  type: 'CapturingGroup';\n  kind?: never;\n  number: number;\n  name?: string;\n  // One or more subroutines in the regex reference this group\n  isSubroutined?: boolean;\n  body: Array<AlternativeNode>;\n};\nfunction createCapturingGroup(number: number, options?: {\n  name?: string;\n  isSubroutined?: boolean;\n  body?: Array<AlternativeNode>;\n}): CapturingGroupNode {\n  const opts = {\n    name: undefined,\n    isSubroutined: false,\n    ...options,\n  };\n  if (opts.name !== undefined && !isValidGroupName(opts.name)) {\n    throw new Error(`Group name \"${opts.name}\" invalid in Oniguruma`);\n  }\n  return {\n    type: 'CapturingGroup',\n    number,\n    ...(opts.name && {name: opts.name}),\n    ...(opts.isSubroutined && {isSubroutined: opts.isSubroutined}),\n    body: getBodyForAlternativeContainer(options?.body),\n  };\n}\n\ntype CharacterNode = {\n  type: 'Character';\n  value: number;\n};\nfunction createCharacter(charCode: number, options?: {\n  useLastValid?: boolean;\n}): CharacterNode {\n  const opts = {\n    useLastValid: false,\n    ...options,\n  };\n  if (charCode > 0x10FFFF) {\n    const hex = charCode.toString(16);\n    if (opts.useLastValid) {\n      charCode = 0x10FFFF;\n    } else if (charCode > 0x13FFFF) {\n      throw new Error(`Invalid code point out of range \"\\\\x{${hex}}\"`);\n    } else {\n      throw new Error(`Invalid code point out of range in JS \"\\\\x{${hex}}\"`);\n    }\n  }\n  return {\n    type: 'Character',\n    value: charCode,\n  };\n}\n\ntype CharacterClassNode = {\n  type: 'CharacterClass';\n  kind: NodeCharacterClassKind;\n  negate: boolean;\n  body: Array<CharacterClassElementNode>;\n};\nfunction createCharacterClass(options?: {\n  kind?: NodeCharacterClassKind;\n  negate?: boolean;\n  body?: Array<CharacterClassElementNode>;\n}): CharacterClassNode {\n  const opts = {\n    kind: 'union' as NodeCharacterClassKind,\n    negate: false,\n    ...options,\n  };\n  return {\n    type: 'CharacterClass',\n    kind: opts.kind,\n    negate: opts.negate,\n    body: getBodyForElementContainer(options?.body) as Array<CharacterClassElementNode>,\n  };\n}\n\ntype CharacterClassRangeNode = {\n  type: 'CharacterClassRange';\n  min: CharacterNode;\n  max: CharacterNode;\n};\nfunction createCharacterClassRange(min: CharacterNode, max: CharacterNode): CharacterClassRangeNode {\n  if (max.value < min.value) {\n    throw new Error('Character class range out of order');\n  }\n  return {\n    type: 'CharacterClassRange',\n    min,\n    max,\n  };\n}\n\ntype NamedCharacterSetNode = {\n  type: 'CharacterSet';\n  kind: 'posix' | 'property';\n  value: string;\n  negate: boolean;\n  variableLength?: never;\n};\ntype UnnamedCharacterSetNode = {\n  type: 'CharacterSet';\n  kind: Exclude<NodeCharacterSetKind, NamedCharacterSetNode['kind']>;\n  value?: never;\n  negate?: boolean;\n  variableLength?: boolean;\n};\ntype CharacterSetNode = NamedCharacterSetNode | UnnamedCharacterSetNode;\n/**\nUse `createUnicodeProperty` and `createPosixClass` for `kind` values `'property'` and `'posix'`.\n*/\nfunction createCharacterSet(kind: UnnamedCharacterSetNode['kind'], options?: {\n  negate?: boolean;\n}): UnnamedCharacterSetNode {\n  const negate = !!options?.negate;\n  const node: UnnamedCharacterSetNode = {\n    type: 'CharacterSet',\n    kind,\n  };\n  if (\n    kind === 'digit' ||\n    kind === 'hex' ||\n    kind === 'newline' ||\n    kind === 'space' ||\n    kind === 'word'\n  ) {\n    node.negate = negate;\n  }\n  if (\n    kind === 'text_segment' ||\n    (kind === 'newline' && !negate)\n  ) {\n    node.variableLength = true;\n  }\n  return node;\n}\n\ntype DirectiveNode = {\n  type: 'Directive';\n} & ({\n  kind: 'keep';\n  flags?: never;\n} | {\n  kind: 'flags';\n  flags: FlagGroupModifiers;\n});\nfunction createDirective(kind: NodeDirectiveKind, options: {flags?: FlagGroupModifiers} = {}): DirectiveNode {\n  if (kind === 'keep') {\n    return {\n      type: 'Directive',\n      kind,\n    };\n  }\n  if (kind === 'flags') {\n    // Note: Flag effects might extend across alternation; ex: `a(?i)b|c` is equivalent to\n    // `a(?i:b)|(?i:c)`, not `a(?i:b|c)`\n    return {\n      type: 'Directive',\n      kind,\n      flags: throwIfNullish(options.flags),\n    };\n  }\n  throw new Error(`Unexpected directive kind \"${kind}\"`);\n}\n\ntype FlagsNode = {\n  type: 'Flags';\n} & FlagProperties;\nfunction createFlags(flags: FlagProperties): FlagsNode {\n  return {\n    type: 'Flags',\n    ...flags,\n  };\n}\n\ntype GroupNode = {\n  type: 'Group';\n  kind?: never;\n  atomic?: boolean;\n  flags?: FlagGroupModifiers;\n  body: Array<AlternativeNode>;\n};\nfunction createGroup(options?: {\n  atomic?: boolean;\n  flags?: FlagGroupModifiers;\n  body?: Array<AlternativeNode>;\n}): GroupNode {\n  const atomic = options?.atomic;\n  const flags = options?.flags;\n  if (atomic && flags) {\n    throw new Error('Atomic group cannot have flags');\n  }\n  return {\n    type: 'Group',\n    ...(atomic && {atomic}),\n    ...(flags && {flags}),\n    body: getBodyForAlternativeContainer(options?.body),\n  };\n}\n\ntype LookaroundAssertionNode = {\n  type: 'LookaroundAssertion';\n  kind: NodeLookaroundAssertionKind;\n  negate: boolean;\n  body: Array<AlternativeNode>;\n};\nfunction createLookaroundAssertion(options?: {\n  behind?: boolean;\n  negate?: boolean;\n  body?: Array<AlternativeNode>;\n}): LookaroundAssertionNode {\n  const opts = {\n    behind: false,\n    negate: false,\n    ...options,\n  };\n  return {\n    type: 'LookaroundAssertion',\n    kind: opts.behind ? 'lookbehind' : 'lookahead',\n    negate: opts.negate,\n    body: getBodyForAlternativeContainer(options?.body),\n  };\n}\n\ntype NamedCalloutNode = {\n  type: 'NamedCallout';\n  kind: NodeNamedCalloutKind;\n  tag: string | null;\n  arguments: Array<string | number> | null;\n};\nfunction createNamedCallout(\n  kind: NodeNamedCalloutKind,\n  tag: string | null,\n  args: Array<string | number> | null\n): NamedCalloutNode {\n  return {\n    type: 'NamedCallout',\n    kind,\n    tag,\n    arguments: args,\n  };\n}\n\nfunction createPosixClass(name: string, options?: {\n  negate?: boolean;\n}): NamedCharacterSetNode & {kind: 'posix'} {\n  const negate = !!options?.negate;\n  if (!PosixClassNames.has(name)) {\n    throw new Error(`Invalid POSIX class \"${name}\"`);\n  }\n  return {\n    type: 'CharacterSet',\n    kind: 'posix',\n    value: name,\n    negate,\n  };\n}\n\ntype QuantifierNode = {\n  type: 'Quantifier';\n  kind: NodeQuantifierKind;\n  min: number;\n  max: number;\n  body: QuantifiableNode;\n};\nfunction createQuantifier(kind: NodeQuantifierKind, min: number, max: number, body: QuantifiableNode): QuantifierNode {\n  if (min > max) {\n    throw new Error('Invalid reversed quantifier range');\n  }\n  return {\n    type: 'Quantifier',\n    kind,\n    min,\n    max,\n    body,\n  };\n}\n\ntype RegexNode = {\n  type: 'Regex';\n  body: Array<AlternativeNode>;\n  flags: FlagsNode;\n};\nfunction createRegex(flags: FlagsNode, options?: {\n  body?: Array<AlternativeNode>;\n}): RegexNode {\n  return {\n    type: 'Regex',\n    body: getBodyForAlternativeContainer(options?.body),\n    flags,\n  };\n}\n\ntype SubroutineNode = {\n  type: 'Subroutine';\n  ref: string | number;\n};\nfunction createSubroutine(ref: string | number): SubroutineNode {\n  return {\n    type: 'Subroutine',\n    ref,\n  };\n}\n\ntype CreateUnicodePropertyOptions = {\n  negate?: boolean;\n  normalizeUnknownPropertyNames?: boolean;\n  skipPropertyNameValidation?: boolean;\n  unicodePropertyMap?: UnicodePropertyMap | null;\n};\nfunction createUnicodeProperty(name: string, options?: CreateUnicodePropertyOptions): NamedCharacterSetNode & {kind: 'property'} {\n  const opts: Required<CreateUnicodePropertyOptions> = {\n    negate: false,\n    normalizeUnknownPropertyNames: false,\n    skipPropertyNameValidation: false,\n    unicodePropertyMap: null,\n    ...options,\n  };\n  let normalized = opts.unicodePropertyMap?.get(slug(name));\n  if (!normalized) {\n    if (opts.normalizeUnknownPropertyNames) {\n      normalized = normalizeUnicodePropertyName(name);\n    // Let the name through as-is if no map provided and normalization not requested\n    } else if (opts.unicodePropertyMap && !opts.skipPropertyNameValidation) {\n      throw new Error(r`Invalid Unicode property \"\\p{${name}}\"`);\n    }\n  }\n  return {\n    type: 'CharacterSet',\n    kind: 'property',\n    value: normalized ?? name,\n    negate: opts.negate,\n  };\n}\n\n// ---------------\n// --- Helpers ---\n// ---------------\n\nfunction createByGroupKind({flags, kind, name, negate, number}: GroupOpenToken): AbsenceFunctionNode | CapturingGroupNode | GroupNode | LookaroundAssertionNode {\n  switch (kind) {\n    case 'absence_repeater':\n      return createAbsenceFunction('repeater');\n    case 'atomic':\n      return createGroup({atomic: true});\n    case 'capturing':\n      return createCapturingGroup(number!, {name});\n    case 'group':\n      return createGroup({flags});\n    case 'lookahead':\n    case 'lookbehind':\n      return createLookaroundAssertion({\n        behind: kind === 'lookbehind',\n        negate,\n      });\n    default:\n      throw new Error(`Unexpected group kind \"${kind}\"`);\n  }\n}\n\nfunction getBodyForAlternativeContainer(body: unknown): Array<AlternativeNode> {\n  if (body === undefined) {\n    body = [createAlternative()];\n  } else if (!Array.isArray(body) || !body.length || !body.every(node => (node as Node).type === 'Alternative')) {\n    throw new Error('Invalid body; expected array of one or more Alternative nodes');\n  }\n  return body as Array<AlternativeNode>;\n}\n\nfunction getBodyForElementContainer(body: unknown): Array<Node> {\n  if (body === undefined) {\n    body = [];\n  } else if (!Array.isArray(body) || !body.every(node => !!(node as Node).type)) {\n    throw new Error('Invalid body; expected array of nodes');\n  }\n  return body as Array<Node>;\n}\n\nfunction isLookahead(node: Node): node is (LookaroundAssertionNode & {kind: 'lookahead'}) {\n  return node.type === 'LookaroundAssertion' && node.kind === 'lookahead';\n}\n\nfunction isLookbehind(node: Node): node is (LookaroundAssertionNode & {kind: 'lookbehind'}) {\n  return node.type === 'LookaroundAssertion' && node.kind === 'lookbehind';\n}\n\nfunction isValidGroupName(name: string): boolean {\n  // Note that backrefs and subroutines might contextually use `-` and `+` to indicate relative\n  // index or recursion level\n  return /^[\\p{Alpha}\\p{Pc}][^)]*$/u.test(name);\n}\n\nfunction normalizeUnicodePropertyName(name: string): string {\n  // In Onig, Unicode property names ignore case, spaces, hyphens, and underscores. Use best effort\n  // to reformat the name to follow official values (covers a lot, but isn't able to map for all\n  // possible formatting differences)\n  return name.\n    trim().\n    replace(/[- _]+/g, '_').\n    replace(/[A-Z][a-z]+(?=[A-Z])/g, '$&_'). // `PropertyName` to `Property_Name`\n    replace(/[A-Za-z]+/g, m => m[0].toUpperCase() + m.slice(1).toLowerCase());\n}\n\n/**\nGenerates a Unicode property lookup name: lowercase, without spaces, hyphens, or underscores.\n*/\nfunction slug(name: string): string {\n  return name.replace(/[- _]+/g, '').toLowerCase();\n}\n\nfunction throwIfUnclosedCharacterClass<T>(token: T, firstClassToken?: Token): NonNullable<T> {\n  return throwIfNullish(\n    token,\n    // Easier to understand the error if it says \"empty\" when the unclosed class starts with\n    // literal `]`; ex: `[]` or `[]a`\n    `${firstClassToken?.type === 'Character' && firstClassToken.value === 93 ?\n      'Empty' : 'Unclosed'} character class`\n  );\n}\n\nfunction throwIfUnclosedGroup<T>(token: T): NonNullable<T> {\n  return throwIfNullish(token, 'Unclosed group');\n}\n\nexport {\n  type AbsenceFunctionNode,\n  type AlternativeNode,\n  type AlternativeContainerNode,\n  type AlternativeElementNode,\n  type AssertionNode,\n  type BackreferenceNode,\n  type CapturingGroupNode,\n  type CharacterClassElementNode,\n  type CharacterClassNode,\n  type CharacterClassRangeNode,\n  type CharacterNode,\n  type CharacterSetNode,\n  type DirectiveNode,\n  type FlagsNode,\n  type GroupNode,\n  type LookaroundAssertionNode,\n  type NamedCalloutNode,\n  type Node,\n  type NodeAbsenceFunctionKind,\n  type NodeAssertionKind,\n  type NodeCharacterClassKind,\n  type NodeCharacterSetKind,\n  type NodeDirectiveKind,\n  type NodeLookaroundAssertionKind,\n  type NodeQuantifierKind,\n  type OnigurumaAst,\n  type ParentNode,\n  type ParseOptions,\n  type QuantifiableNode,\n  type QuantifierNode,\n  type RegexNode,\n  type SubroutineNode,\n  type UnicodePropertyMap,\n  createAbsenceFunction,\n  createAlternative,\n  createAssertion,\n  createBackreference,\n  createCapturingGroup,\n  createCharacter,\n  createCharacterClass,\n  createCharacterClassRange,\n  createCharacterSet,\n  createDirective,\n  createFlags,\n  createGroup,\n  createLookaroundAssertion,\n  createNamedCallout,\n  createPosixClass,\n  createQuantifier,\n  createRegex,\n  createSubroutine,\n  createUnicodeProperty,\n  hasOnlyChild,\n  isAlternativeContainer,\n  isQuantifiable,\n  parse,\n  slug,\n};\n", "import type {AlternativeElementNode, AlternativeNode, CharacterClassElementNode, Node, ParentNode, RegexNode} from '../parser/parse.js';\nimport {throwIfNullish} from '../utils.js';\n\ntype ContainerElementNode =\n  // Used within the `body` container of any `AlternativeContainerNode`\n  AlternativeNode |\n  // Any node type used within the `body` container of an `AlternativeNode`\n  AlternativeElementNode |\n  // Any node type used within the `body` container of a `CharacterClassNode`\n  CharacterClassElementNode;\n\ntype Path<N = Node, Root = RegexNode> = {\n  // The current node being traversed\n  node: N;\n  // Parent node of the current node\n  parent: N extends RegexNode ? null : ParentNode;\n  // String property where the current node in held by the parent node, or numeric index in the\n  // parent's `container` array\n  key: N extends RegexNode ? null : number | string;\n  // Container array holding the current node in the parent node; `null` if the parent isn't a type\n  // that contains a list of nodes\n  container: N extends RegexNode ? null : Array<ContainerElementNode> | null;\n  // Starting node of the AST being traversed; usually a `RegexNode` but can be any node type if\n  // traversing from a midpoint\n  root: Root;\n  // Removes the current node; its kids won't be traversed\n  remove: () => void;\n  // Removes all siblings to the right of the current node, without traversing them; returns the\n  // removed nodes\n  removeAllNextSiblings: () => Array<Node>;\n  // Removes all siblings to the left of the current node, which have already been traversed;\n  // returns the removed nodes\n  removeAllPrevSiblings: () => Array<Node>;\n  // Replaces the current node with a new node; kids of the replaced node won't be traversed;\n  // optionally traverses the new node\n  replaceWith: (newNode: Node, options?: {traverse?: boolean}) => void;\n  // Replaces the current node with multiple new nodes; kids of the replaced node won't be\n  // traversed; optionally traverses the new nodes\n  replaceWithMultiple: (newNodes: Array<Node>, options?: {traverse?: boolean}) => void;\n  // Skips traversing kids of the current node\n  skip: () => void;\n};\n\n// `VisitorNodeFn() {\u2026}` is shorthand for `VisitorNodeFn: {enter() {\u2026}}`.\ntype Visitor<State extends object | null = null, Root extends Node = RegexNode> = {\n  [N in Node as N['type']]?: VisitorNodeFn<Path<N, Root>, State> | {\n    enter?: VisitorNodeFn<Path<N, Root>, State>;\n    exit?: VisitorNodeFn<Path<N, Root>, State>;\n  };\n} & {\n  '*'?: VisitorNodeFn<Path<Node, Root>, State> | {\n    enter?: VisitorNodeFn<Path<Node, Root>, State>;\n    exit?: VisitorNodeFn<Path<Node, Root>, State>;\n  };\n};\n\ntype VisitorNodeFn<P, State> = (path: P, state: State) => void;\n\n/**\nTraverses an AST and calls the provided `visitor`'s node function for each node. Returns the same\nobject, possibly modified.\n\nVisitor node functions can modify the AST in place and use methods on the `path` (provided as their\nfirst argument) to help modify the AST. Provided `state` is passed through to all visitor node\nfunctions as their second argument.\n\nVisitor node functions are called in the following order:\n1. `enter` function of the `'*'` node type (if any)\n2. `enter` function of the given node's type (if any)\n3. [The node's kids (if any) are traversed recursively, unless `skip` is called]\n4. `exit` function of the given node's type (if any)\n5. `exit` function of the `'*'` node type (if any)\n*/\nfunction traverse<State extends object | null = null, Root extends Node = RegexNode>(\n  root: Root,\n  visitor: Visitor<State, Root>,\n  state: State | null = null\n): Root {\n  function traverseArray(array: NonNullable<Path['container']>, parent: Path['parent']) {\n    for (let i = 0; i < array.length; i++) {\n      const keyShift = traverseNode(array[i], parent, i, array);\n      i = Math.max(-1, i + keyShift);\n    }\n  }\n  function traverseNode(\n    node: Path['node'],\n    parent: Path['parent'] = null,\n    key: Path['key'] = null,\n    container: Path['container'] = null\n  ): number {\n    let keyShift = 0;\n    let skipTraversingKidsOfPath = false;\n    const path: Path = {\n      node,\n      parent,\n      key,\n      container,\n      root: root as RegexNode,\n      remove() {\n        arrayContainer(container).splice(Math.max(0, numericKey(key) + keyShift), 1);\n        keyShift--;\n        skipTraversingKidsOfPath = true;\n      },\n      removeAllNextSiblings() {\n        return arrayContainer(container).splice(numericKey(key) + 1);\n      },\n      removeAllPrevSiblings() {\n        const shifted = numericKey(key) + keyShift;\n        keyShift -= shifted;\n        return arrayContainer(container).splice(0, Math.max(0, shifted));\n      },\n      replaceWith(newNode, options = {}) {\n        const traverseNew = !!options.traverse;\n        if (container) {\n          container[Math.max(0, numericKey(key) + keyShift)] = newNode as ContainerElementNode;\n        } else {\n          // `key` will be one of:\n          // - For `CharacterClassRangeNode`: 'min', 'max'\n          // - For `QuantifierNode`: 'body'\n          // - For `RegexNode`: 'flags'\n          // @ts-expect-error\n          throwIfNullish(parent, `Can't replace root node`)[key as string] = newNode;\n        }\n        if (traverseNew) {\n          traverseNode(newNode, parent, key, container);\n        }\n        skipTraversingKidsOfPath = true;\n      },\n      replaceWithMultiple(newNodes, options = {}) {\n        const traverseNew = !!options.traverse;\n        arrayContainer(container).splice(Math.max(0, numericKey(key) + keyShift), 1, ...newNodes);\n        keyShift += newNodes.length - 1;\n        if (traverseNew) {\n          let keyShiftInLoop = 0;\n          for (let i = 0; i < newNodes.length; i++) {\n            keyShiftInLoop += traverseNode(newNodes[i], parent, numericKey(key) + i + keyShiftInLoop, container);\n          }\n        }\n        skipTraversingKidsOfPath = true;\n      },\n      skip() {\n        skipTraversingKidsOfPath = true;\n      },\n    };\n\n    const {type} = node;\n    const anyTypeVisitor = visitor['*'];\n    const thisTypeVisitor = visitor[type];\n    const enterAllFn = typeof anyTypeVisitor === 'function' ? anyTypeVisitor : anyTypeVisitor?.enter;\n    const enterThisFn = typeof thisTypeVisitor === 'function' ? thisTypeVisitor : thisTypeVisitor?.enter;\n    // Type args are too complex to avoid TS errors here, but `VisitorNodeFn`s get correct types\n    // @ts-expect-error\n    enterAllFn?.(path, state);\n    // @ts-expect-error\n    enterThisFn?.(path, state);\n\n    if (!skipTraversingKidsOfPath) {\n      switch (type) {\n        case 'AbsenceFunction':\n        case 'CapturingGroup':\n        case 'Group':\n          traverseArray(node.body, node);\n          break;\n        case 'Alternative':\n        case 'CharacterClass':\n          traverseArray(node.body, node);\n          break;\n        case 'Assertion':\n        case 'Backreference':\n        case 'Character':\n        case 'CharacterSet':\n        case 'Directive':\n        case 'Flags':\n        case 'NamedCallout':\n        case 'Subroutine':\n          break;\n        case 'CharacterClassRange':\n          traverseNode(node.min, node, 'min');\n          traverseNode(node.max, node, 'max');\n          break;\n        case 'LookaroundAssertion':\n          traverseArray(node.body, node);\n          break;\n        case 'Quantifier':\n          traverseNode(node.body, node, 'body');\n          break;\n        case 'Regex':\n          traverseArray(node.body, node);\n          traverseNode(node.flags, node, 'flags');\n          break;\n        default:\n          throw new Error(`Unexpected node type \"${type}\"`);\n      }\n    }\n\n    // @ts-expect-error\n    (thisTypeVisitor as Exclude<typeof thisTypeVisitor, Function>)?.exit?.(path, state);\n    // @ts-expect-error\n    (anyTypeVisitor as Exclude<typeof anyTypeVisitor, Function>)?.exit?.(path, state);\n    return keyShift;\n  }\n  traverseNode(root);\n  return root;\n}\n\nfunction arrayContainer(value: unknown): Array<Node> {\n  if (!Array.isArray(value)) {\n    throw new Error('Container expected');\n  }\n  return value;\n}\n\nfunction numericKey(value: unknown): number {\n  if (typeof value !== 'number') {\n    throw new Error('Numeric key expected');\n  }\n  return value;\n}\n\nexport {\n  type Path,\n  type Visitor,\n  traverse,\n};\n", "// Separating some utils for improved tree shaking of the `./internals` export\n\nconst noncapturingDelim = String.raw`\\(\\?(?:[:=!>A-Za-z\\-]|<[=!]|\\(DEFINE\\))`;\n\n/**\nUpdates the array in place by incrementing each value greater than or equal to the threshold.\n@param {Array<number>} arr\n@param {number} threshold\n*/\nfunction incrementIfAtLeast(arr, threshold) {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] >= threshold) {\n      arr[i]++;\n    }\n  }\n}\n\n/**\n@param {string} str\n@param {number} pos\n@param {string} oldValue\n@param {string} newValue\n@returns {string}\n*/\nfunction spliceStr(str, pos, oldValue, newValue) {\n  return str.slice(0, pos) + newValue + str.slice(pos + oldValue.length);\n}\n\nexport {\n  incrementIfAtLeast,\n  noncapturingDelim,\n  spliceStr,\n};\n", "// Constant properties for tracking regex syntax context\nexport const Context = Object.freeze({\n  DEFAULT: 'DEFAULT',\n  CHAR_CLASS: 'CHAR_CLASS',\n});\n\n/**\nReplaces all unescaped instances of a regex pattern in the given context, using a replacement\nstring or callback.\n\nDoesn't skip over complete multicharacter tokens (only `\\` plus its folowing char) so must be used\nwith knowledge of what's safe to do given regex syntax. Assumes UnicodeSets-mode syntax.\n@param {string} expression Search target\n@param {string} needle Search as a regex pattern, with flags `su` applied\n@param {string | (match: RegExpExecArray, details: {\n  context: 'DEFAULT' | 'CHAR_CLASS';\n  negated: boolean;\n}) => string} replacement\n@param {'DEFAULT' | 'CHAR_CLASS'} [context] All contexts if not specified\n@returns {string} Updated expression\n@example\nconst str = '.\\\\.\\\\\\\\.[[\\\\.].].';\nreplaceUnescaped(str, '\\\\.', '@');\n// → '@\\\\.\\\\\\\\@[[\\\\.]@]@'\nreplaceUnescaped(str, '\\\\.', '@', Context.DEFAULT);\n// → '@\\\\.\\\\\\\\@[[\\\\.].]@'\nreplaceUnescaped(str, '\\\\.', '@', Context.CHAR_CLASS);\n// → '.\\\\.\\\\\\\\.[[\\\\.]@].'\n*/\nexport function replaceUnescaped(expression, needle, replacement, context) {\n  const re = new RegExp(String.raw`${needle}|(?<$skip>\\[\\^?|\\\\?.)`, 'gsu');\n  const negated = [false];\n  let numCharClassesOpen = 0;\n  let result = '';\n  for (const match of expression.matchAll(re)) {\n    const {0: m, groups: {$skip}} = match;\n    if (!$skip && (!context || (context === Context.DEFAULT) === !numCharClassesOpen)) {\n      if (replacement instanceof Function) {\n        result += replacement(match, {\n          context: numCharClassesOpen ? Context.CHAR_CLASS : Context.DEFAULT,\n          negated: negated[negated.length - 1],\n        });\n      } else {\n        result += replacement;\n      }\n      continue;\n    }\n    if (m[0] === '[') {\n      numCharClassesOpen++;\n      negated.push(m[1] === '^');\n    } else if (m === ']' && numCharClassesOpen) {\n      numCharClassesOpen--;\n      negated.pop();\n    }\n    result += m;\n  }\n  return result;\n}\n\n/**\nRuns a callback for each unescaped instance of a regex pattern in the given context.\n\nDoesn't skip over complete multicharacter tokens (only `\\` plus its folowing char) so must be used\nwith knowledge of what's safe to do given regex syntax. Assumes UnicodeSets-mode syntax.\n@param {string} expression Search target\n@param {string} needle Search as a regex pattern, with flags `su` applied\n@param {(match: RegExpExecArray, details: {\n  context: 'DEFAULT' | 'CHAR_CLASS';\n  negated: boolean;\n}) => void} callback\n@param {'DEFAULT' | 'CHAR_CLASS'} [context] All contexts if not specified\n*/\nexport function forEachUnescaped(expression, needle, callback, context) {\n  // Do this the easy way\n  replaceUnescaped(expression, needle, callback, context);\n}\n\n/**\nReturns a match object for the first unescaped instance of a regex pattern in the given context, or\n`null`.\n\nDoesn't skip over complete multicharacter tokens (only `\\` plus its folowing char) so must be used\nwith knowledge of what's safe to do given regex syntax. Assumes UnicodeSets-mode syntax.\n@param {string} expression Search target\n@param {string} needle Search as a regex pattern, with flags `su` applied\n@param {number} [pos] Offset to start the search\n@param {'DEFAULT' | 'CHAR_CLASS'} [context] All contexts if not specified\n@returns {RegExpExecArray | null}\n*/\nexport function execUnescaped(expression, needle, pos = 0, context) {\n  // Quick partial test; avoid the loop if not needed\n  if (!(new RegExp(needle, 'su').test(expression))) {\n    return null;\n  }\n  const re = new RegExp(`${needle}|(?<$skip>\\\\\\\\?.)`, 'gsu');\n  re.lastIndex = pos;\n  let numCharClassesOpen = 0;\n  let match;\n  while (match = re.exec(expression)) {\n    const {0: m, groups: {$skip}} = match;\n    if (!$skip && (!context || (context === Context.DEFAULT) === !numCharClassesOpen)) {\n      return match;\n    }\n    if (m === '[') {\n      numCharClassesOpen++;\n    } else if (m === ']' && numCharClassesOpen) {\n      numCharClassesOpen--;\n    }\n    // Avoid an infinite loop on zero-length matches\n    if (re.lastIndex == match.index) {\n      re.lastIndex++;\n    }\n  }\n  return null;\n}\n\n/**\nChecks whether an unescaped instance of a regex pattern appears in the given context.\n\nDoesn't skip over complete multicharacter tokens (only `\\` plus its folowing char) so must be used\nwith knowledge of what's safe to do given regex syntax. Assumes UnicodeSets-mode syntax.\n@param {string} expression Search target\n@param {string} needle Search as a regex pattern, with flags `su` applied\n@param {'DEFAULT' | 'CHAR_CLASS'} [context] All contexts if not specified\n@returns {boolean} Whether the pattern was found\n*/\nexport function hasUnescaped(expression, needle, context) {\n  // Do this the easy way\n  return !!execUnescaped(expression, needle, 0, context);\n}\n\n/**\nExtracts the full contents of a group (subpattern) from the given expression, accounting for\nescaped characters, nested groups, and character classes. The group is identified by the position\nwhere its contents start (the string index just after the group's opening delimiter). Returns the\nrest of the string if the group is unclosed.\n\nAssumes UnicodeSets-mode syntax.\n@param {string} expression Search target\n@param {number} contentsStartPos\n@returns {string}\n*/\nexport function getGroupContents(expression, contentsStartPos) {\n  const token = /\\\\?./gsu;\n  token.lastIndex = contentsStartPos;\n  let contentsEndPos = expression.length;\n  let numCharClassesOpen = 0;\n  // Starting search within an open group, after the group's opening\n  let numGroupsOpen = 1;\n  let match;\n  while (match = token.exec(expression)) {\n    const [m] = match;\n    if (m === '[') {\n      numCharClassesOpen++;\n    } else if (!numCharClassesOpen) {\n      if (m === '(') {\n        numGroupsOpen++;\n      } else if (m === ')') {\n        numGroupsOpen--;\n        if (!numGroupsOpen) {\n          contentsEndPos = match.index;\n          break;\n        }\n      }\n    } else if (m === ']') {\n      numCharClassesOpen--;\n    }\n  }\n  return expression.slice(contentsStartPos, contentsEndPos);\n}\n", "import {incrementIfAtLeast, noncapturingDelim, spliceStr} from './utils-internals.js';\nimport {Context, replaceUnescaped} from 'regex-utilities';\n\nconst atomicPluginToken = new RegExp(String.raw`(?<noncapturingStart>${noncapturingDelim})|(?<capturingStart>\\((?:\\?<[^>]+>)?)|\\\\?.`, 'gsu');\n\n/**\nApply transformations for atomic groups: `(?>…)`.\n@param {string} expression\n@param {import('./regex.js').PluginData} [data]\n@returns {Required<import('./regex.js').PluginResult>}\n*/\nfunction atomic(expression, data) {\n  const hiddenCaptures = data?.hiddenCaptures ?? [];\n  // Capture transfer is used by <github.com/slevithan/oniguruma-to-es>\n  let captureTransfers = data?.captureTransfers ?? new Map();\n  if (!/\\(\\?>/.test(expression)) {\n    return {\n      pattern: expression,\n      captureTransfers,\n      hiddenCaptures,\n    };\n  }\n\n  const aGDelim = '(?>';\n  const emulatedAGDelim = '(?:(?=(';\n  const captureNumMap = [0];\n  const addedHiddenCaptures = [];\n  let numCapturesBeforeAG = 0;\n  let numAGs = 0;\n  let aGPos = NaN;\n  let hasProcessedAG;\n  do {\n    hasProcessedAG = false;\n    let numCharClassesOpen = 0;\n    let numGroupsOpenInAG = 0;\n    let inAG = false;\n    let match;\n    atomicPluginToken.lastIndex = Number.isNaN(aGPos) ? 0 : aGPos + emulatedAGDelim.length;\n    while (match = atomicPluginToken.exec(expression)) {\n      const {0: m, index, groups: {capturingStart, noncapturingStart}} = match;\n      if (m === '[') {\n        numCharClassesOpen++;\n      } else if (!numCharClassesOpen) {\n\n        if (m === aGDelim && !inAG) {\n          aGPos = index;\n          inAG = true;\n        } else if (inAG && noncapturingStart) {\n          numGroupsOpenInAG++;\n        } else if (capturingStart) {\n          if (inAG) {\n            numGroupsOpenInAG++;\n          } else {\n            numCapturesBeforeAG++;\n            captureNumMap.push(numCapturesBeforeAG + numAGs);\n          }\n        } else if (m === ')' && inAG) {\n          if (!numGroupsOpenInAG) {\n            numAGs++;\n            const addedCaptureNum = numCapturesBeforeAG + numAGs;\n            // Replace `expression` and use `<$$N>` as a temporary wrapper for the backref so it\n            // can avoid backref renumbering afterward. Wrap the whole substitution (including the\n            // lookahead and following backref) in a noncapturing group to handle following\n            // quantifiers and literal digits\n            expression = `${expression.slice(0, aGPos)}${emulatedAGDelim}${\n                expression.slice(aGPos + aGDelim.length, index)\n              }))<$$${addedCaptureNum}>)${expression.slice(index + 1)}`;\n            hasProcessedAG = true;\n            addedHiddenCaptures.push(addedCaptureNum);\n            incrementIfAtLeast(hiddenCaptures, addedCaptureNum);\n            if (captureTransfers.size) {\n              const newCaptureTransfers = new Map();\n              captureTransfers.forEach((from, to) => {\n                newCaptureTransfers.set(\n                  to >= addedCaptureNum ? to + 1 : to,\n                  from.map(f => f >= addedCaptureNum ? f + 1 : f)\n                );\n              });\n              captureTransfers = newCaptureTransfers;\n            }\n            break;\n          }\n          numGroupsOpenInAG--;\n        }\n\n      } else if (m === ']') {\n        numCharClassesOpen--;\n      }\n    }\n  // Start over from the beginning of the atomic group's contents, in case the processed group\n  // contains additional atomic groups\n  } while (hasProcessedAG);\n\n  hiddenCaptures.push(...addedHiddenCaptures);\n\n  // Second pass to adjust numbered backrefs\n  expression = replaceUnescaped(\n    expression,\n    String.raw`\\\\(?<backrefNum>[1-9]\\d*)|<\\$\\$(?<wrappedBackrefNum>\\d+)>`,\n    ({0: m, groups: {backrefNum, wrappedBackrefNum}}) => {\n      if (backrefNum) {\n        const bNum = +backrefNum;\n        if (bNum > captureNumMap.length - 1) {\n          throw new Error(`Backref \"${m}\" greater than number of captures`);\n        }\n        return `\\\\${captureNumMap[bNum]}`;\n      }\n      return `\\\\${wrappedBackrefNum}`;\n    },\n    Context.DEFAULT\n  );\n\n  return {\n    pattern: expression,\n    captureTransfers,\n    hiddenCaptures,\n  };\n}\n\nconst baseQuantifier = String.raw`(?:[?*+]|\\{\\d+(?:,\\d*)?\\})`;\n// Complete tokenizer for base syntax; doesn't (need to) know about character-class-only syntax\nconst possessivePluginToken = new RegExp(String.raw`\n\\\\(?: \\d+\n  | c[A-Za-z]\n  | [gk]<[^>]+>\n  | [pPu]\\{[^\\}]+\\}\n  | u[A-Fa-f\\d]{4}\n  | x[A-Fa-f\\d]{2}\n  )\n| \\((?: \\? (?: [:=!>]\n  | <(?:[=!]|[^>]+>)\n  | [A-Za-z\\-]+:\n  | \\(DEFINE\\)\n  ))?\n| (?<qBase>${baseQuantifier})(?<qMod>[?+]?)(?<invalidQ>[?*+\\{]?)\n| \\\\?.\n`.replace(/\\s+/g, ''), 'gsu');\n\n/**\nTransform posessive quantifiers into atomic groups. The posessessive quantifiers are:\n`?+`, `*+`, `++`, `{N}+`, `{N,}+`, `{N,N}+`.\nThis follows Java, PCRE, Perl, and Python.\nPossessive quantifiers in Oniguruma and Onigmo are only: `?+`, `*+`, `++`.\n@param {string} expression\n@returns {import('./regex.js').PluginResult}\n*/\nfunction possessive(expression) {\n  if (!(new RegExp(`${baseQuantifier}\\\\+`).test(expression))) {\n    return {\n      pattern: expression,\n    };\n  }\n\n  const openGroupIndices = [];\n  let lastGroupIndex = null;\n  let lastCharClassIndex = null;\n  let lastToken = '';\n  let numCharClassesOpen = 0;\n  let match;\n  possessivePluginToken.lastIndex = 0;\n  while (match = possessivePluginToken.exec(expression)) {\n    const {0: m, index, groups: {qBase, qMod, invalidQ}} = match;\n    if (m === '[') {\n      if (!numCharClassesOpen) {\n        lastCharClassIndex = index;\n      }\n      numCharClassesOpen++;\n    } else if (m === ']') {\n      if (numCharClassesOpen) {\n        numCharClassesOpen--;\n      // Unmatched `]`\n      } else {\n        lastCharClassIndex = null;\n      }\n    } else if (!numCharClassesOpen) {\n\n      if (qMod === '+' && lastToken && !lastToken.startsWith('(')) {\n        // Invalid following quantifier would become valid via the wrapping group\n        if (invalidQ) {\n          throw new Error(`Invalid quantifier \"${m}\"`);\n        }\n        let charsAdded = -1; // -1 for removed trailing `+`\n        // Possessivizing fixed repetition quantifiers like `{2}` does't change their behavior, so\n        // avoid doing so (convert them to greedy)\n        if (/^\\{\\d+\\}$/.test(qBase)) {\n          expression = spliceStr(expression, index + qBase.length, qMod, '');\n        } else {\n          if (lastToken === ')' || lastToken === ']') {\n            const nodeIndex = lastToken === ')' ? lastGroupIndex : lastCharClassIndex;\n            // Unmatched `)` would break out of the wrapping group and mess with handling.\n            // Unmatched `]` wouldn't be a problem, but it's unnecessary to have dedicated support\n            // for unescaped `]++` since this won't work with flag u or v anyway\n            if (nodeIndex === null) {\n              throw new Error(`Invalid unmatched \"${lastToken}\"`);\n            }\n            expression = `${expression.slice(0, nodeIndex)}(?>${expression.slice(nodeIndex, index)}${qBase})${expression.slice(index + m.length)}`;\n          } else {\n            expression = `${expression.slice(0, index - lastToken.length)}(?>${lastToken}${qBase})${expression.slice(index + m.length)}`;\n          }\n          charsAdded += 4; // `(?>)`\n        }\n        possessivePluginToken.lastIndex += charsAdded;\n      } else if (m[0] === '(') {\n        openGroupIndices.push(index);\n      } else if (m === ')') {\n        lastGroupIndex = openGroupIndices.length ? openGroupIndices.pop() : null;\n      }\n\n    }\n    lastToken = m;\n  }\n\n  return {\n    pattern: expression,\n  };\n}\n\nexport {\n  atomic,\n  possessive,\n};\n", "import {Context, forEachUnescaped, getGroupContents, hasUnescaped, replaceUnescaped} from 'regex-utilities';\n\nconst r = String.raw;\nconst gRToken = r`\\\\g<(?<gRNameOrNum>[^>&]+)&R=(?<gRDepth>[^>]+)>`;\nconst recursiveToken = r`\\(\\?R=(?<rDepth>[^\\)]+)\\)|${gRToken}`;\nconst namedCaptureDelim = r`\\(\\?<(?![=!])(?<captureName>[^>]+)>`;\nconst captureDelim = r`${namedCaptureDelim}|(?<unnamed>\\()(?!\\?)`;\nconst token = new RegExp(r`${namedCaptureDelim}|${recursiveToken}|\\(\\?|\\\\?.`, 'gsu');\nconst overlappingRecursionMsg = 'Cannot use multiple overlapping recursions';\n\n/**\n@param {string} pattern\n@param {{\n  flags?: string;\n  captureTransfers?: Map<number, Array<number>>;\n  hiddenCaptures?: Array<number>;\n  mode?: 'plugin' | 'external';\n}} [data]\n@returns {{\n  pattern: string;\n  captureTransfers: Map<number, Array<number>>;\n  hiddenCaptures: Array<number>;\n}}\n*/\nfunction recursion(pattern, data) {\n  const {hiddenCaptures, mode} = {\n    hiddenCaptures: [],\n    mode: 'plugin',\n    ...data,\n  };\n  // Capture transfer is used by <github.com/slevithan/oniguruma-to-es>\n  let captureTransfers = data?.captureTransfers ?? new Map();\n  // Keep the initial fail-check (which avoids unneeded processing) as fast as possible by testing\n  // without the accuracy improvement of using `hasUnescaped` with `Context.DEFAULT`\n  if (!(new RegExp(recursiveToken, 'su').test(pattern))) {\n    return {\n      pattern,\n      captureTransfers,\n      hiddenCaptures,\n    };\n  }\n  if (mode === 'plugin' && hasUnescaped(pattern, r`\\(\\?\\(DEFINE\\)`, Context.DEFAULT)) {\n    throw new Error('DEFINE groups cannot be used with recursion');\n  }\n\n  const addedHiddenCaptures = [];\n  const hasNumberedBackref = hasUnescaped(pattern, r`\\\\[1-9]`, Context.DEFAULT);\n  const groupContentsStartPos = new Map();\n  const openGroups = [];\n  let hasRecursed = false;\n  let numCharClassesOpen = 0;\n  let numCapturesPassed = 0;\n  let match;\n  token.lastIndex = 0;\n  while ((match = token.exec(pattern))) {\n    const {0: m, groups: {captureName, rDepth, gRNameOrNum, gRDepth}} = match;\n    if (m === '[') {\n      numCharClassesOpen++;\n    } else if (!numCharClassesOpen) {\n\n      // `(?R=N)`\n      if (rDepth) {\n        assertMaxInBounds(rDepth);\n        if (hasRecursed) {\n          throw new Error(overlappingRecursionMsg);\n        }\n        if (hasNumberedBackref) {\n          // Could add support for numbered backrefs with extra effort, but it's probably not worth\n          // it. To trigger this error, the regex must include recursion and one of the following:\n          // - An interpolated regex that contains a numbered backref (since other numbered\n          //   backrefs are prevented by implicit flag n).\n          // - A numbered backref, when flag n is explicitly disabled.\n          // Note that Regex+'s extended syntax (atomic groups and sometimes subroutines) can also\n          // add numbered backrefs, but those work fine because external plugins like this one run\n          // *before* the transformation of built-in syntax extensions\n          throw new Error(\n            // When used in `external` mode by transpilers other than Regex+, backrefs might have\n            // gone through conversion from named to numbered, so avoid a misleading error\n            `${mode === 'external' ? 'Backrefs' : 'Numbered backrefs'} cannot be used with global recursion`\n          );\n        }\n        const left = pattern.slice(0, match.index);\n        const right = pattern.slice(token.lastIndex);\n        if (hasUnescaped(right, recursiveToken, Context.DEFAULT)) {\n          throw new Error(overlappingRecursionMsg);\n        }\n        const reps = +rDepth - 1;\n        pattern = makeRecursive(\n          left,\n          right,\n          reps,\n          false,\n          hiddenCaptures,\n          addedHiddenCaptures,\n          numCapturesPassed\n        );\n        captureTransfers = mapCaptureTransfers(\n          captureTransfers,\n          left,\n          reps,\n          addedHiddenCaptures.length,\n          0,\n          numCapturesPassed\n        );\n        // No need to parse further\n        break;\n      // `\\g<name&R=N>`, `\\g<number&R=N>`\n      } else if (gRNameOrNum) {\n        assertMaxInBounds(gRDepth);\n        let isWithinReffedGroup = false;\n        for (const g of openGroups) {\n          if (g.name === gRNameOrNum || g.num === +gRNameOrNum) {\n            isWithinReffedGroup = true;\n            if (g.hasRecursedWithin) {\n              throw new Error(overlappingRecursionMsg);\n            }\n            break;\n          }\n        }\n        if (!isWithinReffedGroup) {\n          throw new Error(r`Recursive \\g cannot be used outside the referenced group \"${\n            mode === 'external' ? gRNameOrNum : r`\\g<${gRNameOrNum}&R=${gRDepth}>`\n          }\"`);\n        }\n        const startPos = groupContentsStartPos.get(gRNameOrNum);\n        const groupContents = getGroupContents(pattern, startPos);\n        if (\n          hasNumberedBackref &&\n          hasUnescaped(groupContents, r`${namedCaptureDelim}|\\((?!\\?)`, Context.DEFAULT)\n        ) {\n          throw new Error(\n            // When used in `external` mode by transpilers other than Regex+, backrefs might have\n            // gone through conversion from named to numbered, so avoid a misleading error\n            `${mode === 'external' ? 'Backrefs' : 'Numbered backrefs'} cannot be used with recursion of capturing groups`\n          );\n        }\n        const groupContentsLeft = pattern.slice(startPos, match.index);\n        const groupContentsRight = groupContents.slice(groupContentsLeft.length + m.length);\n        const numAddedHiddenCapturesPreExpansion = addedHiddenCaptures.length;\n        const reps = +gRDepth - 1;\n        const expansion = makeRecursive(\n          groupContentsLeft,\n          groupContentsRight,\n          reps,\n          true,\n          hiddenCaptures,\n          addedHiddenCaptures,\n          numCapturesPassed\n        );\n        captureTransfers = mapCaptureTransfers(\n          captureTransfers,\n          groupContentsLeft,\n          reps,\n          addedHiddenCaptures.length - numAddedHiddenCapturesPreExpansion,\n          numAddedHiddenCapturesPreExpansion,\n          numCapturesPassed\n        );\n        const pre = pattern.slice(0, startPos);\n        const post = pattern.slice(startPos + groupContents.length);\n        // Modify the string we're looping over\n        pattern = `${pre}${expansion}${post}`;\n        // Step forward for the next loop iteration\n        token.lastIndex += expansion.length - m.length - groupContentsLeft.length - groupContentsRight.length;\n        openGroups.forEach(g => g.hasRecursedWithin = true);\n        hasRecursed = true;\n      } else if (captureName) {\n        numCapturesPassed++;\n        groupContentsStartPos.set(String(numCapturesPassed), token.lastIndex);\n        groupContentsStartPos.set(captureName, token.lastIndex);\n        openGroups.push({\n          num: numCapturesPassed,\n          name: captureName,\n        });\n      } else if (m[0] === '(') {\n        const isUnnamedCapture = m === '(';\n        if (isUnnamedCapture) {\n          numCapturesPassed++;\n          groupContentsStartPos.set(String(numCapturesPassed), token.lastIndex);\n        }\n        openGroups.push(isUnnamedCapture ? {num: numCapturesPassed} : {});\n      } else if (m === ')') {\n        openGroups.pop();\n      }\n\n    } else if (m === ']') {\n      numCharClassesOpen--;\n    }\n  }\n\n  hiddenCaptures.push(...addedHiddenCaptures);\n\n  return {\n    pattern,\n    captureTransfers,\n    hiddenCaptures,\n  };\n}\n\n/**\n@param {string} max\n*/\nfunction assertMaxInBounds(max) {\n  const errMsg = `Max depth must be integer between 2 and 100; used ${max}`;\n  if (!/^[1-9]\\d*$/.test(max)) {\n    throw new Error(errMsg);\n  }\n  max = +max;\n  if (max < 2 || max > 100) {\n    throw new Error(errMsg);\n  }\n}\n\n/**\n@param {string} left\n@param {string} right\n@param {number} reps\n@param {boolean} isSubpattern\n@param {Array<number>} hiddenCaptures\n@param {Array<number>} addedHiddenCaptures\n@param {number} numCapturesPassed\n@returns {string}\n*/\nfunction makeRecursive(\n  left,\n  right,\n  reps,\n  isSubpattern,\n  hiddenCaptures,\n  addedHiddenCaptures,\n  numCapturesPassed\n) {\n  const namesInRecursed = new Set();\n  // Can skip this work if not needed\n  if (isSubpattern) {\n    forEachUnescaped(left + right, namedCaptureDelim, ({groups: {captureName}}) => {\n      namesInRecursed.add(captureName);\n    }, Context.DEFAULT);\n  }\n  const rest = [\n    reps,\n    isSubpattern ? namesInRecursed : null,\n    hiddenCaptures,\n    addedHiddenCaptures,\n    numCapturesPassed,\n  ];\n  // Depth 2: 'left(?:left(?:)right)right'\n  // Depth 3: 'left(?:left(?:left(?:)right)right)right'\n  // Empty group in the middle separates tokens and absorbs a following quantifier if present\n  return `${left}${\n    repeatWithDepth(`(?:${left}`, 'forward', ...rest)\n  }(?:)${\n    repeatWithDepth(`${right})`, 'backward', ...rest)\n  }${right}`;\n}\n\n/**\n@param {string} pattern\n@param {'forward' | 'backward'} direction\n@param {number} reps\n@param {Set<string> | null} namesInRecursed\n@param {Array<number>} hiddenCaptures\n@param {Array<number>} addedHiddenCaptures\n@param {number} numCapturesPassed\n@returns {string}\n*/\nfunction repeatWithDepth(\n  pattern,\n  direction,\n  reps,\n  namesInRecursed,\n  hiddenCaptures,\n  addedHiddenCaptures,\n  numCapturesPassed\n) {\n  const startNum = 2;\n  const getDepthNum = i => direction === 'forward' ? (i + startNum) : (reps - i + startNum - 1);\n  let result = '';\n  for (let i = 0; i < reps; i++) {\n    const depthNum = getDepthNum(i);\n    result += replaceUnescaped(\n      pattern,\n      r`${captureDelim}|\\\\k<(?<backref>[^>]+)>`,\n      ({0: m, groups: {captureName, unnamed, backref}}) => {\n        if (backref && namesInRecursed && !namesInRecursed.has(backref)) {\n          // Don't alter backrefs to groups outside the recursed subpattern\n          return m;\n        }\n        const suffix = `_$${depthNum}`;\n        if (unnamed || captureName) {\n          const addedCaptureNum = numCapturesPassed + addedHiddenCaptures.length + 1;\n          addedHiddenCaptures.push(addedCaptureNum);\n          incrementIfAtLeast(hiddenCaptures, addedCaptureNum);\n          return unnamed ? m : `(?<${captureName}${suffix}>`;\n        }\n        return r`\\k<${backref}${suffix}>`;\n      },\n      Context.DEFAULT\n    );\n  }\n  return result;\n}\n\n/**\nUpdates the array in place by incrementing each value greater than or equal to the threshold.\n@param {Array<number>} arr\n@param {number} threshold\n*/\nfunction incrementIfAtLeast(arr, threshold) {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] >= threshold) {\n      arr[i]++;\n    }\n  }\n}\n\n/**\n@param {Map<number, Array<number>>} captureTransfers\n@param {string} left\n@param {number} reps\n@param {number} numCapturesAddedInExpansion\n@param {number} numAddedHiddenCapturesPreExpansion\n@param {number} numCapturesPassed\n@returns {Map<number, Array<number>>}\n*/\nfunction mapCaptureTransfers(captureTransfers, left, reps, numCapturesAddedInExpansion, numAddedHiddenCapturesPreExpansion, numCapturesPassed) {\n  if (captureTransfers.size && numCapturesAddedInExpansion) {\n    let numCapturesInLeft = 0;\n    forEachUnescaped(left, captureDelim, () => numCapturesInLeft++, Context.DEFAULT);\n    // Is 0 for global recursion\n    const recursionDelimCaptureNum = numCapturesPassed - numCapturesInLeft + numAddedHiddenCapturesPreExpansion;\n    const newCaptureTransfers = new Map();\n    captureTransfers.forEach((from, to) => {\n      const numCapturesInRight = (numCapturesAddedInExpansion - (numCapturesInLeft * reps)) / reps;\n      const numCapturesAddedInLeft = numCapturesInLeft * reps;\n      const newTo = to > (recursionDelimCaptureNum + numCapturesInLeft) ? to + numCapturesAddedInExpansion : to;\n      const newFrom = [];\n      for (const f of from) {\n        // Before the recursed subpattern\n        if (f <= recursionDelimCaptureNum) {\n          newFrom.push(f);\n        // After the recursed subpattern\n        } else if (f > (recursionDelimCaptureNum + numCapturesInLeft + numCapturesInRight)) {\n          newFrom.push(f + numCapturesAddedInExpansion);\n        // Within the recursed subpattern, on the left of the recursion token\n        } else if (f <= (recursionDelimCaptureNum + numCapturesInLeft)) {\n          for (let i = 0; i <= reps; i++) {\n            newFrom.push(f + (numCapturesInLeft * i));\n          }\n        // Within the recursed subpattern, on the right of the recursion token\n        } else {\n          for (let i = 0; i <= reps; i++) {\n            newFrom.push(f + numCapturesAddedInLeft + (numCapturesInRight * i));\n          }\n        }\n      }\n      newCaptureTransfers.set(newTo, newFrom);\n    });\n    return newCaptureTransfers;\n  }\n  return captureTransfers;\n}\n\nexport {\n  recursion,\n};\n", "import {EsVersion, Target} from './options.js';\n\nconst cp = String.fromCodePoint;\nconst r = String.raw;\n\nconst envFlags = {\n  flagGroups: (() => {\n    try {\n      new RegExp('(?i:)');\n    } catch {\n      return false;\n    }\n    return true;\n  })(),\n  unicodeSets: (() => {\n    try {\n      new RegExp('', 'v');\n    } catch {\n      return false;\n    }\n    return true;\n  })(),\n};\n// Detect WebKit bug: <github.com/slevithan/oniguruma-to-es/issues/30>\nenvFlags.bugFlagVLiteralHyphenIsRange = envFlags.unicodeSets ? (() => {\n  try {\n    new RegExp(r`[\\d\\-a]`, 'v');\n  } catch {\n    return true;\n  }\n  return false;\n})() : false;\n// Detect WebKit bug: <github.com/slevithan/oniguruma-to-es/issues/38>\nenvFlags.bugNestedClassIgnoresNegation = envFlags.unicodeSets && new RegExp('[[^a]]', 'v').test('a');\n\nfunction getNewCurrentFlags(current, {enable, disable}) {\n  return {\n    dotAll: !disable?.dotAll && !!(enable?.dotAll || current.dotAll),\n    ignoreCase: !disable?.ignoreCase && !!(enable?.ignoreCase || current.ignoreCase),\n  };\n}\n\nfunction getOrInsert(map, key, defaultValue) {\n  if (!map.has(key)) {\n    map.set(key, defaultValue);\n  }\n  return map.get(key);\n}\n\n/**\n@param {keyof Target} target\n@param {keyof Target} min\n@returns {boolean}\n*/\nfunction isMinTarget(target, min) {\n  return EsVersion[target] >= EsVersion[min];\n}\n\nfunction throwIfNullish(value, msg) {\n  if (value == null) {\n    throw new Error(msg ?? 'Value expected');\n  }\n  return value;\n}\n\nexport {\n  cp,\n  envFlags,\n  getNewCurrentFlags,\n  getOrInsert,\n  isMinTarget,\n  r,\n  throwIfNullish,\n};\n", "import {envFlags} from './utils.js';\n/**\n@import {ToRegExpOptions} from './index.js';\n*/\n\nconst Accuracy = /** @type {const} */ ({\n  default: 'default',\n  strict: 'strict',\n});\n\nconst EsVersion = {\n  ES2025: 2025,\n  ES2024: 2024,\n  ES2018: 2018,\n};\n\nconst Target = /** @type {const} */ ({\n  auto: 'auto',\n  ES2025: 'ES2025',\n  ES2024: 'ES2024',\n  ES2018: 'ES2018',\n});\n\n/**\nReturns a complete set of options, with default values set for options that weren't provided.\n@param {ToRegExpOptions} [options]\n@returns {Required<ToRegExpOptions>}\n*/\nfunction getOptions(options = {}) {\n  if ({}.toString.call(options) !== '[object Object]') {\n    throw new Error('Unexpected options');\n  }\n  if (options.target !== undefined && !Target[options.target]) {\n    throw new Error(`Unexpected target \"${options.target}\"`)\n  }\n  // Set default values\n  const opts = {\n    // Sets the level of emulation rigor/strictness.\n    accuracy: 'default',\n    // Disables advanced emulation that relies on returning a `RegExp` subclass, resulting in\n    // certain patterns not being emulatable.\n    avoidSubclass: false,\n    // Oniguruma flags; a string with `i`, `m`, `x`, `D`, `S`, `W`, `y{g}` in any order (all\n    // optional). Oniguruma's `m` is equivalent to JavaScript's `s` (`dotAll`).\n    flags: '',\n    // Include JavaScript flag `g` (`global`) in the result.\n    global: false,\n    // Include JavaScript flag `d` (`hasIndices`) in the result.\n    hasIndices: false,\n    // Delay regex construction until first use if the transpiled pattern is at least this length.\n    lazyCompileLength: Infinity,\n    // JavaScript version used for generated regexes. Using `auto` detects the best value based on\n    // your environment. Later targets allow faster processing, simpler generated source, and\n    // support for additional features.\n    target: 'auto',\n    // Disables minifications that simplify the pattern without changing the meaning.\n    verbose: false,\n    ...options,\n    // Advanced options that override standard behavior, error checking, and flags when enabled.\n    rules: {\n      // Useful with TextMate grammars that merge backreferences across patterns.\n      allowOrphanBackrefs: false,\n      // Use ASCII `\\b` and `\\B`, which increases search performance of generated regexes.\n      asciiWordBoundaries: false,\n      // Allow unnamed captures and numbered calls (backreferences and subroutines) when using\n      // named capture. This is Oniguruma option `ONIG_OPTION_CAPTURE_GROUP`; on by default in\n      // `vscode-oniguruma`.\n      captureGroup: false,\n      // Change the recursion depth limit from Oniguruma's `20` to an integer `2`\u2013`20`.\n      recursionLimit: 20,\n      // `^` as `\\A`; `$` as`\\Z`. Improves search performance of generated regexes without changing\n      // the meaning if searching line by line. This is Oniguruma option `ONIG_OPTION_SINGLELINE`.\n      singleline: false,\n      ...options.rules,\n    },\n  };\n  if (opts.target === 'auto') {\n    opts.target = envFlags.flagGroups ? 'ES2025' : (envFlags.unicodeSets ? 'ES2024' : 'ES2018');\n  }\n  return opts;\n}\n\nexport {\n  Accuracy,\n  EsVersion,\n  getOptions,\n  Target,\n};\n", "import {cp, r} from './utils.js';\nimport {slug} from 'oniguruma-parser/parser';\n\n// `\\t\\n\\v\\f\\r\\x20`\nconst asciiSpaceChar = '[\\t-\\r ]';\n\nconst CharsWithoutIgnoreCaseExpansion = new Set([\n  cp(0x130), // \u0130\n  cp(0x131), // \u0131\n]);\n\n// Different than `PosixClassMap`'s `word`\nconst defaultWordChar = r`[\\p{L}\\p{M}\\p{N}\\p{Pc}]`;\n\nfunction getIgnoreCaseMatchChars(char) {\n  // Some chars should not match the chars they case swap to\n  if (CharsWithoutIgnoreCaseExpansion.has(char)) {\n    return [char];\n  }\n  const set = new Set();\n  const lower = char.toLowerCase();\n  // Everything else is based on `lower`\n  const upper = lower.toUpperCase();\n  const title = LowerToTitleCaseMap.get(lower);\n  const altLower = LowerToAlternativeLowerCaseMap.get(lower);\n  const altUpper = LowerToAlternativeUpperCaseMap.get(lower);\n  // Exclude ucase if multiple chars; count code point length. Excludes ucase versions of German\n  // es-zed '\u00DF', ligatures like '\uFB00', and chars with no precomposed ucase like '\u0149'. See\n  // <unicode.org/Public/UNIDATA/SpecialCasing.txt>\n  if ([...upper].length === 1) {\n    set.add(upper);\n  }\n  altUpper && set.add(altUpper);\n  title && set.add(title);\n  // Lcase of '\u0130' is multiple chars, but it's excluded by `CharsWithoutIgnoreCaseExpansion`\n  set.add(lower);\n  altLower && set.add(altLower);\n  return [...set];\n}\n\n// The following set includes:\n// - All ES2024 general categories and their aliases (all are supported by Oniguruma). See\n//   <github.com/mathiasbynens/unicode-match-property-value-ecmascript/blob/main/data/mappings.js>\n// - All ES2024 binary properties and their aliases (all are supported by Oniguruma). See\n//   <tc39.es/ecma262/multipage/text-processing.html#table-binary-unicode-properties>\n// Unicode properties must be mapped to property names supported by JS, and must also apply JS's\n// stricter rules for casing, whitespace, hyphens, and underscores in Unicode property names. In\n// order to remain lightweight, this library assumes properties not in this list are Unicode script\n// names (which require a `Script=` or `sc=` prefix in JS). Unlike JS, Oniguruma doesn't support\n// script extensions, and it supports some properties that aren't supported in JS (including blocks\n// with an `In_` prefix). See also:\n// - Properties supported in Oniguruma: <github.com/kkos/oniguruma/blob/master/doc/UNICODE_PROPERTIES>\n// - Properties supported in JS by spec version: <github.com/eslint-community/regexpp/blob/main/src/unicode/properties.ts>\nconst JsUnicodePropertyMap = /* @__PURE__ */ new Map(\n`C Other\nCc Control cntrl\nCf Format\nCn Unassigned\nCo Private_Use\nCs Surrogate\nL Letter\nLC Cased_Letter\nLl Lowercase_Letter\nLm Modifier_Letter\nLo Other_Letter\nLt Titlecase_Letter\nLu Uppercase_Letter\nM Mark Combining_Mark\nMc Spacing_Mark\nMe Enclosing_Mark\nMn Nonspacing_Mark\nN Number\nNd Decimal_Number digit\nNl Letter_Number\nNo Other_Number\nP Punctuation punct\nPc Connector_Punctuation\nPd Dash_Punctuation\nPe Close_Punctuation\nPf Final_Punctuation\nPi Initial_Punctuation\nPo Other_Punctuation\nPs Open_Punctuation\nS Symbol\nSc Currency_Symbol\nSk Modifier_Symbol\nSm Math_Symbol\nSo Other_Symbol\nZ Separator\nZl Line_Separator\nZp Paragraph_Separator\nZs Space_Separator\nASCII\nASCII_Hex_Digit AHex\nAlphabetic Alpha\nAny\nAssigned\nBidi_Control Bidi_C\nBidi_Mirrored Bidi_M\nCase_Ignorable CI\nCased\nChanges_When_Casefolded CWCF\nChanges_When_Casemapped CWCM\nChanges_When_Lowercased CWL\nChanges_When_NFKC_Casefolded CWKCF\nChanges_When_Titlecased CWT\nChanges_When_Uppercased CWU\nDash\nDefault_Ignorable_Code_Point DI\nDeprecated Dep\nDiacritic Dia\nEmoji\nEmoji_Component EComp\nEmoji_Modifier EMod\nEmoji_Modifier_Base EBase\nEmoji_Presentation EPres\nExtended_Pictographic ExtPict\nExtender Ext\nGrapheme_Base Gr_Base\nGrapheme_Extend Gr_Ext\nHex_Digit Hex\nIDS_Binary_Operator IDSB\nIDS_Trinary_Operator IDST\nID_Continue IDC\nID_Start IDS\nIdeographic Ideo\nJoin_Control Join_C\nLogical_Order_Exception LOE\nLowercase Lower\nMath\nNoncharacter_Code_Point NChar\nPattern_Syntax Pat_Syn\nPattern_White_Space Pat_WS\nQuotation_Mark QMark\nRadical\nRegional_Indicator RI\nSentence_Terminal STerm\nSoft_Dotted SD\nTerminal_Punctuation Term\nUnified_Ideograph UIdeo\nUppercase Upper\nVariation_Selector VS\nWhite_Space space\nXID_Continue XIDC\nXID_Start XIDS`.\n  split(/\\s/).\n  map(p => [slug(p), p])\n);\n\nconst LowerToAlternativeLowerCaseMap = new Map([\n  ['s', cp(0x17F)], // s, \u017F\n  [cp(0x17F), 's'], // \u017F, s\n]);\n\nconst LowerToAlternativeUpperCaseMap = new Map([\n  [cp(0xDF), cp(0x1E9E)], // \u00DF, \u1E9E\n  [cp(0x6B), cp(0x212A)], // k, \u212A (Kelvin)\n  [cp(0xE5), cp(0x212B)], // \u00E5, \u212B (Angstrom)\n  [cp(0x3C9), cp(0x2126)], // \u03C9, \u2126 (Ohm)\n]);\n\n// See <github.com/node-unicode/unicode-16.0.0/tree/main/General_Category/Titlecase_Letter>\nconst LowerToTitleCaseMap = new Map([\n  titleEntry(0x1C5),\n  titleEntry(0x1C8),\n  titleEntry(0x1CB),\n  titleEntry(0x1F2),\n  ...titleRange(0x1F88, 0x1F8F),\n  ...titleRange(0x1F98, 0x1F9F),\n  ...titleRange(0x1FA8, 0x1FAF),\n  titleEntry(0x1FBC),\n  titleEntry(0x1FCC),\n  titleEntry(0x1FFC),\n]);\n\n// Unlike Onig's Unicode properties via `\\p` and `\\P`, these names are case sensitive and don't\n// allow inserting whitespace and underscores. Definitions at\n// <github.com/kkos/oniguruma/blob/master/doc/RE> (see: POSIX bracket: Unicode Case)\n// Note: Handling in the transformer assumes all values here are a single, negateable node that's\n// not pre-negated at the top level. It also uses ASCII versions of `graph` and `print` for target\n// `ES2018` (which doesn't allow intersection) if `accuracy` isn't `strict`\nconst PosixClassMap = new Map([\n  ['alnum', r`[\\p{Alpha}\\p{Nd}]`],\n  ['alpha', r`\\p{Alpha}`],\n  ['ascii', r`\\p{ASCII}`],\n  ['blank', r`[\\p{Zs}\\t]`],\n  ['cntrl', r`\\p{Cc}`],\n  ['digit', r`\\p{Nd}`],\n  ['graph', r`[\\P{space}&&\\P{Cc}&&\\P{Cn}&&\\P{Cs}]`],\n  ['lower', r`\\p{Lower}`],\n  ['print', r`[[\\P{space}&&\\P{Cc}&&\\P{Cn}&&\\P{Cs}]\\p{Zs}]`],\n  ['punct', r`[\\p{P}\\p{S}]`], // Updated value from Onig 6.9.9; changed from Unicode `\\p{punct}`\n  ['space', r`\\p{space}`],\n  ['upper', r`\\p{Upper}`],\n  ['word', r`[\\p{Alpha}\\p{M}\\p{Nd}\\p{Pc}]`],\n  ['xdigit', r`\\p{AHex}`],\n]);\n\nfunction range(start, end) {\n  // const range = Array.from(Array(end + 1 - start), (_, i) => i + start);\n  // const range = Array(end + 1 - start).fill(start).map((x, i) => x + i);\n  const range = [];\n  for (let i = start; i <= end; i++) {\n    range.push(i);\n  }\n  return range;\n}\n\nfunction titleEntry(codePoint) {\n  const char = cp(codePoint);\n  return [char.toLowerCase(), char];\n}\n\nfunction titleRange(start, end) {\n  return range(start, end).map(codePoint => titleEntry(codePoint));\n}\n\nconst UnicodePropertiesWithSpecificCase = new Set([\n  'Lower', 'Lowercase',\n  'Upper', 'Uppercase',\n  'Ll', 'Lowercase_Letter',\n  'Lt', 'Titlecase_Letter',\n  'Lu', 'Uppercase_Letter',\n  // The `Changes_When_*` properties (and their aliases) could be included, but they're very rare.\n  // Some other properties include a handful of chars with specific cases only, but these chars are\n  // generally extreme edge cases and using such properties case insensitively generally produces\n  // undesired behavior anyway\n]);\n\nexport {\n  asciiSpaceChar,\n  defaultWordChar,\n  getIgnoreCaseMatchChars,\n  JsUnicodePropertyMap,\n  PosixClassMap,\n  UnicodePropertiesWithSpecificCase,\n};\n", "import {Accuracy, Target} from './options.js';\nimport {asciiSpaceChar, defaultWordChar, JsUnicodePropertyMap, PosixClassMap} from './unicode.js';\nimport {cp, getNewCurrentFlags, getOrInsert, isMinTarget, r} from './utils.js';\nimport {createAlternative, createAssertion, createBackreference, createCapturingGroup, createCharacter, createCharacterClass, createCharacterSet, createGroup, createLookaroundAssertion, createQuantifier, createSubroutine, createUnicodeProperty, hasOnlyChild, parse, slug} from 'oniguruma-parser/parser';\nimport {traverse} from 'oniguruma-parser/traverser';\n/**\n@import {CapturingGroupNode, OnigurumaAst, Node} from 'oniguruma-parser/parser';\n@import {Visitor} from 'oniguruma-parser/traverser';\n*/\n\n/**\n@typedef {\n  OnigurumaAst & {\n    options: {\n      disable: {[key: string]: boolean};\n      force: {[key: string]: boolean};\n    };\n    _originMap: Map<CapturingGroupNode, CapturingGroupNode>;\n    _strategy: string | null;\n  }\n} RegexPlusAst\n*/\n/**\nTransforms an Oniguruma AST in-place to a [Regex+](https://github.com/slevithan/regex) AST.\nAssumes target ES2025, expecting the generator to down-convert to the desired JS target version.\n\nRegex+'s syntax and behavior is a strict superset of native JavaScript, so the AST is very close\nto representing native ES2025 `RegExp` but with some added features (atomic groups, possessive\nquantifiers, recursion). The AST doesn't use some of Regex+'s extended features like flag x or\nsubroutines because they follow PCRE behavior and work somewhat differently than in Oniguruma. The\nAST represents what's needed to precisely reproduce Oniguruma behavior using Regex+.\n@param {OnigurumaAst} ast\n@param {{\n  accuracy?: keyof Accuracy;\n  asciiWordBoundaries?: boolean;\n  avoidSubclass?: boolean;\n  bestEffortTarget?: keyof Target;\n}} [options]\n@returns {RegexPlusAst}\n*/\nfunction transform(ast, options) {\n  const opts = {\n    // A couple edge cases exist where options `accuracy` and `bestEffortTarget` are used:\n    // - `CharacterSet` kind `text_segment` (`\\X`): An exact representation would require heavy\n    //   Unicode data; a best-effort approximation requires knowing the target.\n    // - `CharacterSet` kind `posix` with values `graph` and `print`: Their complex Unicode\n    //   representations would be hard to change to ASCII versions after the fact in the generator\n    //   based on `target`/`accuracy`, so produce the appropriate structure here.\n    accuracy: 'default',\n    asciiWordBoundaries: false,\n    avoidSubclass: false,\n    bestEffortTarget: 'ES2025',\n    ...options,\n  };\n  // Add `parent` properties to all nodes to help during traversal; also expected by the generator\n  addParentProperties(ast);\n  const firstPassState = {\n    accuracy: opts.accuracy,\n    asciiWordBoundaries: opts.asciiWordBoundaries,\n    avoidSubclass: opts.avoidSubclass,\n    flagDirectivesByAlt: new Map(),\n    jsGroupNameMap: new Map(),\n    minTargetEs2024: isMinTarget(opts.bestEffortTarget, 'ES2024'),\n    passedLookbehind: false,\n    strategy: null,\n    // Subroutines can appear before the groups they ref, so collect reffed nodes for a second pass \n    subroutineRefMap: new Map(),\n    supportedGNodes: new Set(),\n    digitIsAscii: ast.flags.digitIsAscii,\n    spaceIsAscii: ast.flags.spaceIsAscii,\n    wordIsAscii: ast.flags.wordIsAscii,\n  };\n  traverse(ast, FirstPassVisitor, firstPassState);\n  // Global flags modified by the first pass\n  const globalFlags = {\n    dotAll: ast.flags.dotAll,\n    ignoreCase: ast.flags.ignoreCase,\n  };\n  // The interplay of subroutines (with Onig's unique rules/behavior for them; see comments in the\n  // parser for details) with backref multiplexing (a unique Onig feature), flag modifiers, and\n  // duplicate group names (which might be indirectly referenced by subroutines even though\n  // subroutines can't directly reference duplicate names) is extremely complicated to emulate in\n  // JS in a way that handles all edge cases, so we need multiple passes to do it\n  const secondPassState = {\n    currentFlags: globalFlags,\n    prevFlags: null,\n    globalFlags,\n    groupOriginByCopy: new Map(),\n    groupsByName: new Map(),\n    multiplexCapturesToLeftByRef: new Map(),\n    openRefs: new Map(),\n    reffedNodesByReferencer: new Map(),\n    subroutineRefMap: firstPassState.subroutineRefMap,\n  };\n  traverse(ast, SecondPassVisitor, secondPassState);\n  const thirdPassState = {\n    groupsByName: secondPassState.groupsByName,\n    highestOrphanBackref: 0,\n    numCapturesToLeft: 0,\n    reffedNodesByReferencer: secondPassState.reffedNodesByReferencer,\n  };\n  traverse(ast, ThirdPassVisitor, thirdPassState);\n  ast._originMap = secondPassState.groupOriginByCopy;\n  ast._strategy = firstPassState.strategy;\n  return ast;\n}\n\nconst /** @type {Visitor} */ FirstPassVisitor = {\n  AbsenceFunction({node, parent, replaceWith}) {\n    const {body, kind} = node;\n    if (kind === 'repeater') {\n      // Convert `(?~\u2026)` to `(?:(?:(?!\u2026)\\p{Any})*)`\n      const innerGroup = createGroup();\n      innerGroup.body[0].body.push(\n        // Insert own alts as `body`\n        createLookaroundAssertion({negate: true, body}),\n        createUnicodeProperty('Any')\n      );\n      const outerGroup = createGroup();\n      outerGroup.body[0].body.push(\n        createQuantifier('greedy', 0, Infinity, innerGroup)\n      );\n      replaceWith(setParentDeep(outerGroup, parent), {traverse: true});\n    } else {\n      throw new Error(`Unsupported absence function \"(?~|\"`);\n    }\n  },\n\n  Alternative: {\n    enter({node, parent, key}, {flagDirectivesByAlt}) {\n      // Look for own-level flag directives when entering an alternative because after traversing\n      // the directive itself, any subsequent flag directives will no longer be at the same level\n      const flagDirectives = node.body.filter(el => el.kind === 'flags');\n      for (let i = key + 1; i < parent.body.length; i++) {\n        const forwardSiblingAlt = parent.body[i];\n        getOrInsert(flagDirectivesByAlt, forwardSiblingAlt, []).push(...flagDirectives);\n      }\n    },\n    exit({node}, {flagDirectivesByAlt}) {\n      // Wait until exiting to wrap an alternative's nodes with flag groups that extend flag\n      // directives from prior sibling alternatives, because doing this at the end allows inner\n      // nodes to accurately check their level in the tree\n      if (flagDirectivesByAlt.get(node)?.length) {\n        const flags = getCombinedFlagModsFromFlagNodes(flagDirectivesByAlt.get(node));\n        if (flags) {\n          const flagGroup = createGroup({flags});\n          flagGroup.body[0].body = node.body;\n          node.body = [setParentDeep(flagGroup, node)];\n        }\n      }\n    },\n  },\n\n  Assertion({node, parent, key, container, root, remove, replaceWith}, state) {\n    const {kind, negate} = node;\n    const {asciiWordBoundaries, avoidSubclass, supportedGNodes, wordIsAscii} = state;\n    if (kind === 'text_segment_boundary') {\n      // Supported by the parser but not yet for transpilation\n      throw new Error(`Unsupported text segment boundary \"\\\\${negate ? 'Y' : 'y'}\"`);\n    } else if (kind === 'line_end') {\n      replaceWith(setParentDeep(createLookaroundAssertion({body: [\n        createAlternative({body: [createAssertion('string_end')]}),\n        createAlternative({body: [createCharacter(10)]}), // `\\n`\n      ]}), parent));\n    } else if (kind === 'line_start') {\n      // Onig's `^` doesn't match after a string-terminating line feed\n      replaceWith(setParentDeep(parseFragment(r`(?<=\\A|\\n(?!\\z))`, {skipLookbehindValidation: true}), parent));\n    } else if (kind === 'search_start') {\n      if (supportedGNodes.has(node)) {\n        root.flags.sticky = true;\n        remove();\n      } else {\n        const prev = container[key - 1]; // parent.body[key - 1]\n        // Not all ways of blocking the `\\G` from matching are covered here (ex: a node prior to\n        // the `prev` node could block), but blocked `\\G` is an edge case and it's okay if some\n        // blocked cases result in the standard error for being unsupported without a subclass\n        if (prev && isAlwaysNonZeroLength(prev)) {\n          replaceWith(setParentDeep(createLookaroundAssertion({negate: true}), parent));\n        } else if (avoidSubclass) {\n          throw new Error(r`Uses \"\\G\" in a way that requires a subclass`);\n        } else {\n          replaceWith(setParent(createAssertion('string_start'), parent));\n          state.strategy = 'clip_search';\n        }\n      }\n    } else if (kind === 'string_end' || kind === 'string_start') {\n      // Don't need transformation since JS flag m isn't used\n    } else if (kind === 'string_end_newline') {\n      replaceWith(setParentDeep(parseFragment(r`(?=\\n?\\z)`), parent));\n    } else if (kind === 'word_boundary') {\n      if (!wordIsAscii && !asciiWordBoundaries) {\n        const b = `(?:(?<=${defaultWordChar})(?!${defaultWordChar})|(?<!${defaultWordChar})(?=${defaultWordChar}))`;\n        const B = `(?:(?<=${defaultWordChar})(?=${defaultWordChar})|(?<!${defaultWordChar})(?!${defaultWordChar}))`;\n        replaceWith(setParentDeep(parseFragment(negate ? B : b), parent));\n      }\n    } else {\n      throw new Error(`Unexpected assertion kind \"${kind}\"`);\n    }\n  },\n\n  Backreference({node}, {jsGroupNameMap}) {\n    let {ref} = node;\n    if (typeof ref === 'string' && !isValidJsGroupName(ref)) {\n      ref = getAndStoreJsGroupName(ref, jsGroupNameMap);\n      node.ref = ref;\n    }\n  },\n\n  CapturingGroup({node}, {jsGroupNameMap, subroutineRefMap}) {\n    let {name} = node;\n    if (name && !isValidJsGroupName(name)) {\n      name = getAndStoreJsGroupName(name, jsGroupNameMap);\n      node.name = name;\n    }\n    subroutineRefMap.set(node.number, node);\n    if (name) {\n      subroutineRefMap.set(name, node);\n    }\n  },\n\n  CharacterClassRange({node, parent, replaceWith}) {\n    if (parent.kind === 'intersection') {\n      // JS doesn't allow intersection with ranges without a wrapper class\n      const cc = createCharacterClass({body: [node]});\n      replaceWith(setParentDeep(cc, parent), {traverse: true});\n    }\n  },\n\n  CharacterSet({node, parent, replaceWith}, {accuracy, minTargetEs2024, digitIsAscii, spaceIsAscii, wordIsAscii}) {\n    const {kind, negate, value} = node;\n    // Flag D with `\\d`, `\\p{Digit}`, `[[:digit:]]`\n    if (digitIsAscii && (kind === 'digit' || value === 'digit')) {\n      replaceWith(setParent(createCharacterSet('digit', {negate}), parent));\n      return;\n    }\n    // Flag S with `\\s`, `\\p{Space}`, `[[:space:]]`\n    if (spaceIsAscii && (kind === 'space' || value === 'space')) {\n      replaceWith(setParentDeep(setNegate(parseFragment(asciiSpaceChar), negate), parent));\n      return;\n    }\n    // Flag W with `\\w`, `\\p{Word}`, `[[:word:]]`\n    if (wordIsAscii && (kind === 'word' || value === 'word')) {\n      replaceWith(setParent(createCharacterSet('word', {negate}), parent));\n      return;\n    }\n    if (kind === 'any') {\n      replaceWith(setParent(createUnicodeProperty('Any'), parent));\n    } else if (kind === 'digit') {\n      replaceWith(setParent(createUnicodeProperty('Nd', {negate}), parent));\n    } else if (kind === 'dot') {\n      // No-op; doesn't need transformation\n    } else if (kind === 'text_segment') {\n      if (accuracy === 'strict') {\n        throw new Error(r`Use of \"\\X\" requires non-strict accuracy`);\n      }\n      // Emoji pattern based on <github.com/slevithan/emoji-regex-xs> but adapted for our use case\n      // Note: Not using raw strings to work around Bun \u2264 1.1.34 issue <github.com/oven-sh/bun/issues/7540>\n      const eBase = '\\\\p{Emoji}(?:\\\\p{EMod}|\\\\uFE0F\\\\u20E3?|[\\\\x{E0020}-\\\\x{E007E}]+\\\\x{E007F})?';\n      const emoji = r`\\p{RI}{2}|${eBase}(?:\\u200D${eBase})*`;\n      replaceWith(setParentDeep(parseFragment(\n        // Close approximation of an extended grapheme cluster; see: <unicode.org/reports/tr29/>\n        r`(?>\\r\\n|${minTargetEs2024 ? r`\\p{RGI_Emoji}` : emoji}|\\P{M}\\p{M}*)`,\n        // Allow JS property `RGI_Emoji` through\n        {skipPropertyNameValidation: true}\n      ), parent));\n    } else if (kind === 'hex') {\n      replaceWith(setParent(createUnicodeProperty('AHex', {negate}), parent));\n    } else if (kind === 'newline') {\n      replaceWith(setParentDeep(parseFragment(negate ? '[^\\n]' : '(?>\\r\\n?|[\\n\\v\\f\\x85\\u2028\\u2029])'), parent));\n    } else if (kind === 'posix') {\n      if (!minTargetEs2024 && (value === 'graph' || value === 'print')) {\n        if (accuracy === 'strict') {\n          throw new Error(`POSIX class \"${value}\" requires min target ES2024 or non-strict accuracy`);\n        }\n        let ascii = {\n          graph: '!-~',\n          print: ' -~',\n        }[value];\n        if (negate) {\n          // POSIX classes are always nested in a char class; manually invert the range rather than\n          // using `[^\u2026]` so it can be unwrapped since ES2018 doesn't support nested classes\n          ascii = `\\0-${cp(ascii.codePointAt(0) - 1)}${cp(ascii.codePointAt(2) + 1)}-\\u{10FFFF}`;\n        }\n        replaceWith(setParentDeep(parseFragment(`[${ascii}]`), parent));\n      } else {\n        replaceWith(setParentDeep(setNegate(parseFragment(PosixClassMap.get(value)), negate), parent));\n      }\n    } else if (kind === 'property') {\n      if (!JsUnicodePropertyMap.has(slug(value))) {\n        // Assume it's a script; no error checking is the price for avoiding heavyweight Unicode\n        // data for all script names\n        node.key = 'sc';\n      }\n    } else if (kind === 'space') {\n      // Can't use JS's Unicode `\\s` since unlike Onig it includes `\\uFEFF` and excludes `\\x85`\n      replaceWith(setParent(createUnicodeProperty('space', {negate}), parent));\n    } else if (kind === 'word') {\n      replaceWith(setParentDeep(setNegate(parseFragment(defaultWordChar), negate), parent));\n    } else {\n      throw new Error(`Unexpected character set kind \"${kind}\"`);\n    }\n  },\n\n  Directive({node, parent, root, remove, replaceWith, removeAllPrevSiblings, removeAllNextSiblings}) {\n    const {kind, flags} = node;\n    if (kind === 'flags') {\n      if (!flags.enable && !flags.disable) {\n        // Flag directive without flags; ex: `(?-)`, `(?--)`\n        remove();\n      } else {\n        const flagGroup = createGroup({flags});\n        flagGroup.body[0].body = removeAllNextSiblings();\n        replaceWith(setParentDeep(flagGroup, parent), {traverse: true});\n      }\n    } else if (kind === 'keep') {\n      const firstAlt = root.body[0];\n      // Supporting a full-pattern wrapper around `\\K` enables use with flag modifiers\n      const hasWrapperGroup =\n        root.body.length === 1 &&\n        // Not emulatable if within a `CapturingGroup`\n        hasOnlyChild(firstAlt, {type: 'Group'}) &&\n        firstAlt.body[0].body.length === 1;\n      const topLevel = hasWrapperGroup ? firstAlt.body[0] : root;\n      if (parent.parent !== topLevel || topLevel.body.length > 1) {\n        throw new Error(r`Uses \"\\K\" in a way that's unsupported`);\n      }\n      const lookbehind = createLookaroundAssertion({behind: true});\n      lookbehind.body[0].body = removeAllPrevSiblings();\n      replaceWith(setParentDeep(lookbehind, parent));\n    } else {\n      throw new Error(`Unexpected directive kind \"${kind}\"`);\n    }\n  },\n\n  Flags({node, parent}) {\n    // Throw for flags supported by the parser but not yet for transpilation\n    if (node.posixIsAscii) {\n      throw new Error('Unsupported flag \"P\"');\n    }\n    if (node.textSegmentMode === 'word') {\n      throw new Error('Unsupported flag \"y{w}\"');\n    }\n    // Remove Onig flags that aren't available in JS\n    [ 'digitIsAscii', // Flag D\n      'extended', // Flag x\n      'posixIsAscii', // Flag P\n      'spaceIsAscii', // Flag S\n      'wordIsAscii', // Flag W\n      'textSegmentMode', // Flag y{g} or y{w}\n    ].forEach(f => delete node[f]);\n    Object.assign(node, {\n      // JS flag g; no Onig equiv\n      global: false,\n      // JS flag d; no Onig equiv\n      hasIndices: false,\n      // JS flag m; no Onig equiv but its behavior is always on in Onig. Onig's only line break\n      // char is line feed, unlike JS, so this flag isn't used since it would produce inaccurate\n      // results (also allows `^` and `$` to be used in the generator for string start and end)\n      multiline: false,\n      // JS flag y; no Onig equiv, but used for `\\G` emulation\n      sticky: node.sticky ?? false,\n      // Note: Regex+ doesn't allow explicitly adding flags it handles implicitly, so leave out\n      // properties `unicode` (JS flag u) and `unicodeSets` (JS flag v). Keep the existing values\n      // for `ignoreCase` (flag i) and `dotAll` (JS flag s, but Onig flag m)\n    });\n    // Options accepted by Regex+; see <github.com/slevithan/regex#-options>\n    parent.options = {\n      disable: {\n        // Onig uses different rules for flag x than Regex+, so disable the implicit flag\n        x: true,\n        // Onig has no flag to control \"named capture only\" mode but contextually applies its\n        // behavior when named capturing is used, so disable Regex+'s implicit flag for it\n        n: true,\n      },\n      force: {\n        // Always add flag v because we're generating an AST that relies on it (it enables JS\n        // support for Onig features nested classes, intersection, Unicode properties, etc.).\n        // However, the generator might disable flag v based on its `target` option\n        v: true,\n      },\n    };\n  },\n\n  Group({node}) {\n    if (!node.flags) {\n      return;\n    }\n    const {enable, disable} = node.flags;\n    // Onig's flag x (`extended`) isn't available in JS\n    enable?.extended && delete enable.extended;\n    disable?.extended && delete disable.extended;\n    // JS doesn't support flag groups that enable and disable the same flag; ex: `(?i-i:)`\n    enable?.dotAll && disable?.dotAll && delete enable.dotAll;\n    enable?.ignoreCase && disable?.ignoreCase && delete enable.ignoreCase;\n    // Cleanup\n    enable && !Object.keys(enable).length && delete node.flags.enable;\n    disable && !Object.keys(disable).length && delete node.flags.disable;\n    !node.flags.enable && !node.flags.disable && delete node.flags;\n  },\n\n  LookaroundAssertion({node}, state) {\n    const {kind} = node;\n    if (kind === 'lookbehind') {\n      state.passedLookbehind = true;\n    }\n  },\n\n  NamedCallout({node, parent, replaceWith}) {\n    const {kind} = node;\n    if (kind === 'fail') {\n      replaceWith(setParentDeep(createLookaroundAssertion({negate: true}), parent));\n    } else {\n      throw new Error(`Unsupported named callout \"(*${kind.toUpperCase()}\"`);\n    }\n  },\n\n  Quantifier({node}) {\n    if (node.body.type === 'Quantifier') {\n      // Change e.g. `a**` to `(?:a*)*`\n      const group = createGroup();\n      group.body[0].body.push(node.body);\n      node.body = setParentDeep(group, node);\n    }\n  },\n\n  Regex: {\n    enter({node}, {supportedGNodes}) {\n      // For `\\G` to be accurately emulatable using JS flag y, it must be at (and only at) the start\n      // of every top-level alternative (with complex rules for what determines being at the start).\n      // Additional `\\G` error checking in `Assertion` visitor\n      const leadingGs = [];\n      let hasAltWithLeadG = false;\n      let hasAltWithoutLeadG = false;\n      for (const alt of node.body) {\n        if (alt.body.length === 1 && alt.body[0].kind === 'search_start') {\n          // Remove the `\\G` (leaving behind an empty alternative, and without adding JS flag y)\n          // since a top-level alternative that includes only `\\G` always matches at the start of the\n          // match attempt. Note that this is based on Oniguruma's rules, and is different than other\n          // regex flavors where `\\G` matches at the end of the previous match (a subtle distinction\n          // that's relevant after zero-length matches)\n          alt.body.pop();\n        } else {\n          const leadingG = getLeadingG(alt.body);\n          if (leadingG) {\n            hasAltWithLeadG = true;\n            Array.isArray(leadingG) ?\n              leadingGs.push(...leadingG) :\n              leadingGs.push(leadingG);\n          } else {\n            hasAltWithoutLeadG = true;\n          }\n        }\n      }\n      if (hasAltWithLeadG && !hasAltWithoutLeadG) {\n        // Supported `\\G` nodes will be removed (and add flag y) when traversed\n        leadingGs.forEach(g => supportedGNodes.add(g));\n      }\n    },\n    exit(_, {accuracy, passedLookbehind, strategy}) {\n      if (accuracy === 'strict' && passedLookbehind && strategy) {\n        throw new Error(r`Uses \"\\G\" in a way that requires non-strict accuracy`);\n      }\n    },\n  },\n\n  Subroutine({node}, {jsGroupNameMap}) {\n    let {ref} = node;\n    if (typeof ref === 'string' && !isValidJsGroupName(ref)) {\n      ref = getAndStoreJsGroupName(ref, jsGroupNameMap);\n      node.ref = ref;\n    }\n  },\n};\n\nconst /** @type {Visitor} */ SecondPassVisitor = {\n  Backreference({node}, {multiplexCapturesToLeftByRef, reffedNodesByReferencer}) {\n    const {orphan, ref} = node;\n    if (!orphan) {\n      // Copy the current state for later multiplexing expansion. That's done in a subsequent pass\n      // because backref numbers need to be recalculated after subroutine expansion\n      reffedNodesByReferencer.set(node, [...multiplexCapturesToLeftByRef.get(ref).map(({node}) => node)]);\n    }\n  },\n\n  CapturingGroup: {\n    enter(\n      { node,\n        parent,\n        replaceWith,\n        skip,\n      },\n      { groupOriginByCopy,\n        groupsByName,\n        multiplexCapturesToLeftByRef,\n        openRefs,\n        reffedNodesByReferencer,\n      }\n    ) {\n      // Has value if we're within a subroutine expansion\n      const origin = groupOriginByCopy.get(node);\n\n      // ## Handle recursion; runs after subroutine expansion\n      if (origin && openRefs.has(node.number)) {\n        // Recursive subroutines don't affect any following backrefs to their `ref` (unlike other\n        // subroutines), so don't wrap with a capture. The reffed group might have its name removed\n        // due to later subroutine expansion\n        const recursion = setParent(createRecursion(node.number), parent);\n        reffedNodesByReferencer.set(recursion, openRefs.get(node.number));\n        replaceWith(recursion);\n        return;\n      }\n      openRefs.set(node.number, node);\n\n      // ## Track data for backref multiplexing\n      multiplexCapturesToLeftByRef.set(node.number, []);\n      if (node.name) {\n        getOrInsert(multiplexCapturesToLeftByRef, node.name, []);\n      }\n      const multiplexNodes = multiplexCapturesToLeftByRef.get(node.name ?? node.number);\n      for (let i = 0; i < multiplexNodes.length; i++) {\n        // Captures added via subroutine expansion (maybe indirectly because they were descendant\n        // captures of the reffed group or in a nested subroutine expansion) form a set with their\n        // origin group and any other copies of it added via subroutines. Only the most recently\n        // matched within this set is added to backref multiplexing. So search the list of already-\n        // tracked multiplexed nodes for this group name or number to see if there's a node being\n        // replaced by this capture\n        const multiplex = multiplexNodes[i];\n        if (\n          // This group is from subroutine expansion, and there's a multiplex value from either the\n          // origin node or a prior subroutine expansion group with the same origin\n          (origin === multiplex.node || (origin && origin === multiplex.origin)) ||\n          // This group is not from subroutine expansion, and it comes after a subroutine expansion\n          // group that refers to this group\n          node === multiplex.origin\n        ) {\n          multiplexNodes.splice(i, 1);\n          break;\n        }\n      }\n      multiplexCapturesToLeftByRef.get(node.number).push({node, origin});\n      if (node.name) {\n        multiplexCapturesToLeftByRef.get(node.name).push({node, origin});\n      }\n\n      // ## Track data for duplicate names\n      // Pre-ES2025 doesn't allow duplicate names, but ES2025 allows duplicate names that are\n      // unique per mutually exclusive alternation path. However, Oniguruma's handling for named\n      // subpatterns on match results means we can't use this ES2025 feature even when in an ES2025\n      // env. So, if using a duplicate name, remove the name from all but the first instance that\n      // wasn't created by subroutine expansion\n      if (node.name) {\n        const groupsWithSameName = getOrInsert(groupsByName, node.name, new Map());\n        let hasDuplicateNameToRemove = false;\n        if (origin) {\n          // Subroutines and their child captures shouldn't hold duplicate names in the final state\n          hasDuplicateNameToRemove = true;\n        } else {\n          for (const groupInfo of groupsWithSameName.values()) {\n            if (!groupInfo.hasDuplicateNameToRemove) {\n              // Will change to an unnamed capture in a later pass\n              hasDuplicateNameToRemove = true;\n              break;\n            }\n          }\n        }\n        groupsByName.get(node.name).set(node, {node, hasDuplicateNameToRemove});\n      }\n    },\n    exit({node}, {openRefs}) {\n      openRefs.delete(node.number);\n    },\n  },\n\n  Group: {\n    enter({node}, state) {\n      // Flag directives have already been converted to flag groups by the previous pass\n      state.prevFlags = state.currentFlags;\n      if (node.flags) {\n        state.currentFlags = getNewCurrentFlags(state.currentFlags, node.flags);\n      }\n    },\n    exit(_, state) {\n      state.currentFlags = state.prevFlags;\n    },\n  },\n\n  Subroutine({node, parent, replaceWith}, state) {\n    const {isRecursive, ref} = node;\n\n    // Subroutine nodes with `isRecursive` are created during the current traversal; they're only\n    // traversed here if a recursive subroutine created during traversal is then copied by a\n    // subroutine expansion, e.g. with `(?<a>\\g<a>)\\g<a>`\n    if (isRecursive) {\n      // Immediate parent is an alternative or quantifier; can skip\n      let reffed = parent;\n      while ((reffed = reffed.parent)) {\n        if (reffed.type === 'CapturingGroup' && (reffed.name === ref || reffed.number === ref)) {\n          break;\n        }\n      }\n      // Track the referenced node because `ref`s are rewritten in a subsequent pass; capturing\n      // group names and numbers might change due to subroutine expansion and duplicate group names\n      state.reffedNodesByReferencer.set(node, reffed);\n      return;\n    }\n\n    const reffedGroupNode = state.subroutineRefMap.get(ref);\n    // Other forms of recursion are handled by the `CapturingGroup` visitor\n    const isGlobalRecursion = ref === 0;\n    const expandedSubroutine = isGlobalRecursion ?\n      createRecursion(0) :\n      // The reffed group might itself contain subroutines, which are expanded during sub-traversal\n      cloneCapturingGroup(reffedGroupNode, state.groupOriginByCopy, null);\n    let replacement = expandedSubroutine;\n    if (!isGlobalRecursion) {\n      // Subroutines take their flags from the reffed group, not the flags surrounding themselves\n      const reffedGroupFlagMods = getCombinedFlagModsFromFlagNodes(getAllParents(\n        reffedGroupNode,\n        p => p.type === 'Group' && !!p.flags\n      ));\n      const reffedGroupFlags = reffedGroupFlagMods ?\n        getNewCurrentFlags(state.globalFlags, reffedGroupFlagMods) :\n        state.globalFlags;\n      if (!areFlagsEqual(reffedGroupFlags, state.currentFlags)) {\n        replacement = createGroup({\n          flags: getFlagModsFromFlags(reffedGroupFlags),\n        });\n        replacement.body[0].body.push(expandedSubroutine);\n      }\n    }\n    replaceWith(setParentDeep(replacement, parent), {traverse: !isGlobalRecursion});\n  },\n};\n\nconst /** @type {Visitor} */ ThirdPassVisitor = {\n  Backreference({node, parent, replaceWith}, state) {\n    if (node.orphan) {\n      state.highestOrphanBackref = Math.max(state.highestOrphanBackref, node.ref);\n      // Don't renumber; used with `allowOrphanBackrefs`\n      return;\n    }\n    const reffedNodes = state.reffedNodesByReferencer.get(node);\n    const participants = reffedNodes.filter(reffed => canParticipateWithNode(reffed, node));\n    // For the backref's `ref`, use `number` rather than `name` because group names might have been\n    // removed if they're duplicates within their alternation path, or they might be removed later\n    // by the generator (depending on target) if they're duplicates within the overall pattern.\n    // Backrefs must come after groups they ref, so reffed node `number`s are already recalculated\n    if (!participants.length) {\n      // If no participating capture, convert backref to to `(?!)`; backrefs to nonparticipating\n      // groups can't match in Onig but match the empty string in JS\n      replaceWith(setParentDeep(createLookaroundAssertion({negate: true}), parent));\n    } else if (participants.length > 1) {\n      // Multiplex for backrefs to duplicate capture names; try them in reverse order\n      const group = createGroup({\n        atomic: true,\n        body: participants.reverse().map(reffed => createAlternative({\n          body: [createBackreference(reffed.number)],\n        })),\n      });\n      replaceWith(setParentDeep(group, parent));\n    } else {\n      node.ref = participants[0].number;\n    }\n  },\n\n  CapturingGroup({node}, state) {\n    // Recalculate the number since the current value might be wrong due to subroutine expansion\n    node.number = ++state.numCapturesToLeft;\n    if (node.name) {\n      // Removing duplicate names here rather than in an earlier pass avoids extra complexity when\n      // handling subroutine expansion and backref multiplexing\n      if (state.groupsByName.get(node.name).get(node).hasDuplicateNameToRemove) {\n        delete node.name;\n      }\n    }\n  },\n\n  Regex: {\n    exit({node}, state) {\n      // HACK: Add unnamed captures to the end of the regex if needed to allow orphaned backrefs\n      // to be valid in JS with flag u/v. This is needed to support TextMate grammars, which\n      // replace numbered backrefs in their `end` pattern with values matched by captures in their\n      // `begin` pattern! See <github.com/microsoft/vscode-textmate/blob/7e0ea282f4f25fef12a6c84fa4fa7266f67b58dc/src/rule.ts#L661-L663>\n      // An `end` pattern, prior to this substitution, might have backrefs to a group that doesn't\n      // exist within `end`. This presents a dilemma since both Oniguruma and JS (with flag u/v)\n      // error for backrefs to undefined captures. So adding captures to the end is a solution that\n      // doesn't change what the regex matches, and lets invalid numbered backrefs through. Note:\n      // Orphan backrefs are only allowed if `allowOrphanBackrefs` is enabled\n      const numCapsNeeded = Math.max(state.highestOrphanBackref - state.numCapturesToLeft, 0);\n      for (let i = 0; i < numCapsNeeded; i++) {\n        const emptyCapture = createCapturingGroup();\n        node.body.at(-1).body.push(emptyCapture);\n      }\n    },\n  },\n\n  Subroutine({node}, state) {\n    if (!node.isRecursive || node.ref === 0) {\n      return;\n    }\n    // For the recursion's `ref`, use `number` rather than `name` because group names might have\n    // been removed if they're duplicates within their alternation path, or they might be removed\n    // later by the generator (depending on target) if they're duplicates within the overall\n    // pattern. Since recursion appears within the group it refs, the reffed node's `number` has\n    // already been recalculated\n    node.ref = state.reffedNodesByReferencer.get(node).number;\n  },\n};\n\n// ---------------\n// --- Helpers ---\n// ---------------\n\nfunction addParentProperties(root) {\n  traverse(root, {\n    '*'({node, parent}) {\n      node.parent = parent;\n    },\n  });\n}\n\nfunction areFlagsEqual(a, b) {\n  return a.dotAll === b.dotAll && a.ignoreCase === b.ignoreCase;\n}\n\nfunction canParticipateWithNode(capture, node) {\n  // Walks to the left (prev siblings), down (sibling descendants), up (parent), then back down\n  // (parent's prev sibling descendants) the tree in a loop\n  let rightmostPoint = node;\n  do {\n    if (rightmostPoint.type === 'Regex') {\n      // End of the line; capture is not in node's alternation path\n      return false;\n    }\n    if (rightmostPoint.type === 'Alternative') {\n      // Skip past alts to their parent because we don't want to look at the kids of preceding alts\n      continue;\n    }\n    if (rightmostPoint === capture) {\n      // Capture is ancestor of node\n      return false;\n    }\n    const kidsOfParent = getKids(rightmostPoint.parent);\n    for (const kid of kidsOfParent) {\n      if (kid === rightmostPoint) {\n        // Reached rightmost node in sibling list that we want to consider; break to parent loop\n        break;\n      }\n      if (kid === capture || isAncestorOf(kid, capture)) {\n        return true;\n      }\n    }\n  } while ((rightmostPoint = rightmostPoint.parent));\n  throw new Error('Unexpected path');\n}\n\n// Creates a deep copy of the provided node, with special handling:\n// - Make `parent` props point to their parent in the copy\n// - Update the provided `originMap` for each cloned capturing group (outer and nested)\nfunction cloneCapturingGroup(obj, originMap, up, up2) {\n  const store = Array.isArray(obj) ? [] : {};\n  for (const [key, value] of Object.entries(obj)) {\n    if (key === 'parent') {\n      // If the last cloned item was a container array (for holding kids), use the object above it\n      store.parent = Array.isArray(up) ? up2 : up;\n    } else if (value && typeof value === 'object') {\n      store[key] = cloneCapturingGroup(value, originMap, store, up);\n    } else {\n      if (key === 'type' && value === 'CapturingGroup') {\n        // Key is the copied node, value is the origin node\n        originMap.set(store, originMap.get(obj) ?? obj);\n      }\n      store[key] = value;\n    }\n  }\n  return store;\n}\n\nfunction createRecursion(ref) {\n  const node = createSubroutine(ref);\n  // In the future, the parser will set a `recursive` property on subroutines:\n  // <github.com/slevithan/oniguruma-parser/issues/3>. When that's available, this function won't\n  // be needed and the related logic in this transformer should change (simplify) to use it\n  node.isRecursive = true;\n  return node;\n}\n\nfunction getAllParents(node, filterFn) {\n  const results = [];\n  while ((node = node.parent)) {\n    if (!filterFn || filterFn(node)) {\n      results.push(node);\n    }\n  }\n  return results;\n}\n\n// See also `isValidJsGroupName`\nfunction getAndStoreJsGroupName(name, map) {\n  if (map.has(name)) {\n    return map.get(name);\n  }\n  // Onig group names can't start with `$`, but JS names can\n  const jsName = `$${map.size}_${name.replace(/^[^$_\\p{IDS}]|[^$\\u200C\\u200D\\p{IDC}]/ug, '_')}`;\n  map.set(name, jsName);\n  return jsName;\n}\n\nfunction getCombinedFlagModsFromFlagNodes(flagNodes) {\n  const flagProps = ['dotAll', 'ignoreCase'];\n  const combinedFlags = {enable: {}, disable: {}};\n  flagNodes.forEach(({flags}) => {\n    flagProps.forEach(prop => {\n      if (flags.enable?.[prop]) {\n        // Need to remove `disable` since disabled flags take precedence\n        delete combinedFlags.disable[prop];\n        combinedFlags.enable[prop] = true;\n      }\n      if (flags.disable?.[prop]) {\n        combinedFlags.disable[prop] = true;\n      }\n    });\n  });\n  if (!Object.keys(combinedFlags.enable).length) {\n    delete combinedFlags.enable;\n  }\n  if (!Object.keys(combinedFlags.disable).length) {\n    delete combinedFlags.disable;\n  }\n  if (combinedFlags.enable || combinedFlags.disable) {\n    return combinedFlags;\n  }\n  return null;\n}\n\nfunction getFlagModsFromFlags({dotAll, ignoreCase}) {\n  const mods = {};\n  if (dotAll || ignoreCase) {\n    mods.enable = {};\n    dotAll && (mods.enable.dotAll = true);\n    ignoreCase && (mods.enable.ignoreCase = true);\n  }\n  if (!dotAll || !ignoreCase) {\n    mods.disable = {};\n    !dotAll && (mods.disable.dotAll = true);\n    !ignoreCase && (mods.disable.ignoreCase = true);\n  }\n  return mods;\n}\n\nfunction getKids(node) {\n  if (!node) {\n    throw new Error('Node expected');\n  }\n  // NOTE: Not handling `CharacterClassRange`'s `min`/`max` and `Regex`'s `flags`, only because\n  // they haven't been needed by current callers\n  const {body} = node;\n  return Array.isArray(body) ? body : (body ? [body] : null);\n}\n\nfunction getLeadingG(els) {\n  const firstToConsider = els.find(el => (\n    el.kind === 'search_start' ||\n    isLoneGLookaround(el, {negate: false}) ||\n    !isAlwaysZeroLength(el)\n  ));\n  if (!firstToConsider) {\n    return null;\n  }\n  if (firstToConsider.kind === 'search_start') {\n    return firstToConsider;\n  }\n  if (firstToConsider.type === 'LookaroundAssertion') {\n    return firstToConsider.body[0].body[0];\n  }\n  if (firstToConsider.type === 'CapturingGroup' || firstToConsider.type === 'Group') {\n    const gNodesForGroup = [];\n    // Recursively find `\\G` nodes for all alternatives in the group\n    for (const alt of firstToConsider.body) {\n      const leadingG = getLeadingG(alt.body);\n      if (!leadingG) {\n        // Don't return `gNodesForGroup` collected so far since this alt didn't qualify\n        return null;\n      }\n      Array.isArray(leadingG) ?\n        gNodesForGroup.push(...leadingG) :\n        gNodesForGroup.push(leadingG);\n    }\n    return gNodesForGroup;\n  }\n  return null;\n}\n\nfunction isAncestorOf(node, descendant) {\n  const kids = getKids(node) ?? [];\n  for (const kid of kids) {\n    if (kid === descendant || isAncestorOf(kid, descendant)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n@param {Node} node\n@returns {boolean}\n*/\nfunction isAlwaysZeroLength({type}) {\n  return (\n    type === 'Assertion' ||\n    type === 'Directive' ||\n    type === 'LookaroundAssertion'\n  );\n}\n\n/**\n@param {Node} node\n@returns {boolean}\n*/\nfunction isAlwaysNonZeroLength(node) {\n  const types = [\n    'Character',\n    'CharacterClass',\n    'CharacterSet',\n  ];\n  return types.includes(node.type) || (\n    node.type === 'Quantifier' &&\n    node.min &&\n    types.includes(node.body.type)\n  );\n}\n\nfunction isLoneGLookaround(node, options) {\n  const opts = {\n    negate: null,\n    ...options,\n  };\n  return (\n    node.type === 'LookaroundAssertion' &&\n    (opts.negate === null || node.negate === opts.negate) &&\n    node.body.length === 1 &&\n    hasOnlyChild(node.body[0], {\n      type: 'Assertion',\n      kind: 'search_start',\n    })\n  );\n}\n\n// See also `getAndStoreJsGroupName`\nfunction isValidJsGroupName(name) {\n  // JS group names are more restrictive than Onig; see\n  // <developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#identifiers>\n  return /^[$_\\p{IDS}][$\\u200C\\u200D\\p{IDC}]*$/u.test(name);\n}\n\n// Returns a single node, either the given node or all nodes wrapped in a noncapturing group\nfunction parseFragment(pattern, options) {\n  const ast = parse(pattern, {\n    ...options,\n    // Providing a custom set of Unicode property names avoids converting some JS Unicode\n    // properties (ex: `\\p{Alpha}`) to Onig POSIX classes\n    unicodePropertyMap: JsUnicodePropertyMap,\n  });\n  const alts = ast.body;\n  if (alts.length > 1 || alts[0].body.length > 1) {\n    return createGroup({body: alts});\n  }\n  return alts[0].body[0];\n}\n\nfunction setNegate(node, negate) {\n  node.negate = negate;\n  return node;\n}\n\nfunction setParent(node, parent) {\n  node.parent = parent;\n  return node;\n}\n\nfunction setParentDeep(node, parent) {\n  addParentProperties(node);\n  node.parent = parent;\n  return node;\n}\n\nexport {\n  transform,\n};\n", "import {getOptions} from './options.js';\nimport {getIgnoreCaseMatchChars, UnicodePropertiesWithSpecificCase} from './unicode.js';\nimport {cp, envFlags, getNewCurrentFlags, getOrInsert, isMinTarget, r, throwIfNullish} from './utils.js';\nimport {createAlternative, createCharacter, createGroup} from 'oniguruma-parser/parser';\nimport {traverse} from 'oniguruma-parser/traverser';\n/**\n@import {ToRegExpOptions} from './index.js';\n@import {RegexPlusAst} from './transform.js';\n@import {AlternativeNode, AssertionNode, BackreferenceNode, CapturingGroupNode, CharacterClassNode, CharacterClassRangeNode, CharacterNode, CharacterSetNode, FlagsNode, GroupNode, LookaroundAssertionNode, Node, QuantifierNode, SubroutineNode} from 'oniguruma-parser/parser';\n@import {Visitor} from 'oniguruma-parser/traverser';\n*/\n\n/**\nGenerates a Regex+ compatible `pattern`, `flags`, and `options` from a Regex+ AST.\n@param {RegexPlusAst} ast\n@param {ToRegExpOptions} [options]\n@returns {{\n  pattern: string;\n  flags: string;\n  options: Object;\n  _captureTransfers: Map<number, Array<number>>;\n  _hiddenCaptures: Array<number>;\n}}\n*/\nfunction generate(ast, options) {\n  const opts = getOptions(options);\n  const minTargetEs2024 = isMinTarget(opts.target, 'ES2024');\n  const minTargetEs2025 = isMinTarget(opts.target, 'ES2025');\n  const recursionLimit = opts.rules.recursionLimit;\n  if (!Number.isInteger(recursionLimit) || recursionLimit < 2 || recursionLimit > 20) {\n    throw new Error('Invalid recursionLimit; use 2-20');\n  }\n\n  // If the output can't use flag groups, we need a pre-pass to check for the use of chars with\n  // case in case sensitive/insensitive states. This minimizes the need for case expansions (though\n  // expansions are lossless, even given Unicode case complexities) and allows supporting case\n  // insensitive backrefs in more cases\n  // TODO: Consider gathering this data in the transformer's final traversal to avoid work here\n  let hasCaseInsensitiveNode = null;\n  let hasCaseSensitiveNode = null;\n  if (!minTargetEs2025) {\n    const iStack = [ast.flags.ignoreCase];\n    traverse(ast, FlagModifierVisitor, {\n      getCurrentModI: () => iStack.at(-1),\n      popModI() {iStack.pop()},\n      pushModI(isIOn) {iStack.push(isIOn)},\n      setHasCasedChar() {\n        if (iStack.at(-1)) {\n          hasCaseInsensitiveNode = true;\n        } else {\n          hasCaseSensitiveNode = true;\n        }\n      },\n    });\n  }\n\n  const appliedGlobalFlags = {\n    dotAll: ast.flags.dotAll,\n    // - Turn global flag i on if a case insensitive node was used and no case sensitive nodes were\n    //   used (to avoid unnecessary node expansion).\n    // - Turn global flag i off if a case sensitive node was used (since case sensitivity can't be\n    //   forced without the use of ES2025 flag groups)\n    ignoreCase: !!((ast.flags.ignoreCase || hasCaseInsensitiveNode) && !hasCaseSensitiveNode),\n  };\n  let /** @type {Node} */ lastNode = ast;\n  const state = {\n    accuracy: opts.accuracy,\n    appliedGlobalFlags,\n    captureMap: new Map(),\n    currentFlags: {\n      dotAll: ast.flags.dotAll,\n      ignoreCase: ast.flags.ignoreCase,\n    },\n    inCharClass: false,\n    lastNode,\n    originMap: ast._originMap,\n    recursionLimit,\n    useAppliedIgnoreCase: !!(!minTargetEs2025 && hasCaseInsensitiveNode && hasCaseSensitiveNode),\n    useFlagMods: minTargetEs2025,\n    useFlagV: minTargetEs2024,\n    verbose: opts.verbose,\n  };\n  function gen(/** @type {Node} */ node) {\n    state.lastNode = lastNode;\n    lastNode = node; // For the next iteration\n    const fn = throwIfNullish(generator[node.type], `Unexpected node type \"${node.type}\"`);\n    return fn(node, state, gen);\n  }\n\n  const result = {\n    pattern: ast.body.map(gen).join('|'),\n    // Could reset `lastNode` at this point via `lastNode = ast`, but it isn't needed by flags\n    flags: gen(ast.flags),\n    options: {...ast.options},\n  };\n  if (!minTargetEs2024) {\n    // Switch from flag v to u; Regex+ implicitly chooses by default\n    delete result.options.force.v;\n    result.options.disable.v = true;\n    result.options.unicodeSetsPlugin = null;\n  }\n  result._captureTransfers = new Map();\n  result._hiddenCaptures = [];\n  state.captureMap.forEach((value, key) => {\n    if (value.hidden) {\n      result._hiddenCaptures.push(key);\n    }\n    if (value.transferTo) {\n      getOrInsert(result._captureTransfers, value.transferTo, []).push(key);\n    }\n  });\n\n  return result;\n}\n\nconst /** @type {Visitor} */ FlagModifierVisitor = {\n  '*': {\n    enter({node}, state) {\n      if (isAnyGroup(node)) {\n        const currentModI = state.getCurrentModI();\n        state.pushModI(\n          node.flags ?\n            getNewCurrentFlags({ignoreCase: currentModI}, node.flags).ignoreCase :\n            currentModI\n        );\n      }\n    },\n    exit({node}, state) {\n      if (isAnyGroup(node)) {\n        state.popModI();\n      }\n    },\n  },\n  Backreference(_, state) {\n    // Can't know for sure, so assume the backref will include chars with case (best that could be\n    // done is not calling `setHasCasedChar` if the reffed group doesn't contain a char with case\n    // or most kinds of char sets)\n    state.setHasCasedChar();\n  },\n  Character({node}, state) {\n    if (charHasCase(cp(node.value))) {\n      state.setHasCasedChar();\n    }\n  },\n  CharacterClassRange({node, skip}, state) {\n    skip();\n    if (getCasesOutsideCharClassRange(node, {firstOnly: true}).length) {\n      state.setHasCasedChar();\n    }\n  },\n  CharacterSet({node}, state) {\n    if (\n      node.kind === 'property' &&\n      UnicodePropertiesWithSpecificCase.has(node.value)\n    ) {\n      state.setHasCasedChar();\n    }\n  },\n};\n\n// `AbsenceFunction`, `Directive`, and `NamedCallout` nodes aren't included in transformer output\nconst generator = {\n  /**\n  @param {AlternativeNode} node\n  */\n  Alternative({body}, _, gen) {\n    return body.map(gen).join('');\n  },\n\n  /**\n  @param {AssertionNode} node\n  */\n  Assertion({kind, negate}) {\n    // Can always use `^` and `$` for string boundaries since JS flag m is never used (Onig uses\n    // different line break chars)\n    if (kind === 'string_end') {\n      return '$';\n    }\n    if (kind === 'string_start') {\n      return '^';\n    }\n    // If a word boundary came through the transformer unaltered, that means `wordIsAscii` or\n    // `asciiWordBoundaries` is enabled\n    if (kind === 'word_boundary') {\n      return negate ? r`\\B` : r`\\b`;\n    }\n    // Kinds `line_end`, `line_start`, `search_start`, `string_end_newline`, and\n    // `text_segment_boundary` are never included in transformer output\n    throw new Error(`Unexpected assertion kind \"${kind}\"`);\n  },\n\n  /**\n  @param {BackreferenceNode} node\n  */\n  Backreference({ref}, state) {\n    if (typeof ref !== 'number') {\n      throw new Error('Unexpected named backref in transformed AST');\n    }\n    if (\n      !state.useFlagMods &&\n      state.accuracy === 'strict' &&\n      state.currentFlags.ignoreCase &&\n      !state.captureMap.get(ref).ignoreCase\n    ) {\n      throw new Error('Use of case-insensitive backref to case-sensitive group requires target ES2025 or non-strict accuracy');\n    }\n    return '\\\\' + ref;\n  },\n\n  /**\n  @param {CapturingGroupNode} node\n  */\n  CapturingGroup(node, state, gen) {\n    const {body, name, number} = node;\n    const data = {ignoreCase: state.currentFlags.ignoreCase};\n    // Has origin if the capture is from an expanded subroutine\n    const origin = state.originMap.get(node);\n    if (origin) {\n      // All captures from/within expanded subroutines are marked as hidden\n      data.hidden = true;\n      // If a subroutine (or descendant capture) occurs after its origin group, it's marked to have\n      // its captured value transferred to the origin's capture slot. `number` and `origin.number`\n      // are the capture numbers *after* subroutine expansion\n      if (number > origin.number) {\n        data.transferTo = origin.number;\n      }\n    }\n    state.captureMap.set(number, data);\n    return `(${name ? `?<${name}>` : ''}${body.map(gen).join('|')})`;\n  },\n\n  /**\n  @param {CharacterNode} node\n  */\n  Character({value}, state) {\n    const char = cp(value);\n    const escaped = getCharEscape(value, {\n      escDigit: state.lastNode.type === 'Backreference',\n      inCharClass: state.inCharClass,\n      useFlagV: state.useFlagV,\n    });\n    if (escaped !== char) {\n      return escaped;\n    }\n    if (state.useAppliedIgnoreCase && state.currentFlags.ignoreCase && charHasCase(char)) {\n      const cases = getIgnoreCaseMatchChars(char);\n      return state.inCharClass ?\n        cases.join('') :\n        (cases.length > 1 ? `[${cases.join('')}]` : cases[0]);\n    }\n    return char;\n  },\n\n  /**\n  @param {CharacterClassNode} node\n  */\n  CharacterClass(node, state, gen) {\n    const {kind, negate, parent} = node;\n    let {body} = node;\n    if (kind === 'intersection' && !state.useFlagV) {\n      throw new Error('Use of class intersection requires min target ES2024');\n    }\n    // Work around a WebKit parser bug by moving literal hyphens to the beginning of the class; see\n    // <github.com/slevithan/oniguruma-to-es/issues/30>\n    if (envFlags.bugFlagVLiteralHyphenIsRange && state.useFlagV && body.some(isLiteralHyphen)) {\n      body = [createCharacter(45), ...body.filter(kid => !isLiteralHyphen(kid))];\n    }\n    const genClass = () => `[${negate ? '^' : ''}${\n      body.map(gen).join(kind === 'intersection' ? '&&' : '')\n    }]`;\n    if (!state.inCharClass) {\n      // HACK: Transform the AST to support top-level-nested, negated classes in non-negated\n      // classes (ex: `[\u2026[^\u2026]]`) with pre-ES2024 `target`, via `(?:[\u2026]|[^\u2026])` or `(?:[^\u2026])`,\n      // possibly with multiple alts that contain negated classes. Would be better to do this in\n      // the transformer, but it doesn't have true `target` since that's supposed to be a concern\n      // of the generator\n      if (\n        // Already established `kind !== 'intersection'` if `!state.useFlagV`; don't check again\n        (!state.useFlagV || envFlags.bugNestedClassIgnoresNegation) &&\n        !negate\n      ) {\n        const negatedChildClasses = body.filter(\n          kid => kid.type === 'CharacterClass' && kid.kind === 'union' && kid.negate\n        );\n        if (negatedChildClasses.length) {\n          const group = createGroup();\n          const groupFirstAlt = group.body[0];\n          group.parent = parent;\n          groupFirstAlt.parent = group;\n          body = body.filter(kid => !negatedChildClasses.includes(kid));\n          node.body = body;\n          if (body.length) {\n            node.parent = groupFirstAlt;\n            groupFirstAlt.body.push(node);\n          } else {\n            // Remove the group's only alt thus far, but since the class's `body` is empty, that\n            // implies there's at least one negated class we removed from it, so we'll add at least\n            // one alt back to the group, next\n            group.body.pop();\n          }\n          negatedChildClasses.forEach(cc => {\n            const newAlt = createAlternative({body: [cc]});\n            cc.parent = newAlt;\n            newAlt.parent = group;\n            group.body.push(newAlt);\n          });\n          return gen(group);\n        }\n      }\n      // For the outermost char class, set state\n      state.inCharClass = true;\n      const result = genClass();\n      state.inCharClass = false;\n      return result;\n    }\n    // No first element for implicit class in empty intersection like `[&&]`\n    const firstEl = body[0];\n    if (\n      // Already established that the parent is a char class via `inCharClass`; don't check again\n      kind === 'union' &&\n      !negate &&\n      firstEl &&\n      (\n        ( // Allows many nested classes to work with `target` ES2018 which doesn't support nesting\n          (!state.useFlagV || !state.verbose) &&\n          parent.kind === 'union' &&\n          !(envFlags.bugFlagVLiteralHyphenIsRange && state.useFlagV)\n        ) ||\n        ( !state.verbose &&\n          parent.kind === 'intersection' &&\n          // JS doesn't allow intersection with union or ranges\n          body.length === 1 &&\n          firstEl.type !== 'CharacterClassRange'\n        )\n      )\n    ) {\n      // Remove unnecessary nesting; unwrap kids into the parent char class\n      return body.map(gen).join('');\n    }\n    if (!state.useFlagV && parent.type === 'CharacterClass') {\n      throw new Error('Use of nested character class requires min target ES2024');\n    }\n    return genClass();\n  },\n\n  /**\n  @param {CharacterClassRangeNode} node\n  */\n  CharacterClassRange(node, state) {\n    const min = node.min.value;\n    const max = node.max.value;\n    const escOpts = {\n      escDigit: false,\n      inCharClass: true,\n      useFlagV: state.useFlagV,\n    };\n    const minStr = getCharEscape(min, escOpts);\n    const maxStr = getCharEscape(max, escOpts);\n    const extraChars = new Set();\n    if (state.useAppliedIgnoreCase && state.currentFlags.ignoreCase) {\n      // TODO: Avoid duplication by considering other chars in the parent char class when expanding\n      const charsOutsideRange = getCasesOutsideCharClassRange(node);\n      const ranges = getCodePointRangesFromChars(charsOutsideRange);\n      ranges.forEach(value => {\n        extraChars.add(\n          Array.isArray(value) ?\n            `${getCharEscape(value[0], escOpts)}-${getCharEscape(value[1], escOpts)}` :\n            getCharEscape(value, escOpts)\n        );\n      });\n    }\n    // Create the range without calling `gen` on the `min`/`max` kids\n    return `${minStr}-${maxStr}${[...extraChars].join('')}`;\n  },\n\n  /**\n  @param {CharacterSetNode} node\n  */\n  CharacterSet({kind, negate, value, key}, state) {\n    if (kind === 'dot') {\n      return state.currentFlags.dotAll ?\n        ((state.appliedGlobalFlags.dotAll || state.useFlagMods) ? '.' : '[^]') :\n        // Onig's only line break char is line feed, unlike JS\n        r`[^\\n]`;\n    }\n    if (kind === 'digit') {\n      return negate ? r`\\D` : r`\\d`;\n    }\n    if (kind === 'property') {\n      if (\n        state.useAppliedIgnoreCase &&\n        state.currentFlags.ignoreCase &&\n        UnicodePropertiesWithSpecificCase.has(value)\n      ) {\n        // Support for this would require heavy Unicode data. Could change e.g. `\\p{Lu}` to\n        // `\\p{LC}` if not using strict `accuracy` (since it's close but not 100%), but this\n        // wouldn't work for e.g. `\\p{Lt}`, and in any case, it's probably user error if using\n        // these case-specific props case-insensitively\n        throw new Error(`Unicode property \"${value}\" can't be case-insensitive when other chars have specific case`);\n      }\n      return `${negate ? r`\\P` : r`\\p`}{${key ? `${key}=` : ''}${value}}`;\n    }\n    if (kind === 'word') {\n      return negate ? r`\\W` : r`\\w`;\n    }\n    // Kinds `any`, `hex`, `newline`, `posix`, `space`, and `text_segment` are never included in\n    // transformer output\n    throw new Error(`Unexpected character set kind \"${kind}\"`);\n  },\n\n  /**\n  @param {FlagsNode} node\n  */\n  Flags(node, state) {\n    return (\n      // The transformer should never turn on the properties for flags d, g, m since Onig doesn't\n      // have equivs. Flag m is never used since Onig uses different line break chars than JS\n      // (node.hasIndices ? 'd' : '') +\n      // (node.global ? 'g' : '') +\n      // (node.multiline ? 'm' : '') +\n      (state.appliedGlobalFlags.ignoreCase ? 'i' : '') +\n      (node.dotAll ? 's' : '') +\n      (node.sticky ? 'y' : '')\n      // Regex+ doesn't allow explicitly adding flags it handles implicitly, so there are no\n      // `unicode` (flag u) or `unicodeSets` (flag v) props; those flags are added separately\n    );\n  },\n\n  /**\n  @param {GroupNode} node\n  */\n  Group({atomic, body, flags, parent}, state, gen) {\n    const currentFlags = state.currentFlags;\n    if (flags) {\n      state.currentFlags = getNewCurrentFlags(currentFlags, flags);\n    }\n    const contents = body.map(gen).join('|');\n    const result = (\n      !state.verbose &&\n      body.length === 1 && // Single alt\n      parent.type !== 'Quantifier' &&\n      !atomic &&\n      (!state.useFlagMods || !flags)\n     ) ? contents : `(?${getGroupPrefix(atomic, flags, state.useFlagMods)}${contents})`;\n    state.currentFlags = currentFlags;\n    return result;\n  },\n\n  /**\n  @param {LookaroundAssertionNode} node\n  */\n  LookaroundAssertion({body, kind, negate}, _, gen) {\n    const prefix = `${kind === 'lookahead' ? '' : '<'}${negate ? '!' : '='}`;\n    return `(?${prefix}${body.map(gen).join('|')})`;\n  },\n\n  /**\n  @param {QuantifierNode} node\n  */\n  Quantifier(node, _, gen) {\n    return gen(node.body) + getQuantifierStr(node);\n  },\n\n  /**\n  @param {SubroutineNode & {isRecursive: true}} node\n  */\n  Subroutine({isRecursive, ref}, state) {\n    if (!isRecursive) {\n      throw new Error('Unexpected non-recursive subroutine in transformed AST');\n    }\n    const limit = state.recursionLimit;\n    // Using the syntax supported by `regex-recursion`\n    return ref === 0 ? `(?R=${limit})` : r`\\g<${ref}&R=${limit}>`;\n  },\n};\n\n// ---------------\n// --- Helpers ---\n// ---------------\n\nconst BaseEscapeChars = new Set([\n  '$', '(', ')', '*', '+', '.', '?', '[', '\\\\', ']', '^', '{', '|', '}',\n]);\n\nconst CharClassEscapeChars = new Set([\n  '-', '\\\\', ']', '^',\n  // Literal `[` doesn't require escaping with flag u, but this can help work around regex source\n  // linters and regex syntax processors that expect unescaped `[` to create a nested class\n  '[',\n]);\n\nconst CharClassEscapeCharsFlagV = new Set([\n  '(', ')', '-', '/', '[', '\\\\', ']', '^', '{', '|', '}',\n  // Double punctuators; also includes already-listed `-` and `^`\n  '!', '#', '$', '%', '&', '*', '+', ',', '.', ':', ';', '<', '=', '>', '?', '@', '`', '~',\n]);\n\nconst CharCodeEscapeMap = new Map([\n  [ 9, r`\\t`], // horizontal tab\n  [10, r`\\n`], // line feed\n  [11, r`\\v`], // vertical tab\n  [12, r`\\f`], // form feed\n  [13, r`\\r`], // carriage return\n  [0x2028, r`\\u2028`], // line separator\n  [0x2029, r`\\u2029`], // paragraph separator\n  [0xFEFF, r`\\uFEFF`], // ZWNBSP/BOM\n]);\n\nconst casedRe = /^\\p{Cased}$/u;\nfunction charHasCase(char) {\n  return casedRe.test(char);\n}\n\n/**\nGiven a `CharacterClassRange` node, returns an array of chars that are a case variant of a char in\nthe range, and aren't already in the range.\n*/\nfunction getCasesOutsideCharClassRange(node, options) {\n  const firstOnly = !!options?.firstOnly;\n  const min = node.min.value;\n  const max = node.max.value;\n  const found = [];\n  // Avoid unneeded work. Assumptions (per Unicode 16):\n  // - No case variants cross the Basic Multilingual Plane boundary\n  // - No cased chars appear beyond the Supplementary Multilingual Plane\n  if ((min < 65 && (max === 0xFFFF || max >= 0x1FFFF)) || (min === 0x10000 && max >= 0x1FFFF)) {\n    return found;\n  }\n  for (let i = min; i <= max; i++) {\n    const char = cp(i);\n    if (!charHasCase(char)) {\n      continue;\n    }\n    const charsOutsideRange = getIgnoreCaseMatchChars(char).filter(caseOfChar => {\n      const num = caseOfChar.codePointAt(0);\n      return num < min || num > max;\n    });\n    if (charsOutsideRange.length) {\n      found.push(...charsOutsideRange);\n      if (firstOnly) {\n        break;\n      }\n    }\n  }\n  return found;\n}\n\n// This shouldn't modifiy any char that has case\nfunction getCharEscape(codePoint, {escDigit, inCharClass, useFlagV}) {\n  if (CharCodeEscapeMap.has(codePoint)) {\n    return CharCodeEscapeMap.get(codePoint);\n  }\n  if (\n    // Control chars, etc.; condition modeled on the Chrome developer console's display for strings\n    codePoint < 32 || (codePoint > 126 && codePoint < 160) ||\n    // Unicode planes 4-16; unassigned, special purpose, and private use area\n    codePoint > 0x3FFFF ||\n    // Avoid corrupting a preceding backref by immediately following it with a literal digit\n    (escDigit && isDigitCharCode(codePoint))\n  ) {\n    // Don't convert codePoint `0` to `\\0` since that's corruptible by following literal digits\n    // Note: Not using raw strings to work around Bun \u2264 1.1.34 issue <github.com/oven-sh/bun/issues/7540>\n    return codePoint > 0xFF ?\n      `\\\\u{${codePoint.toString(16).toUpperCase()}}` :\n      `\\\\x${codePoint.toString(16).toUpperCase().padStart(2, '0')}`;\n  }\n  const escapeChars = inCharClass ?\n    (useFlagV ? CharClassEscapeCharsFlagV : CharClassEscapeChars) :\n    BaseEscapeChars;\n  const char = cp(codePoint);\n  return (escapeChars.has(char) ? '\\\\' : '') + char;\n}\n\nfunction getCodePointRangesFromChars(chars) {\n  const codePoints = chars.map(char => char.codePointAt(0)).sort((a, b) => a - b);\n  const values = [];\n  let start = null;\n  for (let i = 0; i < codePoints.length; i++) {\n    if (codePoints[i + 1] === codePoints[i] + 1) {\n      start ??= codePoints[i];\n    } else if (start === null) {\n      values.push(codePoints[i]);\n    } else {\n      values.push([start, codePoints[i]]);\n      start = null;\n    }\n  }\n  return values;\n}\n\nfunction getGroupPrefix(atomic, flagMods, useFlagMods) {\n  if (atomic) {\n    return '>';\n  }\n  let mods = '';\n  if (flagMods && useFlagMods) {\n    const {enable, disable} = flagMods;\n    mods =\n      (enable?.ignoreCase ? 'i' : '') +\n      (enable?.dotAll ? 's' : '') +\n      (disable ? '-' : '') +\n      (disable?.ignoreCase ? 'i' : '') +\n      (disable?.dotAll ? 's' : '');\n  }\n  return `${mods}:`;\n}\n\n/**\n@param {QuantifierNode} node\n@returns {string}\n*/\nfunction getQuantifierStr({kind, max, min}) {\n  let base;\n  if (!min && max === 1) {\n    base = '?';\n  } else if (!min && max === Infinity) {\n    base = '*';\n  } else if (min === 1 && max === Infinity) {\n    base = '+';\n  } else if (min === max) {\n    base = `{${min}}`;\n  } else {\n    base = `{${min},${max === Infinity ? '' : max}}`;\n  }\n  return base + {\n    greedy: '',\n    lazy: '?',\n    possessive: '+',\n  }[kind];\n}\n\n/**\n@param {Node} node\n@returns {boolean}\n*/\nfunction isAnyGroup({type}) {\n  return type === 'CapturingGroup' ||\n    type === 'Group' ||\n    type === 'LookaroundAssertion';\n}\n\nfunction isDigitCharCode(value) {\n  return value > 47 && value < 58;\n}\n\n/**\n@param {Node} node\n@returns {boolean}\n*/\nfunction isLiteralHyphen({type, value}) {\n  return type === 'Character' && value === 45;\n}\n\nexport {\n  generate,\n};\n", "import {getOrInsert} from './utils.js';\n\n/**\n@typedef {{\n  hiddenCaptures?: Array<number>;\n  lazyCompile?: boolean;\n  strategy?: string | null;\n  transfers?: Array<[number, Array<number>]>;\n}} EmulatedRegExpOptions\n*/\n\n/**\nWorks the same as JavaScript's native `RegExp` constructor in all contexts, but can be given\nresults from `toRegExpDetails` to produce the same result as `toRegExp`.\n*/\nclass EmulatedRegExp extends RegExp {\n  /**\n  @type {Map<number, {\n    hidden?: true;\n    transferTo?: number;\n  }>}\n  */\n  #captureMap = new Map();\n\n  /**\n  @type {RegExp | EmulatedRegExp | null}\n  */\n  #compiled = null;\n\n  /**\n  @type {string}\n  */\n  #pattern;\n\n  /**\n  @type {Map<number, string>?}\n  */\n  #nameMap = null;\n\n  /**\n  @type {string?}\n  */\n  #strategy = null;\n\n  /**\n  Can be used to serialize the instance.\n  @type {EmulatedRegExpOptions}\n  */\n  rawOptions = {};\n\n  // Override the getter with one that works with lazy-compiled regexes\n  get source() {\n    return this.#pattern || '(?:)';\n  }\n\n  /**\n  @overload\n  @param {string} pattern\n  @param {string} [flags]\n  @param {EmulatedRegExpOptions} [options]\n  */\n  /**\n  @overload\n  @param {EmulatedRegExp} pattern\n  @param {string} [flags]\n  */\n  constructor(pattern, flags, options) {\n    const lazyCompile = !!options?.lazyCompile;\n    if (pattern instanceof RegExp) {\n      // Argument `options` isn't provided when regexes are copied, including as part of the\n      // internal handling of string methods `matchAll` and `split`\n      if (options) {\n        throw new Error('Cannot provide options when copying a regexp');\n      }\n      const re = pattern; // Alias for readability\n      super(re, flags);\n      this.#pattern = re.source;\n      if (re instanceof EmulatedRegExp) {\n        this.#captureMap = re.#captureMap;\n        this.#nameMap = re.#nameMap;\n        this.#strategy = re.#strategy;\n        this.rawOptions = re.rawOptions;\n      }\n    } else {\n      const opts = {\n        hiddenCaptures: [],\n        strategy: null,\n        transfers: [],\n        ...options,\n      };\n      super(lazyCompile ? '' : pattern, flags);\n      this.#pattern = pattern;\n      this.#captureMap = createCaptureMap(opts.hiddenCaptures, opts.transfers);\n      this.#strategy = opts.strategy;\n      // Don't add default values from `opts` since this gets serialized\n      this.rawOptions = options ?? {};\n    }\n    if (!lazyCompile) {\n      this.#compiled = this;\n    }\n  }\n\n  /**\n  Called internally by all String/RegExp methods that use regexes.\n  @override\n  @param {string} str\n  @returns {RegExpExecArray?}\n  */\n  exec(str) {\n    // Lazy compilation\n    if (!this.#compiled) {\n      const {lazyCompile, ...rest} = this.rawOptions;\n      this.#compiled = new EmulatedRegExp(this.#pattern, this.flags, rest);\n    }\n\n    const useLastIndex = this.global || this.sticky;\n    const pos = this.lastIndex;\n\n    if (this.#strategy === 'clip_search' && useLastIndex && pos) {\n      // Reset since this tests on a sliced string that we want to match at the start of\n      this.lastIndex = 0;\n      // Slicing the string can lead to mismatches when three edge cases are stacked on each other:\n      // 1. An uncommon use of `\\G` that relies on `clip_search`, combined with...\n      // 2. Lookbehind that searches behind the search start (not match start) position...\n      // 3. During a search when the regex's `lastIndex` isn't `0`.\n      // The `clip_search` strategy is therefore only allowed when lookbehind isn't present, if\n      // using strict `accuracy`\n      const match = this.#execCore(str.slice(pos));\n      if (match) {\n        adjustMatchDetailsForOffset(match, pos, str, this.hasIndices);\n        this.lastIndex += pos;\n      }\n      return match;\n    }\n\n    return this.#execCore(str);\n  }\n\n  /**\n  Adds support for hidden and transfer captures.\n  @param {string} str\n  @returns\n  */\n  #execCore(str) {\n    // Support lazy compilation\n    this.#compiled.lastIndex = this.lastIndex;\n    const match = super.exec.call(this.#compiled, str);\n    this.lastIndex = this.#compiled.lastIndex;\n\n    if (!match || !this.#captureMap.size) {\n      return match;\n    }\n\n    const matchCopy = [...match];\n    // Empty all but the first value of the array while preserving its other properties\n    match.length = 1;\n    let indicesCopy;\n    if (this.hasIndices) {\n      indicesCopy = [...match.indices];\n      match.indices.length = 1;\n    }\n    const mappedNums = [0];\n    for (let i = 1; i < matchCopy.length; i++) {\n      const {hidden, transferTo} = this.#captureMap.get(i) ?? {};\n      if (hidden) {\n        mappedNums.push(null);\n      } else {\n        mappedNums.push(match.length);\n        match.push(matchCopy[i]);\n        if (this.hasIndices) {\n          match.indices.push(indicesCopy[i]);\n        }\n      }\n\n      // Only transfer if the capture participated in the match\n      if (transferTo && matchCopy[i] !== undefined) {\n        const to = mappedNums[transferTo];\n        if (!to) {\n          throw new Error(`Invalid capture transfer to \"${to}\"`);\n        }\n        match[to] = matchCopy[i];\n        if (this.hasIndices) {\n          match.indices[to] = indicesCopy[i];\n        }\n        if (match.groups) {\n          if (!this.#nameMap) {\n            // Generate and cache the first time it's needed\n            this.#nameMap = createNameMap(this.source);\n          }\n          const name = this.#nameMap.get(transferTo);\n          if (name) {\n            match.groups[name] = matchCopy[i];\n            if (this.hasIndices) {\n              match.indices.groups[name] = indicesCopy[i];\n            }\n          }\n        }\n      }\n    }\n\n    return match;\n  }\n}\n\nfunction adjustMatchDetailsForOffset(match, offset, input, hasIndices) {\n  match.index += offset;\n  match.input = input;\n  if (hasIndices) {\n    const indices = match.indices;\n    for (let i = 0; i < indices.length; i++) {\n      const arr = indices[i];\n      if (arr) {\n        // Replace the array rather than updating values since the keys of `match.indices` and\n        // `match.indices.groups` share their value arrays by reference. Need to be precise in case\n        // they were previously altered separately\n        indices[i] = [arr[0] + offset, arr[1] + offset];\n      }\n    }\n    const groupIndices = indices.groups;\n    if (groupIndices) {\n      Object.keys(groupIndices).forEach(key => {\n        const arr = groupIndices[key];\n        if (arr) {\n          groupIndices[key] = [arr[0] + offset, arr[1] + offset];\n        }\n      });\n    }\n  }\n}\n\n/**\nBuild the capturing group map, with hidden/transfer groups marked to indicate their submatches\nshould get special handling in match results.\n@param {Array<number>} hiddenCaptures\n@param {Array<[number, Array<number>]>} transfers\n@returns {Map<number, {\n  hidden?: true;\n  transferTo?: number;\n}>}\n*/\nfunction createCaptureMap(hiddenCaptures, transfers) {\n  const captureMap = new Map();\n  for (const num of hiddenCaptures) {\n    captureMap.set(num, {\n      hidden: true,\n    });\n  }\n  for (const [to, from] of transfers) {\n    for (const num of from) {\n      getOrInsert(captureMap, num, {}).transferTo = to;\n    }\n  }\n  return captureMap;\n}\n\n/**\n@param {string} pattern\n@returns {Map<number, string>}\n*/\nfunction createNameMap(pattern) {\n  const re = /(?<capture>\\((?:\\?<(?![=!])(?<name>[^>]+)>|(?!\\?)))|\\\\?./gsu;\n  const map = new Map();\n  let numCharClassesOpen = 0;\n  let numCaptures = 0;\n  let match;\n  while ((match = re.exec(pattern))) {\n    const {0: m, groups: {capture, name}} = match;\n    // Relies on no unescaped literal `[` in char classes (valid in JS if not using flag v), but\n    // this library's generator never produces unescaped literal `[` even with `target` ES2018 (see\n    // `CharClassEscapeChars`)\n    if (m === '[') {\n      numCharClassesOpen++;\n    } else if (!numCharClassesOpen) {\n      if (capture) {\n        numCaptures++;\n        if (name) {\n          map.set(numCaptures, name);\n        }\n      }\n    } else if (m === ']') {\n      numCharClassesOpen--;\n    }\n  }\n  return map;\n}\n\nexport {\n  EmulatedRegExp,\n};\n", "import {transform} from './transform.js';\nimport {generate} from './generate.js';\nimport {Accuracy, getOptions, Target} from './options.js';\nimport {EmulatedRegExp} from './subclass.js';\nimport {JsUnicodePropertyMap} from './unicode.js';\nimport {parse} from 'oniguruma-parser/parser';\nimport {atomic, possessive} from 'regex/internals';\nimport {recursion} from 'regex-recursion';\n/**\n@import {EmulatedRegExpOptions} from './subclass.js';\n*/\n\n// The validation and transformation for Oniguruma's unique syntax and behavior differences\n// compared to native JS RegExp is layered into all steps of the compilation process:\n// 1. Parser: Uses `oniguruma-parser` to build an Oniguruma AST, which accounts for many\n//    differences between Oniguruma and JS.\n// 2. Transformer: Converts the Oniguruma AST to a Regex+ AST that preserves all Oniguruma\n//    behavior. This is true even in cases of non-native-JS features that are supported by both\n//    Regex+ and Oniguruma but with subtly different behavior in each (subroutines, flag x).\n// 3. Generator: Converts the Regex+ AST to a Regex+ pattern, flags, and options.\n// 4. Postprocessing: Regex+ internals and plugins are used to transpile several remaining features\n//    (atomic groups, possessive quantifiers, recursion). Regex+ uses a strict superset of JS\n//    RegExp syntax, so using it allows this library to benefit from not reinventing the wheel for\n//    complex features that Regex+ already knows how to transpile to JS.\n\n/**\n@typedef {{\n  accuracy?: keyof Accuracy;\n  avoidSubclass?: boolean;\n  flags?: string;\n  global?: boolean;\n  hasIndices?: boolean;\n  lazyCompileLength?: number;\n  rules?: {\n    allowOrphanBackrefs?: boolean;\n    asciiWordBoundaries?: boolean;\n    captureGroup?: boolean;\n    recursionLimit?: number;\n    singleline?: boolean;\n  };\n  target?: keyof Target;\n  verbose?: boolean;\n}} ToRegExpOptions\n*/\n\n/**\nAccepts an Oniguruma pattern and returns an equivalent JavaScript `RegExp`.\n@param {string} pattern Oniguruma regex pattern.\n@param {ToRegExpOptions} [options]\n@returns {RegExp | EmulatedRegExp}\n*/\nfunction toRegExp(pattern, options) {\n  const d = toRegExpDetails(pattern, options);\n  if (d.options) {\n    return new EmulatedRegExp(d.pattern, d.flags, d.options);\n  }\n  return new RegExp(d.pattern, d.flags);\n}\n\n/**\nAccepts an Oniguruma pattern and returns the details for an equivalent JavaScript `RegExp`.\n@param {string} pattern Oniguruma regex pattern.\n@param {ToRegExpOptions} [options]\n@returns {{\n  pattern: string;\n  flags: string;\n  options?: EmulatedRegExpOptions;\n}}\n*/\nfunction toRegExpDetails(pattern, options) {\n  const opts = getOptions(options);\n  const onigurumaAst = parse(pattern, {\n    flags: opts.flags,\n    normalizeUnknownPropertyNames: true,\n    rules: {\n      captureGroup: opts.rules.captureGroup,\n      singleline: opts.rules.singleline,\n    },\n    skipBackrefValidation: opts.rules.allowOrphanBackrefs,\n    unicodePropertyMap: JsUnicodePropertyMap,\n  });\n  const regexPlusAst = transform(onigurumaAst, {\n    accuracy: opts.accuracy,\n    asciiWordBoundaries: opts.rules.asciiWordBoundaries,\n    avoidSubclass: opts.avoidSubclass,\n    bestEffortTarget: opts.target,\n  });\n  const generated = generate(regexPlusAst, opts);\n  const recursionResult = recursion(generated.pattern, {\n    captureTransfers: generated._captureTransfers,\n    hiddenCaptures: generated._hiddenCaptures,\n    mode: 'external',\n  });\n  const possessiveResult = possessive(recursionResult.pattern);\n  const atomicResult = atomic(possessiveResult.pattern, {\n    captureTransfers: recursionResult.captureTransfers,\n    hiddenCaptures: recursionResult.hiddenCaptures,\n  });\n  const details = {\n    pattern: atomicResult.pattern,\n    flags: `${opts.hasIndices ? 'd' : ''}${opts.global ? 'g' : ''}${generated.flags}${generated.options.disable.v ? 'u' : 'v'}`,\n  };\n  if (opts.avoidSubclass) {\n    if (opts.lazyCompileLength !== Infinity) {\n      throw new Error('Lazy compilation requires subclass');\n    }\n  } else {\n    // Sort isn't required; only for readability when serialized\n    const hiddenCaptures = atomicResult.hiddenCaptures.sort((a, b) => a - b);\n    // Change the map to the `EmulatedRegExp` format, serializable as JSON\n    const transfers = Array.from(atomicResult.captureTransfers);\n    const strategy = regexPlusAst._strategy;\n    const lazyCompile = details.pattern.length >= opts.lazyCompileLength;\n    if (hiddenCaptures.length || transfers.length || strategy || lazyCompile) {\n      details.options = {\n        ...(hiddenCaptures.length && {hiddenCaptures}),\n        ...(transfers.length && {transfers}),\n        ...(strategy && {strategy}),\n        ...(lazyCompile && {lazyCompile}),\n      };\n    }\n  }\n  return details;\n}\n\n// function toOnigurumaAst(pattern, options) {\n//   return parse(pattern, {\n//     flags: options?.flags ?? '',\n//     normalizeUnknownPropertyNames: true,\n//     rules: options?.rules ?? {},\n//     unicodePropertyMap: JsUnicodePropertyMap,\n//   });\n// }\n\n// function toRegexPlusAst(pattern, options) {\n//   return transform(toOnigurumaAst(pattern, options));\n// }\n\nexport {\n  EmulatedRegExp,\n  toRegExp,\n  toRegExpDetails,\n  // toOnigurumaAst,\n  // toRegexPlusAst,\n};\n", "const MAX = 4294967295;\nclass JavaScriptScanner {\n  constructor(patterns, options = {}) {\n    this.patterns = patterns;\n    this.options = options;\n    const {\n      forgiving = false,\n      cache,\n      regexConstructor\n    } = options;\n    if (!regexConstructor) {\n      throw new Error(\"Option `regexConstructor` is not provided\");\n    }\n    this.regexps = patterns.map((p) => {\n      if (typeof p !== \"string\") {\n        return p;\n      }\n      const cached = cache?.get(p);\n      if (cached) {\n        if (cached instanceof RegExp) {\n          return cached;\n        }\n        if (forgiving)\n          return null;\n        throw cached;\n      }\n      try {\n        const regex = regexConstructor(p);\n        cache?.set(p, regex);\n        return regex;\n      } catch (e) {\n        cache?.set(p, e);\n        if (forgiving)\n          return null;\n        throw e;\n      }\n    });\n  }\n  regexps;\n  findNextMatchSync(string, startPosition, _options) {\n    const str = typeof string === \"string\" ? string : string.content;\n    const pending = [];\n    function toResult(index, match, offset = 0) {\n      return {\n        index,\n        captureIndices: match.indices.map((indice) => {\n          if (indice == null) {\n            return {\n              start: MAX,\n              end: MAX,\n              length: 0\n            };\n          }\n          return {\n            start: indice[0] + offset,\n            end: indice[1] + offset,\n            length: indice[1] - indice[0]\n          };\n        })\n      };\n    }\n    for (let i = 0; i < this.regexps.length; i++) {\n      const regexp = this.regexps[i];\n      if (!regexp)\n        continue;\n      try {\n        regexp.lastIndex = startPosition;\n        const match = regexp.exec(str);\n        if (!match)\n          continue;\n        if (match.index === startPosition) {\n          return toResult(i, match, 0);\n        }\n        pending.push([i, match, 0]);\n      } catch (e) {\n        if (this.options.forgiving)\n          continue;\n        throw e;\n      }\n    }\n    if (pending.length) {\n      const minIndex = Math.min(...pending.map((m) => m[1].index));\n      for (const [i, match, offset] of pending) {\n        if (match.index === minIndex) {\n          return toResult(i, match, offset);\n        }\n      }\n    }\n    return null;\n  }\n}\n\nexport { JavaScriptScanner as J };\n", "import { toRegExp } from 'oniguruma-to-es';\nimport { J as JavaScriptScanner } from './shared/engine-javascript.hzpS1_41.mjs';\n\nfunction defaultJavaScriptRegexConstructor(pattern, options) {\n  return toRegExp(\n    pattern,\n    {\n      global: true,\n      hasIndices: true,\n      // This has no benefit for the standard JS engine, but it avoids a perf penalty for\n      // precompiled grammars when constructing extremely long patterns that aren't always used\n      lazyCompileLength: 3e3,\n      rules: {\n        // Needed since TextMate grammars merge backrefs across patterns\n        allowOrphanBackrefs: true,\n        // Improves search performance for generated regexes\n        asciiWordBoundaries: true,\n        // Follow `vscode-oniguruma` which enables this Oniguruma option by default\n        captureGroup: true,\n        // Oniguruma uses depth limit `20`; lowered here to keep regexes shorter and maybe\n        // sometimes faster, but can be increased if issues reported due to low limit\n        recursionLimit: 5,\n        // Oniguruma option for `^`->`\\A`, `$`->`\\Z`; improves search performance without any\n        // change in meaning since TM grammars search line by line\n        singleline: true\n      },\n      ...options\n    }\n  );\n}\nfunction createJavaScriptRegexEngine(options = {}) {\n  const _options = Object.assign(\n    {\n      target: \"auto\",\n      cache: /* @__PURE__ */ new Map()\n    },\n    options\n  );\n  _options.regexConstructor ||= (pattern) => defaultJavaScriptRegexConstructor(pattern, { target: _options.target });\n  return {\n    createScanner(patterns) {\n      return new JavaScriptScanner(patterns, _options);\n    },\n    createString(s) {\n      return {\n        content: s\n      };\n    }\n  };\n}\n\nexport { createJavaScriptRegexEngine, defaultJavaScriptRegexConstructor };\n"],
  "mappings": "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,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA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",
  "names": ["r", "i", "key", "a", "b", "v", "j", "root", "head", "token", "q", "m", "_a", "key", "_", "_", "_", "html", "svg", "key", "one", "all", "own", "_2", "_2", "stringify", "increment", "siblings", "own", "html", "_", "body", "html", "tbody", "head", "child", "svg", "key", "x", "y", "stringify", "_", "_2", "emptyChildren", "svg", "html", "key", "x", "p", "r", "_a", "i", "l", "token", "a", "b", "decorations", "d", "text", "stringify", "transform", "j", "_", "s", "i2", "root", "_b", "clone", "ShikiError", "Registry", "createHighlighter", "bundledLanguages", "bundledThemes", "core", "getSingletonHighlighter", "i", "_a", "a", "i", "ShikiError", "x", "key", "__publicField", "i", "_OnigString", "_a", "p", "s", "codeToHtml", "codeToHast", "codeToTokens", "codeToTokensBase", "codeToTokensWithThemes", "getLastGrammarState", "cpOf", "char", "getOrInsert", "map", "key", "defaultValue", "PosixClassNames", "r", "throwIfNullish", "value", "msg", "charClassOpenPattern", "r", "sharedEscapesPattern", "quantifierRe", "tokenRe", "charClassTokenRe", "tokenize", "pattern", "options", "opts", "flagProperties", "getFlagProperties", "xStack", "context", "isXOn", "tokens", "match", "result", "getTokenWithDetails", "potentialUnnamedCaptureTokens", "numNamedAndOptInUnnamedCaptures", "t", "i", "numCaptures", "splitEscapedNumberToken", "m", "lastIndex", "m0", "m1", "getAllTokensForCharClass", "createAssertionToken", "createSubroutineToken", "createBackreferenceToken", "createDirectiveToken", "createCharacterSetToken", "tokenizeSharedEscape", "tokenizeNamedCallout", "tokenizeFlagModifier", "createGroupOpenToken", "createGroupCloseToken", "end", "re", "kind", "createAlternatorToken", "splitQuantifierMatch", "createCharacterToken", "cpOf", "opener", "createCharacterClassOpenToken", "numCharClassesOpen", "createCharacterClassCloseToken", "tokenizeAnyTokenWithinCharClass", "raw", "posix", "PosixClassNames", "createCharacterClassHyphenToken", "createCharacterClassIntersectorToken", "inCharClass", "char1", "tokenizeControlCharacter", "tokenizeShorthand", "tokenizeUnicodeProperty", "bytes", "hex", "decoded", "encoder", "char", "byte", "getValidatedHexCharCode", "EscapeCharCodes", "createEscapedNumberToken", "value", "negate", "throwIfNullish", "createNamedCalloutToken", "tag", "args", "createQuantifierToken", "min", "max", "CalloutNames", "on", "off", "enabledFlags", "getFlagGroupSwitches", "disabledFlags", "flagChanges", "callout", "name", "argsArray", "arg", "arg0", "arg1", "arg2", "tokenizeQuantifier", "minStr", "maxStr", "limit", "lower", "p", "neg", "flags", "obj", "token", "matches", "str", "withG", "parts", "hasOnlyChild", "node", "props", "kid", "key", "isQuantifiable", "node", "quantifiableTypes", "parse", "pattern", "options", "opts", "tokenized", "tokenize", "walk", "parent", "state", "token", "context", "createAlternative", "parseAssertion", "parseBackreference", "createCharacter", "parseCharacterClassHyphen", "parseCharacterClassOpen", "parseCharacterSet", "createDirective", "parseGroupOpen", "createNamedCallout", "parseQuantifier", "parseSubroutine", "ast", "createRegex", "createFlags", "top", "node", "capturingGroups", "hasNumberedRef", "namedGroupsByName", "subroutines", "ref", "r", "kind", "createAssertion", "throwIfNullish", "raw", "hasKWrapper", "fromNum", "num", "isRelative", "numCapturesToLeft", "orphan", "createBackreference", "numberedRef", "_", "tokens", "prevSiblingNode", "nextToken", "nextNode", "createCharacterClassRange", "cpOf", "negate", "firstClassToken", "intersections", "createCharacterClass", "throwIfUnclosedCharacterClass", "cc", "value", "normalizeUnknownPropertyNames", "skipPropertyNameValidation", "unicodePropertyMap", "normalized", "slug", "PosixClassNames", "createUnicodeProperty", "createPosixClass", "createCharacterSet", "skipLookbehindValidation", "createByGroupKind", "isThisAbsenceFunction", "isThisLookbehind", "isLookbehind", "isThisNegLookbehind", "getOrInsert", "throwIfUnclosedGroup", "alt", "child", "msg", "isLookahead", "min", "max", "quantifiedNode", "isQuantifiable", "createQuantifier", "createSubroutine", "createAbsenceFunction", "getBodyForAlternativeContainer", "getBodyForElementContainer", "createCapturingGroup", "number", "isValidGroupName", "charCode", "hex", "flags", "createGroup", "atomic", "createLookaroundAssertion", "tag", "args", "name", "body", "normalizeUnicodePropertyName", "m", "traverse", "root", "visitor", "state", "traverseArray", "array", "parent", "i", "keyShift", "traverseNode", "node", "key", "container", "skipTraversingKidsOfPath", "path", "arrayContainer", "numericKey", "shifted", "newNode", "options", "traverseNew", "throwIfNullish", "newNodes", "keyShiftInLoop", "type", "anyTypeVisitor", "thisTypeVisitor", "enterAllFn", "enterThisFn", "value", "i", "re", "m", "token", "m", "f", "r", "m", "i", "incrementIfAtLeast", "f", "r", "key", "p", "w", "range", "i", "body", "A", "K", "Q", "_", "_a", "root", "b", "F", "m", "B", "C", "E", "slug", "o", "f", "node", "recursion", "k", "P", "a", "O", "J", "traverse", "number", "createCharacter", "createGroup", "createAlternative", "atomic", "re", "d", "parse", "p", "i", "m", "s"]
}
