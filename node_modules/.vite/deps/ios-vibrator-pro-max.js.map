{
  "version": 3,
  "sources": ["../../ios-vibrator-pro-max/dist/mergeVibrations.js", "../../ios-vibrator-pro-max/dist/pro-max-vibrator.js"],
  "sourcesContent": ["export function mergeVibrations(patterns, startAtTime = \"latest\") {\n    if (patterns.length === 0) {\n        return [];\n    }\n    // Normalize patterns to millisecond precision\n    const normalizedPatterns = patterns.map(([start, intervals]) => [\n        Math.round(start),\n        intervals.map((interval) => Math.max(0, Math.round(interval))), // Ensure at least 1ms\n    ]);\n    const startTimes = normalizedPatterns.map(([start]) => start);\n    const startTime = typeof startAtTime === \"number\"\n        ? startAtTime\n        : startAtTime === \"first\"\n            ? Math.min(...startTimes)\n            : Math.max(...startTimes);\n    // Calculate the maximum end time\n    const endTimes = normalizedPatterns.map(([start, pattern]) => {\n        return start + pattern.reduce((sum, dur) => sum + dur, 0);\n    });\n    const maxEndTime = Math.max(...endTimes);\n    // Create millisecond-precise timeline\n    const timeline = new Array(maxEndTime - startTime).fill(false);\n    // Fill timeline with vibration states\n    normalizedPatterns.forEach(([patternStart, intervals]) => {\n        let currentTime = patternStart;\n        let isVibrating = true;\n        for (const interval of intervals) {\n            if (isVibrating) {\n                // Calculate the effective range for this vibration interval\n                const fromIndex = Math.max(0, currentTime - startTime);\n                const toIndex = Math.max(0, Math.min(timeline.length, currentTime - startTime + interval));\n                timeline.fill(true, fromIndex, toIndex);\n            }\n            currentTime += interval;\n            isVibrating = !isVibrating;\n        }\n    });\n    // Convert timeline back to intervals\n    const result = [];\n    const length = timeline.length;\n    let currentState = timeline[0];\n    let currentCount = 0;\n    // Process the timeline including the final state transition\n    for (let i = 0; i <= length; i++) {\n        const newState = i < length ? timeline[i] : !currentState;\n        if (newState !== currentState) {\n            if (currentCount > 0) {\n                result.push(currentCount);\n            }\n            currentState = newState;\n            currentCount = 1;\n        }\n        else {\n            currentCount++;\n        }\n    }\n    if (result.length > 0 && !timeline[0]) {\n        result.unshift(0);\n    }\n    if (result.length > 0 && !timeline[timeline.length - 1]) {\n        result.pop();\n    }\n    return result;\n}\nexport function trimVibrations(amount, patterns) {\n    // Initialize result array\n    const result = [];\n    // Apply remaining amount to the first element\n    let remainingAmount = amount;\n    // Process each vibration in the pattern\n    for (let i = 0; i < patterns.length; i++) {\n        const currentVibration = patterns[i];\n        // If we still have amount to trim\n        if (remainingAmount > 0) {\n            // Calculate what's left after trimming\n            const remaining = currentVibration - remainingAmount;\n            // If there's duration left, add it to the result\n            if (remaining > 0) {\n                if (!result.length && i % 2) {\n                    result.push(0);\n                }\n                result.push(remaining);\n                remainingAmount = 0; // Used all the trim amount\n            }\n            else {\n                // This vibration was completely consumed\n                remainingAmount = Math.abs(remaining); // Carry over the remaining amount\n            }\n        }\n        else {\n            if (!result.length && i % 2) {\n                result.push(0);\n            }\n            // No more trimming needed, add the vibration as is\n            result.push(currentVibration);\n        }\n    }\n    return result;\n}\n", "// Sorry Tim Cook, PWAs deserve some love too...\nimport { trimVibrations } from \"./mergeVibrations.js\";\nconst SAFARI_VERSION = getSafariVersion();\nconst MAGIC_NUMBER = 26.26;\nconst GRANT_TIMEOUT = 1000;\nconst polyfillKind = !navigator.vibrate && SAFARI_VERSION\n    ? SAFARI_VERSION >= 18.4\n        ? \"granted\"\n        : SAFARI_VERSION >= 18\n            ? \"full\"\n            : null\n    : null;\nlet trigger;\nlet timer;\nlet lastGrant = null;\nlet vibration = [Date.now(), []];\nlet blockMainThread = false;\nexport function enableMainThreadBlocking(enabled) {\n    blockMainThread = enabled;\n}\nfunction teachSafariHowToVibe(rawPatterns) {\n    const patterns = typeof rawPatterns === \"number\" ? [rawPatterns] : [...rawPatterns];\n    if (!patterns.length ||\n        patterns.some((pattern) => typeof pattern !== \"number\")) {\n        return false;\n    }\n    vibration = [Date.now(), patterns];\n    return true;\n}\nasync function grantedVibrate() {\n    lastGrant = Date.now();\n    let adjustment = 0;\n    while (true) {\n        vibration = [\n            Date.now(),\n            trimVibrations(Date.now() - vibration[0], vibration[1]),\n        ];\n        const [vibrateMs, waitMs] = vibration[1];\n        if (vibrateMs == null) {\n            if (!getTimeUntilGrantExpires()) {\n                return;\n            }\n            await asyncWait(1);\n            continue;\n        }\n        const vibrate = vibrateMs > 0;\n        const waitTime = (vibrate ? MAGIC_NUMBER : waitMs ?? 0) + adjustment;\n        if (vibrate) {\n            trigger.click();\n        }\n        adjustment = await wait(waitTime);\n    }\n}\nfunction getTimeUntilGrantExpires() {\n    if (polyfillKind === \"full\") {\n        return Infinity;\n    }\n    if (!lastGrant) {\n        return 0;\n    }\n    return Math.max(0, GRANT_TIMEOUT - (Date.now() - lastGrant));\n}\nasync function wait(duration) {\n    const timeUntilGrantExpires = getTimeUntilGrantExpires();\n    const grantTimeout = timeUntilGrantExpires - 150;\n    if (blockMainThread && grantTimeout <= 0) {\n        return blockingWait(duration);\n    }\n    if (!blockMainThread || grantTimeout > duration) {\n        return asyncWait(duration);\n    }\n    const adjustment = await asyncWait(grantTimeout);\n    const wait = duration - grantTimeout - adjustment;\n    return blockingWait(wait);\n}\nfunction blockingWait(ms) {\n    if (ms < 0) {\n        return ms;\n    }\n    const start = Date.now();\n    while (Date.now() - start < ms) { }\n    return 0;\n}\nasync function asyncWait(ms) {\n    const start = Date.now();\n    await new Promise((resolve) => {\n        clearTimeout(timer);\n        timer = setTimeout(resolve, ms);\n    });\n    return ms - (Date.now() - start);\n}\nif (typeof window !== \"undefined\" &&\n    typeof document !== \"undefined\" &&\n    typeof navigator !== \"undefined\" &&\n    polyfillKind) {\n    navigator.vibrate = teachSafariHowToVibe;\n    // Setup trigger elements\n    trigger = document.createElement(\"label\");\n    trigger.ariaHidden = \"true\";\n    trigger.style.display = \"none\";\n    const triggerInput = document.createElement(\"input\");\n    triggerInput.type = \"checkbox\";\n    triggerInput.setAttribute(\"switch\", \"\");\n    trigger.appendChild(triggerInput);\n    // Authorization handler\n    function authorizeVibrations({ target }) {\n        if (target === trigger || target === triggerInput) {\n            return;\n        }\n        grantedVibrate();\n    }\n    // Add event listeners\n    window.addEventListener(\"click\", authorizeVibrations);\n    window.addEventListener(\"touchend\", authorizeVibrations);\n    window.addEventListener(\"keyup\", authorizeVibrations);\n    window.addEventListener(\"keypress\", authorizeVibrations);\n    // Add trigger to document\n    if (document.head) {\n        document.head.appendChild(trigger);\n    }\n    else {\n        setTimeout(() => document.head.appendChild(trigger), 0);\n    }\n}\nfunction getSafariVersion() {\n    const userAgent = navigator.userAgent;\n    if (userAgent.indexOf(\"Safari\") !== -1 &&\n        userAgent.indexOf(\"Chrome\") === -1) {\n        const versionRegex = /Version\\/(\\d+(\\.\\d+)?)/;\n        const match = userAgent.match(versionRegex);\n        if (match && match[1]) {\n            return parseFloat(match[1]);\n        }\n    }\n    return null;\n}\n"],
  "mappings": "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",
  "names": ["wait"]
}
